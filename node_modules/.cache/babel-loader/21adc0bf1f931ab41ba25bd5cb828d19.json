{"ast":null,"code":"/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\n\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\n(function SM2(window, _undefined) {\n  /* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\n  'use strict';\n\n  if (!window || !window.document) {\n    // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\n    // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\n    throw new Error('SoundManager requires a browser with window and document objects.');\n  }\n\n  var soundManager = null;\n  /**\r\n   * The SoundManager constructor.\r\n   *\r\n   * @constructor\r\n   * @param {string} smURL Optional: Path to SWF files\r\n   * @param {string} smID Optional: The ID to use for the SWF container element\r\n   * @this {SoundManager}\r\n   * @return {SoundManager} The new SoundManager instance\r\n   */\n\n  function SoundManager(smURL, smID) {\n    /**\r\n     * soundManager configuration options list\r\n     * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n     * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n     */\n    this.setupOptions = {\n      url: smURL || null,\n      // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\n      flashVersion: 8,\n      // flash build to use (8 or 9.) Some API features require 9.\n      debugMode: true,\n      // enable debugging output (console.log() with HTML fallback)\n      debugFlash: false,\n      // enable debugging output inside SWF, troubleshoot Flash/browser issues\n      useConsole: true,\n      // use console.log() if available (otherwise, writes to #soundmanager-debug element)\n      consoleOnly: true,\n      // if console is being used, do not create/write to #soundmanager-debug\n      waitForWindowLoad: false,\n      // force SM2 to wait for window.onload() before trying to call soundManager.onload()\n      bgColor: '#ffffff',\n      // SWF background color. N/A when wmode = 'transparent'\n      useHighPerformance: false,\n      // position:fixed flash movie can help increase js/flash speed, minimize lag\n      flashPollingInterval: null,\n      // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\n      html5PollingInterval: null,\n      // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\n      flashLoadTimeout: 1000,\n      // msec to wait for flash movie to load before failing (0 = infinity)\n      wmode: null,\n      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\n      allowScriptAccess: 'always',\n      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\n      useFlashBlock: false,\n      // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\n      useHTML5Audio: true,\n      // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\n      forceUseGlobalHTML5Audio: false,\n      // if true, a single Audio() object is used for all sounds - and only one can play at a time.\n      ignoreMobileRestrictions: false,\n      // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\n      html5Test: /^(probably|maybe)$/i,\n      // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\n      preferFlash: false,\n      // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\n      noSWFCache: false,\n      // if true, appends ?ts={date} to break aggressive SWF caching.\n      idPrefix: 'sound' // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\n\n    };\n    this.defaultOptions = {\n      /**\r\n       * the default configuration for sound objects made with createSound() and related methods\r\n       * eg., volume, auto-load behaviour and so forth\r\n       */\n      autoLoad: false,\n      // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\n      autoPlay: false,\n      // enable playing of file as soon as possible (much faster if \"stream\" is true)\n      from: null,\n      // position to start playback within a sound (msec), default = beginning\n      loops: 1,\n      // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\n      onid3: null,\n      // callback function for \"ID3 data is added/available\"\n      onerror: null,\n      // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\n      onload: null,\n      // callback function for \"load finished\"\n      whileloading: null,\n      // callback function for \"download progress update\" (X of Y bytes received)\n      onplay: null,\n      // callback for \"play\" start\n      onpause: null,\n      // callback for \"pause\"\n      onresume: null,\n      // callback for \"resume\" (pause toggle)\n      whileplaying: null,\n      // callback during play (position update)\n      onposition: null,\n      // object containing times and function callbacks for positions of interest\n      onstop: null,\n      // callback for \"user stop\"\n      onfinish: null,\n      // callback function for \"sound finished playing\"\n      multiShot: true,\n      // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\n      multiShotEvents: false,\n      // fire multiple sound events (currently onfinish() only) when multiShot is enabled\n      position: null,\n      // offset (milliseconds) to seek to within loaded sound data.\n      pan: 0,\n      // \"pan\" settings, left-to-right, -100 to 100\n      playbackRate: 1,\n      // rate at which to play the sound (HTML5-only)\n      stream: true,\n      // allows playing before entire file has loaded (recommended)\n      to: null,\n      // position to end playback within a sound (msec), default = end\n      type: null,\n      // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\n      usePolicyFile: false,\n      // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\n      volume: 100 // self-explanatory. 0-100, the latter being the max.\n\n    };\n    this.flash9Options = {\n      /**\r\n       * flash 9-only options,\r\n       * merged into defaultOptions if flash 9 is being used\r\n       */\n      onfailure: null,\n      // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\n      isMovieStar: null,\n      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\n      usePeakData: false,\n      // enable left/right channel peak (level) data\n      useWaveformData: false,\n      // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\n      useEQData: false,\n      // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\n      onbufferchange: null,\n      // callback for \"isBuffering\" property change\n      ondataerror: null // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\n\n    };\n    this.movieStarOptions = {\n      /**\r\n       * flash 9.0r115+ MPEG4 audio options,\r\n       * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n       */\n      bufferTime: 3,\n      // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\n      serverURL: null,\n      // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\n      onconnect: null,\n      // rtmp: callback for connection to flash media server\n      duration: null // rtmp: song duration (msec)\n\n    };\n    this.audioFormats = {\n      /**\r\n       * determines HTML5 support + flash requirements.\r\n       * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n       * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n       */\n      mp3: {\n        type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\n        required: true\n      },\n      mp4: {\n        related: ['aac', 'm4a', 'm4b'],\n        // additional formats under the MP4 container\n        type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\n        required: false\n      },\n      ogg: {\n        type: ['audio/ogg; codecs=vorbis'],\n        required: false\n      },\n      opus: {\n        type: ['audio/ogg; codecs=opus', 'audio/opus'],\n        required: false\n      },\n      wav: {\n        type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\n        required: false\n      },\n      flac: {\n        type: ['audio/flac'],\n        required: false\n      }\n    }; // HTML attributes (id + class names) for the SWF container\n\n    this.movieID = 'sm2-container';\n    this.id = smID || 'sm2movie';\n    this.debugID = 'soundmanager-debug';\n    this.debugURLParam = /([#?&])debug=1/i; // dynamic attributes\n\n    this.versionNumber = 'V2.97a.20170601';\n    this.version = null;\n    this.movieURL = null;\n    this.altURL = null;\n    this.swfLoaded = false;\n    this.enabled = false;\n    this.oMC = null;\n    this.sounds = {};\n    this.soundIDs = [];\n    this.muted = false;\n    this.didFlashBlock = false;\n    this.filePattern = null;\n    this.filePatterns = {\n      flash8: /\\.mp3(\\?.*)?$/i,\n      flash9: /\\.mp3(\\?.*)?$/i\n    }; // support indicators, set at init\n\n    this.features = {\n      buffering: false,\n      peakData: false,\n      waveformData: false,\n      eqData: false,\n      movieStar: false\n    }; // flash sandbox info, used primarily in troubleshooting\n\n    this.sandbox = {\n      // <d>\n      type: null,\n      types: {\n        remote: 'remote (domain-based) rules',\n        localWithFile: 'local with file access (no internet access)',\n        localWithNetwork: 'local with network (internet access only, no local access)',\n        localTrusted: 'local, trusted (local+internet access)'\n      },\n      description: null,\n      noRemote: null,\n      noLocal: null // </d>\n\n    };\n    /**\r\n     * format support (html5/flash)\r\n     * stores canPlayType() results based on audioFormats.\r\n     * eg. { mp3: boolean, mp4: boolean }\r\n     * treat as read-only.\r\n     */\n\n    this.html5 = {\n      usingFlash: null // set if/when flash fallback is needed\n\n    }; // file type support hash\n\n    this.flash = {}; // determined at init time\n\n    this.html5Only = false; // used for special cases (eg. iPad/iPhone/palm OS?)\n\n    this.ignoreFlash = false;\n    /**\r\n     * a few private internals (OK, a lot. :D)\r\n     */\n\n    var SMSound,\n        sm2 = this,\n        globalHTML5Audio = null,\n        flash = null,\n        sm = 'soundManager',\n        smc = sm + ': ',\n        h5 = 'HTML5::',\n        id,\n        ua = navigator.userAgent,\n        wl = window.location.href.toString(),\n        doc = document,\n        doNothing,\n        setProperties,\n        init,\n        fV,\n        on_queue = [],\n        debugOpen = true,\n        debugTS,\n        didAppend = false,\n        appendSuccess = false,\n        didInit = false,\n        disabled = false,\n        windowLoaded = false,\n        _wDS,\n        wdCount = 0,\n        initComplete,\n        mixin,\n        assign,\n        extraOptions,\n        addOnEvent,\n        processOnEvents,\n        initUserOnload,\n        delayWaitForEI,\n        waitForEI,\n        rebootIntoHTML5,\n        setVersionInfo,\n        handleFocus,\n        strings,\n        initMovie,\n        domContentLoaded,\n        winOnLoad,\n        didDCLoaded,\n        getDocument,\n        createMovie,\n        catchError,\n        setPolling,\n        initDebug,\n        debugLevels = ['log', 'info', 'warn', 'error'],\n        defaultFlashVersion = 8,\n        disableObject,\n        failSafely,\n        normalizeMovieURL,\n        oRemoved = null,\n        oRemovedHTML = null,\n        str,\n        flashBlockHandler,\n        getSWFCSS,\n        swfCSS,\n        toggleDebug,\n        loopFix,\n        policyFix,\n        complain,\n        idCheck,\n        waitingForEI = false,\n        initPending = false,\n        startTimer,\n        stopTimer,\n        timerExecute,\n        h5TimerCount = 0,\n        h5IntervalTimer = null,\n        parseURL,\n        messages = [],\n        canIgnoreFlash,\n        needsFlash = null,\n        featureCheck,\n        html5OK,\n        html5CanPlay,\n        html5ErrorCodes,\n        html5Ext,\n        html5Unload,\n        domContentLoadedIE,\n        testHTML5,\n        event,\n        slice = Array.prototype.slice,\n        useGlobalHTML5Audio = false,\n        lastGlobalHTML5URL,\n        hasFlash,\n        detectFlash,\n        badSafariFix,\n        html5_events,\n        showSupport,\n        flushMessages,\n        wrapCallback,\n        idCounter = 0,\n        didSetup,\n        msecScale = 1000,\n        is_iDevice = ua.match(/(ipad|iphone|ipod)/i),\n        isAndroid = ua.match(/android/i),\n        isIE = ua.match(/msie|trident/i),\n        isWebkit = ua.match(/webkit/i),\n        isSafari = ua.match(/safari/i) && !ua.match(/chrome/i),\n        isOpera = ua.match(/opera/i),\n        mobileHTML5 = ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid,\n        isBadSafari = !wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i),\n        // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\n    hasConsole = window.console !== _undefined && console.log !== _undefined,\n        isFocused = doc.hasFocus !== _undefined ? doc.hasFocus() : null,\n        tryInitOnFocus = isSafari && (doc.hasFocus === _undefined || !doc.hasFocus()),\n        okToDisable = !tryInitOnFocus,\n        flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\n        emptyURL = 'about:blank',\n        // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\n    emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==',\n        // tiny WAV for HTML5 unloading\n    overHTTP = doc.location ? doc.location.protocol.match(/http/i) : null,\n        http = !overHTTP ? '//' : '',\n        // mp3, mp4, aac etc.\n    netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\n        // Flash v9.0r115+ \"moviestar\" formats\n    netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\n        netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n\n    this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\n    // use altURL if not \"online\"\n\n    this.useAltURL = !overHTTP;\n    swfCSS = {\n      swfBox: 'sm2-object-box',\n      swfDefault: 'movieContainer',\n      swfError: 'swf_error',\n      // SWF loaded, but SM2 couldn't start (other error)\n      swfTimedout: 'swf_timedout',\n      swfLoaded: 'swf_loaded',\n      swfUnblocked: 'swf_unblocked',\n      // or loaded OK\n      sm2Debug: 'sm2_debug',\n      highPerf: 'high_performance',\n      flashDebug: 'flash_debug'\n    };\n    /**\r\n     * HTML5 error codes, per W3C\r\n     * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n     * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n     * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n     * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n     * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n     */\n\n    html5ErrorCodes = [null, 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED'];\n    /**\r\n     * basic HTML5 Audio() support test\r\n     * try...catch because of IE 9 \"not implemented\" nonsense\r\n     * https://github.com/Modernizr/Modernizr/issues/224\r\n     */\n\n    this.hasHTML5 = function () {\n      try {\n        // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\n        return Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined;\n      } catch (e) {\n        return false;\n      }\n    }();\n    /**\r\n     * Public SoundManager API\r\n     * -----------------------\r\n     */\n\n    /**\r\n     * Configures top-level soundManager properties.\r\n     *\r\n     * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n     * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n     */\n\n\n    this.setup = function (options) {\n      var noURL = !sm2.url; // warn if flash options have already been applied\n\n      if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\n        complain(str('setupLate'));\n      } // TODO: defer: true?\n\n\n      assign(options);\n\n      if (!useGlobalHTML5Audio) {\n        if (mobileHTML5) {\n          // force the singleton HTML5 pattern on mobile, by default.\n          if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\n            messages.push(strings.globalHTML5);\n            useGlobalHTML5Audio = true;\n          }\n        } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\n          // only apply singleton HTML5 on desktop if forced.\n          messages.push(strings.globalHTML5);\n          useGlobalHTML5Audio = true;\n        }\n      }\n\n      if (!didSetup && mobileHTML5) {\n        if (sm2.setupOptions.ignoreMobileRestrictions) {\n          messages.push(strings.ignoreMobile);\n        } else {\n          // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\n          // <d>\n          if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\n            // notify that defaults are being changed.\n            sm2._wD(strings.mobileUA);\n          } // </d>\n\n\n          sm2.setupOptions.useHTML5Audio = true;\n          sm2.setupOptions.preferFlash = false;\n\n          if (is_iDevice) {\n            // no flash here.\n            sm2.ignoreFlash = true;\n          } else if (isAndroid && !ua.match(/android\\s2\\.3/i) || !isAndroid) {\n            /**\r\n             * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n             * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n             * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n             */\n            // <d>\n            sm2._wD(strings.globalHTML5); // </d>\n\n\n            useGlobalHTML5Audio = true;\n          }\n        }\n      } // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\n\n\n      if (options) {\n        if (noURL && didDCLoaded && options.url !== _undefined) {\n          sm2.beginDelayedInit();\n        } // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\n\n\n        if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\n          setTimeout(domContentLoaded, 1);\n        }\n      }\n\n      didSetup = true;\n      return sm2;\n    };\n\n    this.ok = function () {\n      return needsFlash ? didInit && !disabled : sm2.useHTML5Audio && sm2.hasHTML5;\n    };\n\n    this.supported = this.ok; // legacy\n\n    this.getMovie = function (movie_id) {\n      // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\n      return id(movie_id) || doc[movie_id] || window[movie_id];\n    };\n    /**\r\n     * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n     *\r\n     * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n     * @return {object} SMSound The new SMSound object.\r\n     */\n\n\n    this.createSound = function (oOptions, _url) {\n      var cs,\n          cs_string,\n          options,\n          oSound = null; // <d>\n\n      cs = sm + '.createSound(): ';\n      cs_string = cs + str(!didInit ? 'notReady' : 'notOK'); // </d>\n\n      if (!didInit || !sm2.ok()) {\n        complain(cs_string);\n        return false;\n      }\n\n      if (_url !== _undefined) {\n        // function overloading in JS! :) ... assume simple createSound(id, url) use case.\n        oOptions = {\n          id: oOptions,\n          url: _url\n        };\n      } // inherit from defaultOptions\n\n\n      options = mixin(oOptions);\n      options.url = parseURL(options.url); // generate an id, if needed.\n\n      if (options.id === _undefined) {\n        options.id = sm2.setupOptions.idPrefix + idCounter++;\n      } // <d>\n\n\n      if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\n        sm2._wD(cs + str('badID', options.id), 2);\n      }\n\n      sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1); // </d>\n\n\n      if (idCheck(options.id, true)) {\n        sm2._wD(cs + options.id + ' exists', 1);\n\n        return sm2.sounds[options.id];\n      }\n\n      function make() {\n        options = loopFix(options);\n        sm2.sounds[options.id] = new SMSound(options);\n        sm2.soundIDs.push(options.id);\n        return sm2.sounds[options.id];\n      }\n\n      if (html5OK(options)) {\n        oSound = make(); // <d>\n\n        if (!sm2.html5Only) {\n          sm2._wD(options.id + ': Using HTML5');\n        } // </d>\n\n\n        oSound._setup_html5(options);\n      } else {\n        if (sm2.html5Only) {\n          sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\n\n          return make();\n        } // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\n\n\n        if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\n          // data: URIs not supported by Flash, either.\n          sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\n\n          return make();\n        }\n\n        if (fV > 8) {\n          if (options.isMovieStar === null) {\n            // attempt to detect MPEG-4 formats\n            options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || options.url && options.url.match(netStreamPattern));\n          } // <d>\n\n\n          if (options.isMovieStar) {\n            sm2._wD(cs + 'using MovieStar handling');\n\n            if (options.loops > 1) {\n              _wDS('noNSLoop');\n            }\n          } // </d>\n\n        }\n\n        options = policyFix(options, cs);\n        oSound = make();\n\n        if (fV === 8) {\n          flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\n        } else {\n          flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, options.isMovieStar ? options.bufferTime : false, options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\n\n          if (!options.serverURL) {\n            // We are connected immediately\n            oSound.connected = true;\n\n            if (options.onconnect) {\n              options.onconnect.apply(oSound);\n            }\n          }\n        }\n\n        if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\n          // call load for non-rtmp streams\n          oSound.load(options);\n        }\n      } // rtmp will play in onconnect\n\n\n      if (!options.serverURL && options.autoPlay) {\n        oSound.play();\n      }\n\n      return oSound;\n    };\n    /**\r\n     * Destroys a SMSound sound object instance.\r\n     *\r\n     * @param {string} sID The ID of the sound to destroy\r\n     */\n\n\n    this.destroySound = function (sID, _bFromSound) {\n      // explicitly destroy a sound before normal page unload, etc.\n      if (!idCheck(sID)) return false;\n      var oS = sm2.sounds[sID],\n          i;\n      oS.stop(); // Disable all callbacks after stop(), when the sound is being destroyed\n\n      oS._iO = {};\n      oS.unload();\n\n      for (i = 0; i < sm2.soundIDs.length; i++) {\n        if (sm2.soundIDs[i] === sID) {\n          sm2.soundIDs.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!_bFromSound) {\n        // ignore if being called from SMSound instance\n        oS.destruct(true);\n      }\n\n      oS = null;\n      delete sm2.sounds[sID];\n      return true;\n    };\n    /**\r\n     * Calls the load() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {object} oOptions Optional: Sound options\r\n     */\n\n\n    this.load = function (sID, oOptions) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].load(oOptions);\n    };\n    /**\r\n     * Calls the unload() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     */\n\n\n    this.unload = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].unload();\n    };\n    /**\r\n     * Calls the onPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.onPosition = function (sID, nPosition, oMethod, oScope) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\n    }; // legacy/backwards-compability: lower-case method name\n\n\n    this.onposition = this.onPosition;\n    /**\r\n     * Calls the clearOnPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod Optional: The relevant callback to fire\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.clearOnPosition = function (sID, nPosition, oMethod) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\n    };\n    /**\r\n     * Calls the play() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {object} oOptions Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.play = function (sID, oOptions) {\n      var result = null,\n          // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\n      overloaded = oOptions && !(oOptions instanceof Object);\n\n      if (!didInit || !sm2.ok()) {\n        complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\n        return false;\n      }\n\n      if (!idCheck(sID, overloaded)) {\n        // no sound found for the given ID. Bail.\n        if (!overloaded) return false;\n\n        if (overloaded) {\n          oOptions = {\n            url: oOptions\n          };\n        }\n\n        if (oOptions && oOptions.url) {\n          // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\n          sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\n\n          oOptions.id = sID;\n          result = sm2.createSound(oOptions).play();\n        }\n      } else if (overloaded) {\n        // existing sound object case\n        oOptions = {\n          url: oOptions\n        };\n      }\n\n      if (result === null) {\n        // default case\n        result = sm2.sounds[sID].play(oOptions);\n      }\n\n      return result;\n    }; // just for convenience\n\n\n    this.start = this.play;\n    /**\r\n     * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.setPlaybackRate = function (sID, rate, allowOverride) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\n    };\n    /**\r\n     * Calls the setPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.setPosition = function (sID, nMsecOffset) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPosition(nMsecOffset);\n    };\n    /**\r\n     * Calls the stop() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.stop = function (sID) {\n      if (!idCheck(sID)) return false;\n\n      sm2._wD(sm + '.stop(' + sID + ')', 1);\n\n      return sm2.sounds[sID].stop();\n    };\n    /**\r\n     * Stops all currently-playing sounds.\r\n     */\n\n\n    this.stopAll = function () {\n      var oSound;\n\n      sm2._wD(sm + '.stopAll()', 1);\n\n      for (oSound in sm2.sounds) {\n        if (sm2.sounds.hasOwnProperty(oSound)) {\n          // apply only to sound objects\n          sm2.sounds[oSound].stop();\n        }\n      }\n    };\n    /**\r\n     * Calls the pause() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.pause = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].pause();\n    };\n    /**\r\n     * Pauses all currently-playing sounds.\r\n     */\n\n\n    this.pauseAll = function () {\n      var i;\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].pause();\n      }\n    };\n    /**\r\n     * Calls the resume() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.resume = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].resume();\n    };\n    /**\r\n     * Resumes all currently-paused sounds.\r\n     */\n\n\n    this.resumeAll = function () {\n      var i;\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].resume();\n      }\n    };\n    /**\r\n     * Calls the togglePause() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.togglePause = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].togglePause();\n    };\n    /**\r\n     * Calls the setPan() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.setPan = function (sID, nPan) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPan(nPan);\n    };\n    /**\r\n     * Calls the setVolume() method of a SMSound object by ID\r\n     * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.setVolume = function (sID, nVol) {\n      // setVolume(50) function overloading case - apply to all sounds\n      var i, j;\n\n      if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\n        for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\n          sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\n        }\n\n        return false;\n      } // setVolume('mySound', 50) case\n\n\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setVolume(nVol);\n    };\n    /**\r\n     * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n     *\r\n     * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n     */\n\n\n    this.mute = function (sID) {\n      var i = 0;\n\n      if (sID instanceof String) {\n        sID = null;\n      }\n\n      if (!sID) {\n        sm2._wD(sm + '.mute(): Muting all sounds');\n\n        for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n          sm2.sounds[sm2.soundIDs[i]].mute();\n        }\n\n        sm2.muted = true;\n      } else {\n        if (!idCheck(sID)) return false;\n\n        sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\n\n        return sm2.sounds[sID].mute();\n      }\n\n      return true;\n    };\n    /**\r\n     * Mutes all sounds.\r\n     */\n\n\n    this.muteAll = function () {\n      sm2.mute();\n    };\n    /**\r\n     * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n     *\r\n     * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n     */\n\n\n    this.unmute = function (sID) {\n      var i;\n\n      if (sID instanceof String) {\n        sID = null;\n      }\n\n      if (!sID) {\n        sm2._wD(sm + '.unmute(): Unmuting all sounds');\n\n        for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n          sm2.sounds[sm2.soundIDs[i]].unmute();\n        }\n\n        sm2.muted = false;\n      } else {\n        if (!idCheck(sID)) return false;\n\n        sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\n\n        return sm2.sounds[sID].unmute();\n      }\n\n      return true;\n    };\n    /**\r\n     * Unmutes all sounds.\r\n     */\n\n\n    this.unmuteAll = function () {\n      sm2.unmute();\n    };\n    /**\r\n     * Calls the toggleMute() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.toggleMute = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].toggleMute();\n    };\n    /**\r\n     * Retrieves the memory used by the flash plugin.\r\n     *\r\n     * @return {number} The amount of memory in use\r\n     */\n\n\n    this.getMemoryUse = function () {\n      // flash-only\n      var ram = 0;\n\n      if (flash && fV !== 8) {\n        ram = parseInt(flash._getMemoryUse(), 10);\n      }\n\n      return ram;\n    };\n    /**\r\n     * Undocumented: NOPs soundManager and all SMSound objects.\r\n     */\n\n\n    this.disable = function (bNoDisable) {\n      // destroy all functions\n      var i;\n\n      if (bNoDisable === _undefined) {\n        bNoDisable = false;\n      } // already disabled?\n\n\n      if (disabled) return false;\n      disabled = true;\n\n      _wDS('shutdown', 1);\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        disableObject(sm2.sounds[sm2.soundIDs[i]]);\n      }\n\n      disableObject(sm2); // fire \"complete\", despite fail\n\n      initComplete(bNoDisable);\n      event.remove(window, 'load', initUserOnload);\n      return true;\n    };\n    /**\r\n     * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n     */\n\n\n    this.canPlayMIME = function (sMIME) {\n      var result;\n\n      if (sm2.hasHTML5) {\n        result = html5CanPlay({\n          type: sMIME\n        });\n      }\n\n      if (!result && needsFlash) {\n        // if flash 9, test netStream (movieStar) types as well.\n        result = sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null; // TODO: make less \"weird\" (per JSLint)\n      }\n\n      return result;\n    };\n    /**\r\n     * Determines playability of a URL based on audio support.\r\n     *\r\n     * @param {string} sURL The URL to test\r\n     * @return {boolean} URL playability\r\n     */\n\n\n    this.canPlayURL = function (sURL) {\n      var result;\n\n      if (sm2.hasHTML5) {\n        result = html5CanPlay({\n          url: sURL\n        });\n      }\n\n      if (!result && needsFlash) {\n        result = sURL && sm2.ok() ? !!sURL.match(sm2.filePattern) : null;\n      }\n\n      return result;\n    };\n    /**\r\n     * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n     *\r\n     * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n     * @return {boolean} URL playability\r\n     */\n\n\n    this.canPlayLink = function (oLink) {\n      if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\n      return sm2.canPlayURL(oLink.href);\n    };\n    /**\r\n     * Retrieves a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n\n    this.getSoundById = function (sID, _suppressDebug) {\n      if (!sID) return null;\n      var result = sm2.sounds[sID]; // <d>\n\n      if (!result && !_suppressDebug) {\n        sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\n      } // </d>\n\n\n      return result;\n    };\n    /**\r\n     * Queues a callback for execution when SoundManager has successfully initialized.\r\n     *\r\n     * @param {function} oMethod The callback method to fire\r\n     * @param {object} oScope Optional: The scope to apply to the callback\r\n     */\n\n\n    this.onready = function (oMethod, oScope) {\n      var sType = 'onready',\n          result = false;\n\n      if (typeof oMethod === 'function') {\n        // <d>\n        if (didInit) {\n          sm2._wD(str('queue', sType));\n        } // </d>\n\n\n        if (!oScope) {\n          oScope = window;\n        }\n\n        addOnEvent(sType, oMethod, oScope);\n        processOnEvents();\n        result = true;\n      } else {\n        throw str('needFunction', sType);\n      }\n\n      return result;\n    };\n    /**\r\n     * Queues a callback for execution when SoundManager has failed to initialize.\r\n     *\r\n     * @param {function} oMethod The callback method to fire\r\n     * @param {object} oScope Optional: The scope to apply to the callback\r\n     */\n\n\n    this.ontimeout = function (oMethod, oScope) {\n      var sType = 'ontimeout',\n          result = false;\n\n      if (typeof oMethod === 'function') {\n        // <d>\n        if (didInit) {\n          sm2._wD(str('queue', sType));\n        } // </d>\n\n\n        if (!oScope) {\n          oScope = window;\n        }\n\n        addOnEvent(sType, oMethod, oScope);\n        processOnEvents({\n          type: sType\n        });\n        result = true;\n      } else {\n        throw str('needFunction', sType);\n      }\n\n      return result;\n    };\n    /**\r\n     * Writes console.log()-style debug output to a console or in-browser element.\r\n     * Applies when debugMode = true\r\n     *\r\n     * @param {string} sText The console message\r\n     * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n     */\n\n\n    this._writeDebug = function (sText, sTypeOrObject) {\n      // pseudo-private console.log()-style output\n      // <d>\n      var sDID = 'soundmanager-debug',\n          o,\n          oItem;\n      if (!sm2.setupOptions.debugMode) return false;\n\n      if (hasConsole && sm2.useConsole) {\n        if (sTypeOrObject && typeof sTypeOrObject === 'object') {\n          // object passed; dump to console.\n          console.log(sText, sTypeOrObject);\n        } else if (debugLevels[sTypeOrObject] !== _undefined) {\n          console[debugLevels[sTypeOrObject]](sText);\n        } else {\n          console.log(sText);\n        }\n\n        if (sm2.consoleOnly) return true;\n      }\n\n      o = id(sDID);\n      if (!o) return false;\n      oItem = doc.createElement('div');\n\n      if (++wdCount % 2 === 0) {\n        oItem.className = 'sm2-alt';\n      }\n\n      if (sTypeOrObject === _undefined) {\n        sTypeOrObject = 0;\n      } else {\n        sTypeOrObject = parseInt(sTypeOrObject, 10);\n      }\n\n      oItem.appendChild(doc.createTextNode(sText));\n\n      if (sTypeOrObject) {\n        if (sTypeOrObject >= 2) {\n          oItem.style.fontWeight = 'bold';\n        }\n\n        if (sTypeOrObject === 3) {\n          oItem.style.color = '#ff3333';\n        }\n      } // top-to-bottom\n      // o.appendChild(oItem);\n      // bottom-to-top\n\n\n      o.insertBefore(oItem, o.firstChild);\n      o = null; // </d>\n\n      return true;\n    }; // <d>\n    // last-resort debugging option\n\n\n    if (wl.indexOf('sm2-debug=alert') !== -1) {\n      this._writeDebug = function (sText) {\n        window.alert(sText);\n      };\n    } // </d>\n    // alias\n\n\n    this._wD = this._writeDebug;\n    /**\r\n     * Provides debug / state information on all SMSound objects.\r\n     */\n\n    this._debug = function () {\n      // <d>\n      var i, j;\n\n      _wDS('currentObj', 1);\n\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\n        sm2.sounds[sm2.soundIDs[i]]._debug();\n      } // </d>\n\n    };\n    /**\r\n     * Restarts and re-initializes the SoundManager instance.\r\n     *\r\n     * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n     * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\n\n\n    this.reboot = function (resetEvents, excludeInit) {\n      // reset some (or all) state, and re-init unless otherwise specified.\n      // <d>\n      if (sm2.soundIDs.length) {\n        sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\n      } // </d>\n\n\n      var i, j, k;\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].destruct();\n      } // trash ze flash (remove from the DOM)\n\n\n      if (flash) {\n        try {\n          if (isIE) {\n            oRemovedHTML = flash.innerHTML;\n          }\n\n          oRemoved = flash.parentNode.removeChild(flash);\n        } catch (e) {\n          // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\n          _wDS('badRemove', 2);\n        }\n      } // actually, force recreate of movie.\n\n\n      oRemovedHTML = oRemoved = needsFlash = flash = null;\n      sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\n      sm2.soundIDs = [];\n      sm2.sounds = {};\n      idCounter = 0;\n      didSetup = false;\n\n      if (!resetEvents) {\n        // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\n        for (i in on_queue) {\n          if (on_queue.hasOwnProperty(i)) {\n            for (j = 0, k = on_queue[i].length; j < k; j++) {\n              on_queue[i][j].fired = false;\n            }\n          }\n        }\n      } else {\n        // remove all callbacks entirely\n        on_queue = [];\n      } // <d>\n\n\n      if (!excludeInit) {\n        sm2._wD(sm + ': Rebooting...');\n      } // </d>\n      // reset HTML5 and flash canPlay test results\n\n\n      sm2.html5 = {\n        usingFlash: null\n      };\n      sm2.flash = {}; // reset device-specific HTML/flash mode switches\n\n      sm2.html5Only = false;\n      sm2.ignoreFlash = false;\n      window.setTimeout(function () {\n        // by default, re-init\n        if (!excludeInit) {\n          sm2.beginDelayedInit();\n        }\n      }, 20);\n      return sm2;\n    };\n\n    this.reset = function () {\n      /**\r\n       * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n       * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n       * @return {object} soundManager The soundManager instance.\r\n       */\n      _wDS('reset');\n\n      return sm2.reboot(true, true);\n    };\n    /**\r\n     * Undocumented: Determines the SM2 flash movie's load progress.\r\n     *\r\n     * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n     */\n\n\n    this.getMoviePercent = function () {\n      /**\r\n       * Interesting syntax notes...\r\n       * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n       * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n       * Thus, 'in' syntax must be used.\r\n       */\n      return flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null;\n    };\n    /**\r\n     * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n     */\n\n\n    this.beginDelayedInit = function () {\n      windowLoaded = true;\n      domContentLoaded();\n      setTimeout(function () {\n        if (initPending) return false;\n        createMovie();\n        initMovie();\n        initPending = true;\n        return true;\n      }, 20);\n      delayWaitForEI();\n    };\n    /**\r\n     * Destroys the SoundManager instance and all SMSound instances.\r\n     */\n\n\n    this.destruct = function () {\n      sm2._wD(sm + '.destruct()');\n\n      sm2.disable(true);\n    };\n    /**\r\n     * SMSound() (sound object) constructor\r\n     * ------------------------------------\r\n     *\r\n     * @param {object} oOptions Sound options (id and url are required attributes)\r\n     * @return {SMSound} The new SMSound object\r\n     */\n\n\n    SMSound = function (oOptions) {\n      var s = this,\n          resetProperties,\n          add_html5_events,\n          remove_html5_events,\n          stop_html5_timer,\n          start_html5_timer,\n          attachOnPosition,\n          onplay_called = false,\n          onPositionItems = [],\n          onPositionFired = 0,\n          detachOnPosition,\n          applyFromTo,\n          lastURL = null,\n          lastHTML5State,\n          urlOmitted;\n      lastHTML5State = {\n        // tracks duration + position (time)\n        duration: null,\n        time: null\n      };\n      this.id = oOptions.id; // legacy\n\n      this.sID = this.id;\n      this.url = oOptions.url;\n      this.options = mixin(oOptions); // per-play-instance-specific options\n\n      this.instanceOptions = this.options; // short alias\n\n      this._iO = this.instanceOptions; // assign property defaults\n\n      this.pan = this.options.pan;\n      this.volume = this.options.volume; // whether or not this object is using HTML5\n\n      this.isHTML5 = false; // internal HTML5 Audio() object reference\n\n      this._a = null; // for flash 8 special-case createSound() without url, followed by load/play with url case\n\n      urlOmitted = !this.url;\n      /**\r\n       * SMSound() public methods\r\n       * ------------------------\r\n       */\n\n      this.id3 = {};\n      /**\r\n       * Writes SMSound object parameters to debug console\r\n       */\n\n      this._debug = function () {\n        // <d>\n        sm2._wD(s.id + ': Merged options:', s.options); // </d>\n\n      };\n      /**\r\n       * Begins loading a sound per its *url*.\r\n       *\r\n       * @param {object} options Optional: Sound options\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.load = function (options) {\n        var oSound = null,\n            instanceOptions;\n\n        if (options !== _undefined) {\n          s._iO = mixin(options, s.options);\n        } else {\n          options = s.options;\n          s._iO = options;\n\n          if (lastURL && lastURL !== s.url) {\n            _wDS('manURL');\n\n            s._iO.url = s.url;\n            s.url = null;\n          }\n        }\n\n        if (!s._iO.url) {\n          s._iO.url = s.url;\n        }\n\n        s._iO.url = parseURL(s._iO.url); // ensure we're in sync\n\n        s.instanceOptions = s._iO; // local shortcut\n\n        instanceOptions = s._iO;\n\n        sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\n\n        if (!instanceOptions.url && !s.url) {\n          sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\n\n          return s;\n        } // <d>\n\n\n        if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\n          // flash 8 load() -> play() won't work before onload has fired.\n          sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\n        } // </d>\n\n\n        if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\n          _wDS('onURL', 1); // if loaded and an onload() exists, fire immediately.\n\n\n          if (s.readyState === 3 && instanceOptions.onload) {\n            // assume success based on truthy duration.\n            wrapCallback(s, function () {\n              instanceOptions.onload.apply(s, [!!s.duration]);\n            });\n          }\n\n          return s;\n        } // reset a few state properties\n\n\n        s.loaded = false;\n        s.readyState = 1;\n        s.playState = 0;\n        s.id3 = {}; // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\n\n        if (html5OK(instanceOptions)) {\n          oSound = s._setup_html5(instanceOptions);\n\n          if (!oSound._called_load) {\n            s._html5_canplay = false; // TODO: review called_load / html5_canplay logic\n            // if url provided directly to load(), assign it here.\n\n            if (s.url !== instanceOptions.url) {\n              sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\n\n              s._a.src = instanceOptions.url; // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\n              // reset position for new URL\n\n              s.setPosition(0);\n            } // given explicit load call, try to preload.\n            // early HTML5 implementation (non-standard)\n\n\n            s._a.autobuffer = 'auto'; // standard property, values: none / metadata / auto\n            // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\n\n            s._a.preload = 'auto';\n            s._a._called_load = true;\n          } else {\n            sm2._wD(s.id + ': Ignoring request to load again');\n          }\n        } else {\n          if (sm2.html5Only) {\n            sm2._wD(s.id + ': No flash support. Exiting.');\n\n            return s;\n          }\n\n          if (s._iO.url && s._iO.url.match(/data:/i)) {\n            // data: URIs not supported by Flash, either.\n            sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\n\n            return s;\n          }\n\n          try {\n            s.isHTML5 = false;\n            s._iO = policyFix(loopFix(instanceOptions)); // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\n\n            if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\n              sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\n\n              s._iO.autoPlay = false;\n            } // re-assign local shortcut\n\n\n            instanceOptions = s._iO;\n\n            if (fV === 8) {\n              flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\n            } else {\n              flash._load(s.id, instanceOptions.url, !!instanceOptions.stream, !!instanceOptions.autoPlay, instanceOptions.loops || 1, !!instanceOptions.autoLoad, instanceOptions.usePolicyFile);\n            }\n          } catch (e) {\n            _wDS('smError', 2);\n\n            debugTS('onload', false);\n            catchError({\n              type: 'SMSOUND_LOAD_JS_EXCEPTION',\n              fatal: true\n            });\n          }\n        } // after all of this, ensure sound url is up to date.\n\n\n        s.url = instanceOptions.url;\n        return s;\n      };\n      /**\r\n       * Unloads a sound, canceling any open HTTP requests.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.unload = function () {\n        // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\n        // Flash 9/AS3: Close stream, preventing further load\n        // HTML5: Most UAs will use empty URL\n        if (s.readyState !== 0) {\n          sm2._wD(s.id + ': unload()');\n\n          if (!s.isHTML5) {\n            if (fV === 8) {\n              flash._unload(s.id, emptyURL);\n            } else {\n              flash._unload(s.id);\n            }\n          } else {\n            stop_html5_timer();\n\n            if (s._a) {\n              s._a.pause(); // update empty URL, too\n\n\n              lastURL = html5Unload(s._a);\n            }\n          } // reset load/status flags\n\n\n          resetProperties();\n        }\n\n        return s;\n      };\n      /**\r\n       * Unloads and destroys a sound.\r\n       */\n\n\n      this.destruct = function (_bFromSM) {\n        sm2._wD(s.id + ': Destruct');\n\n        if (!s.isHTML5) {\n          // kill sound within Flash\n          // Disable the onfailure handler\n          s._iO.onfailure = null;\n\n          flash._destroySound(s.id);\n        } else {\n          stop_html5_timer();\n\n          if (s._a) {\n            s._a.pause();\n\n            html5Unload(s._a);\n\n            if (!useGlobalHTML5Audio) {\n              remove_html5_events();\n            } // break obvious circular reference\n\n\n            s._a._s = null;\n            s._a = null;\n          }\n        }\n\n        if (!_bFromSM) {\n          // ensure deletion from controller\n          sm2.destroySound(s.id, true);\n        }\n      };\n      /**\r\n       * Begins playing a sound.\r\n       *\r\n       * @param {object} options Optional: Sound options\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.play = function (options, _updatePlayState) {\n        var fN,\n            allowMulti,\n            a,\n            onready,\n            audioClone,\n            onended,\n            oncanplay,\n            startOK = true; // <d>\n\n        fN = s.id + ': play(): '; // </d>\n        // default to true\n\n        _updatePlayState = _updatePlayState === _undefined ? true : _updatePlayState;\n\n        if (!options) {\n          options = {};\n        } // first, use local URL (if specified)\n\n\n        if (s.url) {\n          s._iO.url = s.url;\n        } // mix in any options defined at createSound()\n\n\n        s._iO = mixin(s._iO, s.options); // mix in any options specific to this method\n\n        s._iO = mixin(options, s._iO);\n        s._iO.url = parseURL(s._iO.url);\n        s.instanceOptions = s._iO; // RTMP-only\n\n        if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\n          if (!s.getAutoPlay()) {\n            sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\n\n            s.setAutoPlay(true);\n          } // play will be called in onconnect()\n\n\n          return s;\n        }\n\n        if (html5OK(s._iO)) {\n          s._setup_html5(s._iO);\n\n          start_html5_timer();\n        }\n\n        if (s.playState === 1 && !s.paused) {\n          allowMulti = s._iO.multiShot;\n\n          if (!allowMulti) {\n            sm2._wD(fN + 'Already playing (one-shot)', 1);\n\n            if (s.isHTML5) {\n              // go back to original position.\n              s.setPosition(s._iO.position);\n            }\n\n            return s;\n          }\n\n          sm2._wD(fN + 'Already playing (multi-shot)', 1);\n        } // edge case: play() with explicit URL parameter\n\n\n        if (options.url && options.url !== s.url) {\n          // special case for createSound() followed by load() / play() with url; avoid double-load case.\n          if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\n            urlOmitted = false;\n          } else {\n            // load using merged options\n            s.load(s._iO);\n          }\n        }\n\n        if (!s.loaded) {\n          if (s.readyState === 0) {\n            sm2._wD(fN + 'Attempting to load'); // try to get this sound playing ASAP\n\n\n            if (!s.isHTML5 && !sm2.html5Only) {\n              // flash: assign directly because setAutoPlay() increments the instanceCount\n              s._iO.autoPlay = true;\n              s.load(s._iO);\n            } else if (s.isHTML5) {\n              // iOS needs this when recycling sounds, loading a new URL on an existing object.\n              s.load(s._iO);\n            } else {\n              sm2._wD(fN + 'Unsupported type. Exiting.');\n\n              return s;\n            } // HTML5 hack - re-set instanceOptions?\n\n\n            s.instanceOptions = s._iO;\n          } else if (s.readyState === 2) {\n            sm2._wD(fN + 'Could not load - exiting', 2);\n\n            return s;\n          } else {\n            sm2._wD(fN + 'Loading - attempting to play...');\n          }\n        } else {\n          // \"play()\"\n          sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\n        }\n\n        if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\n          // flash 9 needs a position reset if play() is called while at the end of a sound.\n          sm2._wD(fN + 'Sound at end, resetting to position: 0');\n\n          options.position = 0;\n        }\n        /**\r\n         * Streams will pause when their buffer is full if they are being loaded.\r\n         * In this case paused is true, but the song hasn't started playing yet.\r\n         * If we just call resume() the onplay() callback will never be called.\r\n         * So only call resume() if the position is > 0.\r\n         * Another reason is because options like volume won't have been applied yet.\r\n         * For normal sounds, just resume.\r\n         */\n\n\n        if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\n          // https://gist.github.com/37b17df75cc4d7a90bf6\n          sm2._wD(fN + 'Resuming from paused state', 1);\n\n          s.resume();\n        } else {\n          s._iO = mixin(options, s._iO);\n          /**\r\n           * Preload in the event of play() with position under Flash,\r\n           * or from/to parameters and non-RTMP case\r\n           */\n\n          if ((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0 || s._iO.from !== null && s._iO.from > 0 || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\n            onready = function () {\n              // sound \"canplay\" or onload()\n              // re-apply position/from/to to instance options, and start playback\n              s._iO = mixin(options, s._iO);\n              s.play(s._iO);\n            }; // HTML5 needs to at least have \"canplay\" fired before seeking.\n\n\n            if (s.isHTML5 && !s._html5_canplay) {\n              // this hasn't been loaded yet. load it first, and then do this again.\n              sm2._wD(fN + 'Beginning load for non-zero offset case');\n\n              s.load({\n                // note: custom HTML5-only event added for from/to implementation.\n                _oncanplay: onready\n              });\n            } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\n              // to be safe, preload the whole thing in Flash.\n              sm2._wD(fN + 'Preloading for non-zero offset case');\n\n              s.load({\n                onload: onready\n              });\n            } // otherwise, we're ready to go. re-apply local options, and continue\n\n\n            s._iO = applyFromTo();\n          } // sm2._wD(fN + 'Starting to play');\n          // increment instance counter, where enabled + supported\n\n\n          if (!s.instanceCount || s._iO.multiShotEvents || s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio || !s.isHTML5 && fV > 8 && !s.getAutoPlay()) {\n            s.instanceCount++;\n          } // if first play and onposition parameters exist, apply them now\n\n\n          if (s._iO.onposition && s.playState === 0) {\n            attachOnPosition(s);\n          }\n\n          s.playState = 1;\n          s.paused = false;\n          s.position = s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0;\n\n          if (!s.isHTML5) {\n            s._iO = policyFix(loopFix(s._iO));\n          }\n\n          if (s._iO.onplay && _updatePlayState) {\n            s._iO.onplay.apply(s);\n\n            onplay_called = true;\n          }\n\n          s.setVolume(s._iO.volume, true);\n          s.setPan(s._iO.pan, true);\n\n          if (s._iO.playbackRate !== 1) {\n            s.setPlaybackRate(s._iO.playbackRate);\n          }\n\n          if (!s.isHTML5) {\n            startOK = flash._start(s.id, s._iO.loops || 1, fV === 9 ? s.position : s.position / msecScale, s._iO.multiShot || false);\n\n            if (fV === 9 && !startOK) {\n              // edge case: no sound hardware, or 32-channel flash ceiling hit.\n              // applies only to Flash 9, non-NetStream/MovieStar sounds.\n              // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\n              sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\n\n              if (s._iO.onplayerror) {\n                s._iO.onplayerror.apply(s);\n              }\n            }\n          } else if (s.instanceCount < 2) {\n            // HTML5 single-instance case\n            start_html5_timer();\n            a = s._setup_html5();\n            s.setPosition(s._iO.position);\n            a.play();\n          } else {\n            // HTML5 multi-shot case\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\n\n            audioClone = new Audio(s._iO.url);\n\n            onended = function () {\n              event.remove(audioClone, 'ended', onended);\n\n              s._onfinish(s); // cleanup\n\n\n              html5Unload(audioClone);\n              audioClone = null;\n            };\n\n            oncanplay = function () {\n              event.remove(audioClone, 'canplay', oncanplay);\n\n              try {\n                audioClone.currentTime = s._iO.position / msecScale;\n              } catch (err) {\n                complain(s.id + ': multiShot play() failed to apply position of ' + s._iO.position / msecScale);\n              }\n\n              audioClone.play();\n            };\n\n            event.add(audioClone, 'ended', onended); // apply volume to clones, too\n\n            if (s._iO.volume !== _undefined) {\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\n            } // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\n\n\n            if (s.muted) {\n              audioClone.muted = true;\n            }\n\n            if (s._iO.position) {\n              // HTML5 audio can't seek before onplay() event has fired.\n              // wait for canplay, then seek to position and start playback.\n              event.add(audioClone, 'canplay', oncanplay);\n            } else {\n              // begin playback at currentTime: 0\n              audioClone.play();\n            }\n          }\n        }\n\n        return s;\n      }; // just for convenience\n\n\n      this.start = this.play;\n      /**\r\n       * Stops playing a sound (and optionally, all sounds)\r\n       *\r\n       * @param {boolean} bAll Optional: Whether to stop all sounds\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.stop = function (bAll) {\n        var instanceOptions = s._iO,\n            originalPosition;\n\n        if (s.playState === 1) {\n          sm2._wD(s.id + ': stop()');\n\n          s._onbufferchange(0);\n\n          s._resetOnPosition(0);\n\n          s.paused = false;\n\n          if (!s.isHTML5) {\n            s.playState = 0;\n          } // remove onPosition listeners, if any\n\n\n          detachOnPosition(); // and \"to\" position, if set\n\n          if (instanceOptions.to) {\n            s.clearOnPosition(instanceOptions.to);\n          }\n\n          if (!s.isHTML5) {\n            flash._stop(s.id, bAll); // hack for netStream: just unload\n\n\n            if (instanceOptions.serverURL) {\n              s.unload();\n            }\n          } else if (s._a) {\n            originalPosition = s.position; // act like Flash, though\n\n            s.setPosition(0); // hack: reflect old position for onstop() (also like Flash)\n\n            s.position = originalPosition; // html5 has no stop()\n            // NOTE: pausing means iOS requires interaction to resume.\n\n            s._a.pause();\n\n            s.playState = 0; // and update UI\n\n            s._onTimer();\n\n            stop_html5_timer();\n          }\n\n          s.instanceCount = 0;\n          s._iO = {};\n\n          if (instanceOptions.onstop) {\n            instanceOptions.onstop.apply(s);\n          }\n        }\n\n        return s;\n      };\n      /**\r\n       * Undocumented/internal: Sets autoPlay for RTMP.\r\n       *\r\n       * @param {boolean} autoPlay state\r\n       */\n\n\n      this.setAutoPlay = function (autoPlay) {\n        sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\n\n        s._iO.autoPlay = autoPlay;\n\n        if (!s.isHTML5) {\n          flash._setAutoPlay(s.id, autoPlay);\n\n          if (autoPlay) {\n            // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\n            if (!s.instanceCount && s.readyState === 1) {\n              s.instanceCount++;\n\n              sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\n            }\n          }\n        }\n      };\n      /**\r\n       * Undocumented/internal: Returns the autoPlay boolean.\r\n       *\r\n       * @return {boolean} The current autoPlay value\r\n       */\n\n\n      this.getAutoPlay = function () {\n        return s._iO.autoPlay;\n      };\n      /**\r\n       * Sets the playback rate of a sound (HTML5-only.)\r\n       *\r\n       * @param {number} playbackRate (+/-)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.setPlaybackRate = function (playbackRate) {\n        // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\n        // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\n        var normalizedRate = Math.max(0.5, Math.min(4, playbackRate)); // <d>\n\n        if (normalizedRate !== playbackRate) {\n          sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\n        } // </d>\n\n\n        if (s.isHTML5) {\n          try {\n            s._iO.playbackRate = normalizedRate;\n            s._a.playbackRate = normalizedRate;\n          } catch (e) {\n            sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\n          }\n        }\n\n        return s;\n      };\n      /**\r\n       * Sets the position of a sound.\r\n       *\r\n       * @param {number} nMsecOffset Position (milliseconds)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.setPosition = function (nMsecOffset) {\n        if (nMsecOffset === _undefined) {\n          nMsecOffset = 0;\n        }\n\n        var position,\n            position1K,\n            // Use the duration from the instance options, if we don't have a track duration yet.\n        // position >= 0 and <= current available (loaded) duration\n        offset = s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0));\n        s.position = offset;\n        position1K = s.position / msecScale;\n\n        s._resetOnPosition(s.position);\n\n        s._iO.position = offset;\n\n        if (!s.isHTML5) {\n          position = fV === 9 ? s.position : position1K;\n\n          if (s.readyState && s.readyState !== 2) {\n            // if paused or not playing, will not resume (by playing)\n            flash._setPosition(s.id, position, s.paused || !s.playState, s._iO.multiShot);\n          }\n        } else if (s._a) {\n          // Set the position in the canplay handler if the sound is not ready yet\n          if (s._html5_canplay) {\n            if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\n              /**\r\n               * DOM/JS errors/exceptions to watch out for:\r\n               * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n               * \"INDEX_SIZE_ERR\": DOM exception 1\r\n               */\n              sm2._wD(s.id + ': setPosition(' + position1K + ')');\n\n              try {\n                s._a.currentTime = position1K;\n\n                if (s.playState === 0 || s.paused) {\n                  // allow seek without auto-play/resume\n                  s._a.pause();\n                }\n              } catch (e) {\n                sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\n              }\n            }\n          } else if (position1K) {\n            // warn on non-zero seek attempts\n            sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\n\n            return s;\n          }\n\n          if (s.paused) {\n            // if paused, refresh UI right away by forcing update\n            s._onTimer(true);\n          }\n        }\n\n        return s;\n      };\n      /**\r\n       * Pauses sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.pause = function (_bCallFlash) {\n        if (s.paused || s.playState === 0 && s.readyState !== 1) return s;\n\n        sm2._wD(s.id + ': pause()');\n\n        s.paused = true;\n\n        if (!s.isHTML5) {\n          if (_bCallFlash || _bCallFlash === _undefined) {\n            flash._pause(s.id, s._iO.multiShot);\n          }\n        } else {\n          s._setup_html5().pause();\n\n          stop_html5_timer();\n        }\n\n        if (s._iO.onpause) {\n          s._iO.onpause.apply(s);\n        }\n\n        return s;\n      };\n      /**\r\n       * Resumes sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      /**\r\n       * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n       * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n       * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n       * hasn't been called already. In this case since the sound is being played for the\r\n       * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n       */\n\n\n      this.resume = function () {\n        var instanceOptions = s._iO;\n        if (!s.paused) return s;\n\n        sm2._wD(s.id + ': resume()');\n\n        s.paused = false;\n        s.playState = 1;\n\n        if (!s.isHTML5) {\n          if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\n            // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\n            s.setPosition(s.position);\n          } // flash method is toggle-based (pause/resume)\n\n\n          flash._pause(s.id, instanceOptions.multiShot);\n        } else {\n          s._setup_html5().play();\n\n          start_html5_timer();\n        }\n\n        if (!onplay_called && instanceOptions.onplay) {\n          instanceOptions.onplay.apply(s);\n          onplay_called = true;\n        } else if (instanceOptions.onresume) {\n          instanceOptions.onresume.apply(s);\n        }\n\n        return s;\n      };\n      /**\r\n       * Toggles sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.togglePause = function () {\n        sm2._wD(s.id + ': togglePause()');\n\n        if (s.playState === 0) {\n          s.play({\n            position: fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale\n          });\n          return s;\n        }\n\n        if (s.paused) {\n          s.resume();\n        } else {\n          s.pause();\n        }\n\n        return s;\n      };\n      /**\r\n       * Sets the panning (L-R) effect.\r\n       *\r\n       * @param {number} nPan The pan value (-100 to 100)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.setPan = function (nPan, bInstanceOnly) {\n        if (nPan === _undefined) {\n          nPan = 0;\n        }\n\n        if (bInstanceOnly === _undefined) {\n          bInstanceOnly = false;\n        }\n\n        if (!s.isHTML5) {\n          flash._setPan(s.id, nPan);\n        } // else { no HTML5 pan? }\n\n\n        s._iO.pan = nPan;\n\n        if (!bInstanceOnly) {\n          s.pan = nPan;\n          s.options.pan = nPan;\n        }\n\n        return s;\n      };\n      /**\r\n       * Sets the volume.\r\n       *\r\n       * @param {number} nVol The volume value (0 to 100)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.setVolume = function (nVol, _bInstanceOnly) {\n        /**\r\n         * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n         * Hardware volume control overrides software, and volume\r\n         * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n         * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n         */\n        if (nVol === _undefined) {\n          nVol = 100;\n        }\n\n        if (_bInstanceOnly === _undefined) {\n          _bInstanceOnly = false;\n        }\n\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, sm2.muted && !s.muted || s.muted ? 0 : nVol);\n        } else if (s._a) {\n          if (sm2.muted && !s.muted) {\n            s.muted = true;\n            s._a.muted = true;\n          } // valid range for native HTML5 Audio(): 0-1\n\n\n          s._a.volume = Math.max(0, Math.min(1, nVol / 100));\n        }\n\n        s._iO.volume = nVol;\n\n        if (!_bInstanceOnly) {\n          s.volume = nVol;\n          s.options.volume = nVol;\n        }\n\n        return s;\n      };\n      /**\r\n       * Mutes the sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.mute = function () {\n        s.muted = true;\n\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, 0);\n        } else if (s._a) {\n          s._a.muted = true;\n        }\n\n        return s;\n      };\n      /**\r\n       * Unmutes the sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.unmute = function () {\n        s.muted = false;\n        var hasIO = s._iO.volume !== _undefined;\n\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\n        } else if (s._a) {\n          s._a.muted = false;\n        }\n\n        return s;\n      };\n      /**\r\n       * Toggles the muted state of a sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.toggleMute = function () {\n        return s.muted ? s.unmute() : s.mute();\n      };\n      /**\r\n       * Registers a callback to be fired when a sound reaches a given position during playback.\r\n       *\r\n       * @param {number} nPosition The position to watch for\r\n       * @param {function} oMethod The relevant callback to fire\r\n       * @param {object} oScope Optional: The scope to apply the callback to\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n\n      this.onPosition = function (nPosition, oMethod, oScope) {\n        // TODO: basic dupe checking?\n        onPositionItems.push({\n          position: parseInt(nPosition, 10),\n          method: oMethod,\n          scope: oScope !== _undefined ? oScope : s,\n          fired: false\n        });\n        return s;\n      }; // legacy/backwards-compability: lower-case method name\n\n\n      this.onposition = this.onPosition;\n      /**\r\n       * Removes registered callback(s) from a sound, by position and/or callback.\r\n       *\r\n       * @param {number} nPosition The position to clear callback(s) for\r\n       * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.clearOnPosition = function (nPosition, oMethod) {\n        var i;\n        nPosition = parseInt(nPosition, 10);\n\n        if (isNaN(nPosition)) {\n          // safety check\n          return;\n        }\n\n        for (i = 0; i < onPositionItems.length; i++) {\n          if (nPosition === onPositionItems[i].position) {\n            // remove this item if no method was specified, or, if the method matches\n            if (!oMethod || oMethod === onPositionItems[i].method) {\n              if (onPositionItems[i].fired) {\n                // decrement \"fired\" counter, too\n                onPositionFired--;\n              }\n\n              onPositionItems.splice(i, 1);\n            }\n          }\n        }\n      };\n\n      this._processOnPosition = function () {\n        var i,\n            item,\n            j = onPositionItems.length;\n        if (!j || !s.playState || onPositionFired >= j) return false;\n\n        for (i = j - 1; i >= 0; i--) {\n          item = onPositionItems[i];\n\n          if (!item.fired && s.position >= item.position) {\n            item.fired = true;\n            onPositionFired++;\n            item.method.apply(item.scope, [item.position]); //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\n\n            j = onPositionItems.length;\n          }\n        }\n\n        return true;\n      };\n\n      this._resetOnPosition = function (nPosition) {\n        // reset \"fired\" for items interested in this position\n        var i,\n            item,\n            j = onPositionItems.length;\n        if (!j) return false;\n\n        for (i = j - 1; i >= 0; i--) {\n          item = onPositionItems[i];\n\n          if (item.fired && nPosition <= item.position) {\n            item.fired = false;\n            onPositionFired--;\n          }\n        }\n\n        return true;\n      };\n      /**\r\n       * SMSound() private internals\r\n       * --------------------------------\r\n       */\n\n\n      applyFromTo = function () {\n        var instanceOptions = s._iO,\n            f = instanceOptions.from,\n            t = instanceOptions.to,\n            start,\n            end;\n\n        end = function () {\n          // end has been reached.\n          sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.'); // detach listener\n\n\n          s.clearOnPosition(t, end); // stop should clear this, too\n\n          s.stop();\n        };\n\n        start = function () {\n          sm2._wD(s.id + ': Playing \"from\" ' + f); // add listener for end\n\n\n          if (t !== null && !isNaN(t)) {\n            s.onPosition(t, end);\n          }\n        };\n\n        if (f !== null && !isNaN(f)) {\n          // apply to instance options, guaranteeing correct start position.\n          instanceOptions.position = f; // multiShot timing can't be tracked, so prevent that.\n\n          instanceOptions.multiShot = false;\n          start();\n        } // return updated instanceOptions including starting position\n\n\n        return instanceOptions;\n      };\n\n      attachOnPosition = function () {\n        var item,\n            op = s._iO.onposition; // attach onposition things, if any, now.\n\n        if (op) {\n          for (item in op) {\n            if (op.hasOwnProperty(item)) {\n              s.onPosition(parseInt(item, 10), op[item]);\n            }\n          }\n        }\n      };\n\n      detachOnPosition = function () {\n        var item,\n            op = s._iO.onposition; // detach any onposition()-style listeners.\n\n        if (op) {\n          for (item in op) {\n            if (op.hasOwnProperty(item)) {\n              s.clearOnPosition(parseInt(item, 10));\n            }\n          }\n        }\n      };\n\n      start_html5_timer = function () {\n        if (s.isHTML5) {\n          startTimer(s);\n        }\n      };\n\n      stop_html5_timer = function () {\n        if (s.isHTML5) {\n          stopTimer(s);\n        }\n      };\n\n      resetProperties = function (retainPosition) {\n        if (!retainPosition) {\n          onPositionItems = [];\n          onPositionFired = 0;\n        }\n\n        onplay_called = false;\n        s._hasTimer = null;\n        s._a = null;\n        s._html5_canplay = false;\n        s.bytesLoaded = null;\n        s.bytesTotal = null;\n        s.duration = s._iO && s._iO.duration ? s._iO.duration : null;\n        s.durationEstimate = null;\n        s.buffered = []; // legacy: 1D array\n\n        s.eqData = [];\n        s.eqData.left = [];\n        s.eqData.right = [];\n        s.failures = 0;\n        s.isBuffering = false;\n        s.instanceOptions = {};\n        s.instanceCount = 0;\n        s.loaded = false;\n        s.metadata = {}; // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\n\n        s.readyState = 0;\n        s.muted = false;\n        s.paused = false;\n        s.peakData = {\n          left: 0,\n          right: 0\n        };\n        s.waveformData = {\n          left: [],\n          right: []\n        };\n        s.playState = 0;\n        s.position = null;\n        s.id3 = {};\n      };\n\n      resetProperties();\n      /**\r\n       * Pseudo-private SMSound internals\r\n       * --------------------------------\r\n       */\n\n      this._onTimer = function (bForce) {\n        /**\r\n         * HTML5-only _whileplaying() etc.\r\n         * called from both HTML5 native events, and polling/interval-based timers\r\n         * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n         */\n        var duration,\n            isNew = false,\n            time,\n            x = {};\n\n        if (s._hasTimer || bForce) {\n          // TODO: May not need to track readyState (1 = loading)\n          if (s._a && (bForce || (s.playState > 0 || s.readyState === 1) && !s.paused)) {\n            duration = s._get_html5_duration();\n\n            if (duration !== lastHTML5State.duration) {\n              lastHTML5State.duration = duration;\n              s.duration = duration;\n              isNew = true;\n            } // TODO: investigate why this goes wack if not set/re-set each time.\n\n\n            s.durationEstimate = s.duration;\n            time = s._a.currentTime * msecScale || 0;\n\n            if (time !== lastHTML5State.time) {\n              lastHTML5State.time = time;\n              isNew = true;\n            }\n\n            if (isNew || bForce) {\n              s._whileplaying(time, x, x, x, x);\n            }\n          }\n          /* else {\r\n             // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n             return false;\r\n           }*/\n\n        }\n\n        return isNew;\n      };\n\n      this._get_html5_duration = function () {\n        var instanceOptions = s._iO,\n            // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\n        d = s._a && s._a.duration ? s._a.duration * msecScale : instanceOptions && instanceOptions.duration ? instanceOptions.duration : null,\n            result = d && !isNaN(d) && d !== Infinity ? d : null;\n        return result;\n      };\n\n      this._apply_loop = function (a, nLoops) {\n        /**\r\n         * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n         * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n         */\n        // <d>\n        if (!a.loop && nLoops > 1) {\n          sm2._wD('Note: Native HTML5 looping is infinite.', 1);\n        } // </d>\n\n\n        a.loop = nLoops > 1 ? 'loop' : '';\n      };\n\n      this._setup_html5 = function (options) {\n        var instanceOptions = mixin(s._iO, options),\n            a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\n            dURL = decodeURI(instanceOptions.url),\n            sameURL;\n        /**\r\n         * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n         * Fixes case with devices that can only play one sound at a time\r\n         * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n         */\n\n        if (useGlobalHTML5Audio) {\n          if (dURL === decodeURI(lastGlobalHTML5URL)) {\n            // global HTML5 audio: re-use of URL\n            sameURL = true;\n          }\n        } else if (dURL === decodeURI(lastURL)) {\n          // options URL is the same as the \"last\" URL, and we used (loaded) it\n          sameURL = true;\n        }\n\n        if (a) {\n          if (a._s) {\n            if (useGlobalHTML5Audio) {\n              if (a._s && a._s.playState && !sameURL) {\n                // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\n                a._s.stop();\n              }\n            } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\n              // non-global HTML5 reuse case: same url, ignore request\n              s._apply_loop(a, instanceOptions.loops);\n\n              return a;\n            }\n          }\n\n          if (!sameURL) {\n            // don't retain onPosition() stuff with new URLs.\n            if (lastURL) {\n              resetProperties(false);\n            } // assign new HTML5 URL\n\n\n            a.src = instanceOptions.url;\n            s.url = instanceOptions.url;\n            lastURL = instanceOptions.url;\n            lastGlobalHTML5URL = instanceOptions.url;\n            a._called_load = false;\n          }\n        } else {\n          if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\n            s._a = new Audio(instanceOptions.url);\n\n            s._a.load();\n          } else {\n            // null for stupid Opera 9.64 case\n            s._a = isOpera && opera.version() < 10 ? new Audio(null) : new Audio();\n          } // assign local reference\n\n\n          a = s._a;\n          a._called_load = false;\n\n          if (useGlobalHTML5Audio) {\n            globalHTML5Audio = a;\n          }\n        }\n\n        s.isHTML5 = true; // store a ref on the track\n\n        s._a = a; // store a ref on the audio\n\n        a._s = s;\n        add_html5_events();\n\n        s._apply_loop(a, instanceOptions.loops);\n\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\n          s.load();\n        } else {\n          // early HTML5 implementation (non-standard)\n          a.autobuffer = false; // standard ('none' is also an option.)\n\n          a.preload = 'auto';\n        }\n\n        return a;\n      };\n\n      add_html5_events = function () {\n        if (s._a._added_events) return false;\n        var f;\n\n        function add(oEvt, oFn, bCapture) {\n          return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\n        }\n\n        s._a._added_events = true;\n\n        for (f in html5_events) {\n          if (html5_events.hasOwnProperty(f)) {\n            add(f, html5_events[f]);\n          }\n        }\n\n        return true;\n      };\n\n      remove_html5_events = function () {\n        // Remove event listeners\n        var f;\n\n        function remove(oEvt, oFn, bCapture) {\n          return s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null;\n        }\n\n        sm2._wD(s.id + ': Removing event listeners');\n\n        s._a._added_events = false;\n\n        for (f in html5_events) {\n          if (html5_events.hasOwnProperty(f)) {\n            remove(f, html5_events[f]);\n          }\n        }\n      };\n      /**\r\n       * Pseudo-private event internals\r\n       * ------------------------------\r\n       */\n\n\n      this._onload = function (nSuccess) {\n        var fN,\n            // check for duration to prevent false positives from flash 8 when loading from cache.\n        loadOK = !!nSuccess || !s.isHTML5 && fV === 8 && s.duration; // <d>\n\n        fN = s.id + ': ';\n\n        sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), loadOK ? 1 : 2);\n\n        if (!loadOK && !s.isHTML5) {\n          if (sm2.sandbox.noRemote === true) {\n            sm2._wD(fN + str('noNet'), 1);\n          }\n\n          if (sm2.sandbox.noLocal === true) {\n            sm2._wD(fN + str('noLocal'), 1);\n          }\n        } // </d>\n\n\n        s.loaded = loadOK;\n        s.readyState = loadOK ? 3 : 2;\n\n        s._onbufferchange(0);\n\n        if (!loadOK && !s.isHTML5) {\n          // note: no error code from Flash.\n          s._onerror();\n        }\n\n        if (s._iO.onload) {\n          wrapCallback(s, function () {\n            s._iO.onload.apply(s, [loadOK]);\n          });\n        }\n\n        return true;\n      };\n\n      this._onerror = function (errorCode, description) {\n        // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\n        if (s._iO.onerror) {\n          wrapCallback(s, function () {\n            s._iO.onerror.apply(s, [errorCode, description]);\n          });\n        }\n      };\n\n      this._onbufferchange = function (nIsBuffering) {\n        // ignore if not playing\n        if (s.playState === 0) return false;\n        if (nIsBuffering && s.isBuffering || !nIsBuffering && !s.isBuffering) return false;\n        s.isBuffering = nIsBuffering === 1;\n\n        if (s._iO.onbufferchange) {\n          sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\n\n          s._iO.onbufferchange.apply(s, [nIsBuffering]);\n        }\n\n        return true;\n      };\n      /**\r\n       * Playback may have stopped due to buffering, or related reason.\r\n       * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n       */\n\n\n      this._onsuspend = function () {\n        if (s._iO.onsuspend) {\n          sm2._wD(s.id + ': Playback suspended');\n\n          s._iO.onsuspend.apply(s);\n        }\n\n        return true;\n      };\n      /**\r\n       * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n       * at this point we just recreate failed sounds rather than trying to reconnect\r\n       */\n\n\n      this._onfailure = function (msg, level, code) {\n        s.failures++;\n\n        sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\n\n        if (s._iO.onfailure && s.failures === 1) {\n          s._iO.onfailure(msg, level, code);\n        } else {\n          sm2._wD(s.id + ': Ignoring failure');\n        }\n      };\n      /**\r\n       * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n       * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n       */\n\n\n      this._onwarning = function (msg, level, code) {\n        if (s._iO.onwarning) {\n          s._iO.onwarning(msg, level, code);\n        }\n      };\n\n      this._onfinish = function () {\n        // store local copy before it gets trashed...\n        var io_onfinish = s._iO.onfinish;\n\n        s._onbufferchange(0);\n\n        s._resetOnPosition(0); // reset some state items\n\n\n        if (s.instanceCount) {\n          s.instanceCount--;\n\n          if (!s.instanceCount) {\n            // remove onPosition listeners, if any\n            detachOnPosition(); // reset instance options\n\n            s.playState = 0;\n            s.paused = false;\n            s.instanceCount = 0;\n            s.instanceOptions = {};\n            s._iO = {};\n            stop_html5_timer(); // reset position, too\n\n            if (s.isHTML5) {\n              s.position = 0;\n            }\n          }\n\n          if (!s.instanceCount || s._iO.multiShotEvents) {\n            // fire onfinish for last, or every instance\n            if (io_onfinish) {\n              sm2._wD(s.id + ': onfinish()');\n\n              wrapCallback(s, function () {\n                io_onfinish.apply(s);\n              });\n            }\n          }\n        }\n      };\n\n      this._whileloading = function (nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\n        var instanceOptions = s._iO;\n        s.bytesLoaded = nBytesLoaded;\n        s.bytesTotal = nBytesTotal;\n        s.duration = Math.floor(nDuration);\n        s.bufferLength = nBufferLength;\n\n        if (!s.isHTML5 && !instanceOptions.isMovieStar) {\n          if (instanceOptions.duration) {\n            // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\n            s.durationEstimate = s.duration > instanceOptions.duration ? s.duration : instanceOptions.duration;\n          } else {\n            s.durationEstimate = parseInt(s.bytesTotal / s.bytesLoaded * s.duration, 10);\n          }\n        } else {\n          s.durationEstimate = s.duration;\n        } // for flash, reflect sequential-load-style buffering\n\n\n        if (!s.isHTML5) {\n          s.buffered = [{\n            start: 0,\n            end: s.duration\n          }];\n        } // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\n\n\n        if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\n          instanceOptions.whileloading.apply(s);\n        }\n      };\n\n      this._whileplaying = function (nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\n        var instanceOptions = s._iO,\n            eqLeft; // flash safety net\n\n        if (isNaN(nPosition) || nPosition === null) return false; // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\n\n        s.position = Math.max(0, nPosition);\n\n        s._processOnPosition();\n\n        if (!s.isHTML5 && fV > 8) {\n          if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\n            s.peakData = {\n              left: oPeakData.leftPeak,\n              right: oPeakData.rightPeak\n            };\n          }\n\n          if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\n            s.waveformData = {\n              left: oWaveformDataLeft.split(','),\n              right: oWaveformDataRight.split(',')\n            };\n          }\n\n          if (instanceOptions.useEQData) {\n            if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\n              eqLeft = oEQData.leftEQ.split(',');\n              s.eqData = eqLeft;\n              s.eqData.left = eqLeft;\n\n              if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\n                s.eqData.right = oEQData.rightEQ.split(',');\n              }\n            }\n          }\n        }\n\n        if (s.playState === 1) {\n          // special case/hack: ensure buffering is false if loading from cache (and not yet started)\n          if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\n            s._onbufferchange(0);\n          }\n\n          if (instanceOptions.whileplaying) {\n            // flash may call after actual finish\n            instanceOptions.whileplaying.apply(s);\n          }\n        }\n\n        return true;\n      };\n\n      this._oncaptiondata = function (oData) {\n        /**\r\n         * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n         *\r\n         * @param {object} oData\r\n         */\n        sm2._wD(s.id + ': Caption data received.');\n\n        s.captiondata = oData;\n\n        if (s._iO.oncaptiondata) {\n          s._iO.oncaptiondata.apply(s, [oData]);\n        }\n      };\n\n      this._onmetadata = function (oMDProps, oMDData) {\n        /**\r\n         * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n         * RTMP may include song title, MovieStar content may include encoding info\r\n         *\r\n         * @param {array} oMDProps (names)\r\n         * @param {array} oMDData (values)\r\n         */\n        sm2._wD(s.id + ': Metadata received.');\n\n        var oData = {},\n            i,\n            j;\n\n        for (i = 0, j = oMDProps.length; i < j; i++) {\n          oData[oMDProps[i]] = oMDData[i];\n        }\n\n        s.metadata = oData;\n\n        if (s._iO.onmetadata) {\n          s._iO.onmetadata.call(s, s.metadata);\n        }\n      };\n\n      this._onid3 = function (oID3Props, oID3Data) {\n        /**\r\n         * internal: flash 8 + flash 9 ID3 feature\r\n         * may include artist, song title etc.\r\n         *\r\n         * @param {array} oID3Props (names)\r\n         * @param {array} oID3Data (values)\r\n         */\n        sm2._wD(s.id + ': ID3 data received.');\n\n        var oData = [],\n            i,\n            j;\n\n        for (i = 0, j = oID3Props.length; i < j; i++) {\n          oData[oID3Props[i]] = oID3Data[i];\n        }\n\n        s.id3 = mixin(s.id3, oData);\n\n        if (s._iO.onid3) {\n          s._iO.onid3.apply(s);\n        }\n      }; // flash/RTMP-only\n\n\n      this._onconnect = function (bSuccess) {\n        bSuccess = bSuccess === 1;\n\n        sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), bSuccess ? 1 : 2);\n\n        s.connected = bSuccess;\n\n        if (bSuccess) {\n          s.failures = 0;\n\n          if (idCheck(s.id)) {\n            if (s.getAutoPlay()) {\n              // only update the play state if auto playing\n              s.play(_undefined, s.getAutoPlay());\n            } else if (s._iO.autoLoad) {\n              s.load();\n            }\n          }\n\n          if (s._iO.onconnect) {\n            s._iO.onconnect.apply(s, [bSuccess]);\n          }\n        }\n      };\n\n      this._ondataerror = function (sError) {\n        // flash 9 wave/eq data handler\n        // hack: called at start, and end from flash at/after onfinish()\n        if (s.playState > 0) {\n          sm2._wD(s.id + ': Data error: ' + sError);\n\n          if (s._iO.ondataerror) {\n            s._iO.ondataerror.apply(s);\n          }\n        }\n      }; // <d>\n\n\n      this._debug(); // </d>\n\n    }; // SMSound()\n\n    /**\r\n     * Private SoundManager internals\r\n     * ------------------------------\r\n     */\n\n\n    getDocument = function () {\n      return doc.body || doc.getElementsByTagName('div')[0];\n    };\n\n    id = function (sID) {\n      return doc.getElementById(sID);\n    };\n\n    mixin = function (oMain, oAdd) {\n      // non-destructive merge\n      var o1 = oMain || {},\n          o2,\n          o; // if unspecified, o2 is the default options object\n\n      o2 = oAdd === _undefined ? sm2.defaultOptions : oAdd;\n\n      for (o in o2) {\n        if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\n          if (typeof o2[o] !== 'object' || o2[o] === null) {\n            // assign directly\n            o1[o] = o2[o];\n          } else {\n            // recurse through o2\n            o1[o] = mixin(o1[o], o2[o]);\n          }\n        }\n      }\n\n      return o1;\n    };\n\n    wrapCallback = function (oSound, callback) {\n      /**\r\n       * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n       * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n       * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n       * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n       * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n       */\n      if (!oSound.isHTML5 && fV === 8) {\n        window.setTimeout(callback, 0);\n      } else {\n        callback();\n      }\n    }; // additional soundManager properties that soundManager.setup() will accept\n\n\n    extraOptions = {\n      onready: 1,\n      ontimeout: 1,\n      defaultOptions: 1,\n      flash9Options: 1,\n      movieStarOptions: 1\n    };\n\n    assign = function (o, oParent) {\n      /**\r\n       * recursive assignment of properties, soundManager.setup() helper\r\n       * allows property assignment based on whitelist\r\n       */\n      var i,\n          result = true,\n          hasParent = oParent !== _undefined,\n          setupOptions = sm2.setupOptions,\n          bonusOptions = extraOptions; // <d>\n      // if soundManager.setup() called, show accepted parameters.\n\n      if (o === _undefined) {\n        result = [];\n\n        for (i in setupOptions) {\n          if (setupOptions.hasOwnProperty(i)) {\n            result.push(i);\n          }\n        }\n\n        for (i in bonusOptions) {\n          if (bonusOptions.hasOwnProperty(i)) {\n            if (typeof sm2[i] === 'object') {\n              result.push(i + ': {...}');\n            } else if (sm2[i] instanceof Function) {\n              result.push(i + ': function() {...}');\n            } else {\n              result.push(i);\n            }\n          }\n        }\n\n        sm2._wD(str('setup', result.join(', ')));\n\n        return false;\n      } // </d>\n\n\n      for (i in o) {\n        if (o.hasOwnProperty(i)) {\n          // if not an {object} we want to recurse through...\n          if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\n            // check \"allowed\" options\n            if (hasParent && bonusOptions[oParent] !== _undefined) {\n              // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\n              sm2[oParent][i] = o[i];\n            } else if (setupOptions[i] !== _undefined) {\n              // special case: assign to setupOptions object, which soundManager property references\n              sm2.setupOptions[i] = o[i]; // assign directly to soundManager, too\n\n              sm2[i] = o[i];\n            } else if (bonusOptions[i] === _undefined) {\n              // invalid or disallowed parameter. complain.\n              complain(str(sm2[i] === _undefined ? 'setupUndef' : 'setupError', i), 2);\n              result = false;\n            } else if (sm2[i] instanceof Function) {\n              /**\r\n               * valid extraOptions (bonusOptions) parameter.\r\n               * is it a method, like onready/ontimeout? call it.\r\n               * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n               */\n              sm2[i].apply(sm2, o[i] instanceof Array ? o[i] : [o[i]]);\n            } else {\n              // good old-fashioned direct assignment\n              sm2[i] = o[i];\n            }\n          } else if (bonusOptions[i] === _undefined) {\n            // recursion case, eg., { defaultOptions: { ... } }\n            // invalid or disallowed parameter. complain.\n            complain(str(sm2[i] === _undefined ? 'setupUndef' : 'setupError', i), 2);\n            result = false;\n          } else {\n            // recurse through object\n            return assign(o[i], i);\n          }\n        }\n      }\n\n      return result;\n    };\n\n    function preferFlashCheck(kind) {\n      // whether flash should play a given type\n      return sm2.preferFlash && hasFlash && !sm2.ignoreFlash && sm2.flash[kind] !== _undefined && sm2.flash[kind];\n    }\n    /**\r\n     * Internal DOM2-level event helpers\r\n     * ---------------------------------\r\n     */\n\n\n    event = function () {\n      // normalize event methods\n      var old = window.attachEvent,\n          evt = {\n        add: old ? 'attachEvent' : 'addEventListener',\n        remove: old ? 'detachEvent' : 'removeEventListener'\n      }; // normalize \"on\" event prefix, optional capture argument\n\n      function getArgs(oArgs) {\n        var args = slice.call(oArgs),\n            len = args.length;\n\n        if (old) {\n          // prefix\n          args[1] = 'on' + args[1];\n\n          if (len > 3) {\n            // no capture\n            args.pop();\n          }\n        } else if (len === 3) {\n          args.push(false);\n        }\n\n        return args;\n      }\n\n      function apply(args, sType) {\n        // normalize and call the event method, with the proper arguments\n        var element = args.shift(),\n            method = [evt[sType]];\n\n        if (old) {\n          // old IE can't do apply().\n          element[method](args[0], args[1]);\n        } else {\n          element[method].apply(element, args);\n        }\n      }\n\n      function add() {\n        apply(getArgs(arguments), 'add');\n      }\n\n      function remove() {\n        apply(getArgs(arguments), 'remove');\n      }\n\n      return {\n        add: add,\n        remove: remove\n      };\n    }();\n    /**\r\n     * Internal HTML5 event handling\r\n     * -----------------------------\r\n     */\n\n\n    function html5_event(oFn) {\n      // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\n      return function (e) {\n        var s = this._s,\n            result;\n\n        if (!s || !s._a) {\n          // <d>\n          if (s && s.id) {\n            sm2._wD(s.id + ': Ignoring ' + e.type);\n          } else {\n            sm2._wD(h5 + 'Ignoring ' + e.type);\n          } // </d>\n\n\n          result = null;\n        } else {\n          result = oFn.call(this, e);\n        }\n\n        return result;\n      };\n    }\n\n    html5_events = {\n      // HTML5 event-name-to-handler map\n      abort: html5_event(function () {\n        sm2._wD(this._s.id + ': abort');\n      }),\n      // enough has loaded to play\n      canplay: html5_event(function () {\n        var s = this._s,\n            position1K;\n\n        if (s._html5_canplay) {\n          // this event has already fired. ignore.\n          return;\n        }\n\n        s._html5_canplay = true;\n\n        sm2._wD(s.id + ': canplay');\n\n        s._onbufferchange(0); // position according to instance options\n\n\n        position1K = s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null; // set the position if position was provided before the sound loaded\n\n        if (this.currentTime !== position1K) {\n          sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\n\n          try {\n            this.currentTime = position1K;\n          } catch (ee) {\n            sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\n          }\n        } // hack for HTML5 from/to case\n\n\n        if (s._iO._oncanplay) {\n          s._iO._oncanplay();\n        }\n      }),\n      canplaythrough: html5_event(function () {\n        var s = this._s;\n\n        if (!s.loaded) {\n          s._onbufferchange(0);\n\n          s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\n\n          s._onload(true);\n        }\n      }),\n      durationchange: html5_event(function () {\n        // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\n        var s = this._s,\n            duration;\n        duration = s._get_html5_duration();\n\n        if (!isNaN(duration) && duration !== s.duration) {\n          sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\n\n          s.durationEstimate = s.duration = duration;\n        }\n      }),\n      // TODO: Reserved for potential use\n\n      /*\r\n      emptied: html5_event(function() {\r\n          sm2._wD(this._s.id + ': emptied');\r\n        }),\r\n      */\n      ended: html5_event(function () {\n        var s = this._s;\n\n        sm2._wD(s.id + ': ended');\n\n        s._onfinish();\n      }),\n      error: html5_event(function () {\n        var description = html5ErrorCodes[this.error.code] || null;\n\n        sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\n\n        this._s._onload(false);\n\n        this._s._onerror(this.error.code, description);\n      }),\n      loadeddata: html5_event(function () {\n        var s = this._s;\n\n        sm2._wD(s.id + ': loadeddata'); // safari seems to nicely report progress events, eventually totalling 100%\n\n\n        if (!s._loaded && !isSafari) {\n          s.duration = s._get_html5_duration();\n        }\n      }),\n      loadedmetadata: html5_event(function () {\n        sm2._wD(this._s.id + ': loadedmetadata');\n      }),\n      loadstart: html5_event(function () {\n        sm2._wD(this._s.id + ': loadstart'); // assume buffering at first\n\n\n        this._s._onbufferchange(1);\n      }),\n      play: html5_event(function () {\n        // sm2._wD(this._s.id + ': play()');\n        // once play starts, no buffering\n        this._s._onbufferchange(0);\n      }),\n      playing: html5_event(function () {\n        sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835)); // once play starts, no buffering\n\n\n        this._s._onbufferchange(0);\n      }),\n      progress: html5_event(function (e) {\n        // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\n        var s = this._s,\n            i,\n            j,\n            progStr,\n            buffered = 0,\n            isProgress = e.type === 'progress',\n            ranges = e.target.buffered,\n            // firefox 3.6 implements e.loaded/total (bytes)\n        loaded = e.loaded || 0,\n            total = e.total || 1; // reset the \"buffered\" (loaded byte ranges) array\n\n        s.buffered = [];\n\n        if (ranges && ranges.length) {\n          // if loaded is 0, try TimeRanges implementation as % of load\n          // https://developer.mozilla.org/en/DOM/TimeRanges\n          // re-build \"buffered\" array\n          // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\n          for (i = 0, j = ranges.length; i < j; i++) {\n            s.buffered.push({\n              start: ranges.start(i) * msecScale,\n              end: ranges.end(i) * msecScale\n            });\n          } // use the last value locally\n\n\n          buffered = (ranges.end(0) - ranges.start(0)) * msecScale; // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\n\n          loaded = Math.min(1, buffered / (e.target.duration * msecScale)); // <d>\n\n          if (isProgress && ranges.length > 1) {\n            progStr = [];\n            j = ranges.length;\n\n            for (i = 0; i < j; i++) {\n              progStr.push(e.target.buffered.start(i) * msecScale + '-' + e.target.buffered.end(i) * msecScale);\n            }\n\n            sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\n          }\n\n          if (isProgress && !isNaN(loaded)) {\n            sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\n          } // </d>\n\n        }\n\n        if (!isNaN(loaded)) {\n          // TODO: prevent calls with duplicate values.\n          s._whileloading(loaded, total, s._get_html5_duration());\n\n          if (loaded && total && loaded === total) {\n            // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\n            html5_events.canplaythrough.call(this, e);\n          }\n        }\n      }),\n      ratechange: html5_event(function () {\n        sm2._wD(this._s.id + ': ratechange');\n      }),\n      suspend: html5_event(function (e) {\n        // download paused/stopped, may have finished (eg. onload)\n        var s = this._s;\n\n        sm2._wD(this._s.id + ': suspend');\n\n        html5_events.progress.call(this, e);\n\n        s._onsuspend();\n      }),\n      stalled: html5_event(function () {\n        sm2._wD(this._s.id + ': stalled');\n      }),\n      timeupdate: html5_event(function () {\n        this._s._onTimer();\n      }),\n      waiting: html5_event(function () {\n        var s = this._s; // see also: seeking\n\n        sm2._wD(this._s.id + ': waiting'); // playback faster than download rate, etc.\n\n\n        s._onbufferchange(1);\n      })\n    };\n\n    html5OK = function (iO) {\n      // playability test based on URL or MIME type\n      var result;\n\n      if (!iO || !iO.type && !iO.url && !iO.serverURL) {\n        // nothing to check\n        result = false;\n      } else if (iO.serverURL || iO.type && preferFlashCheck(iO.type)) {\n        // RTMP, or preferring flash\n        result = false;\n      } else {\n        // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\n        result = iO.type ? html5CanPlay({\n          type: iO.type\n        }) : html5CanPlay({\n          url: iO.url\n        }) || sm2.html5Only || iO.url.match(/data:/i);\n      }\n\n      return result;\n    };\n\n    html5Unload = function (oAudio) {\n      /**\r\n       * Internal method: Unload media, and cancel any current/pending network requests.\r\n       * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n       * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n       * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n       * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n       */\n      var url;\n\n      if (oAudio) {\n        // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\n        // Desktop Safari complains / fails on data: URI, so it gets about:blank.\n        url = isSafari ? emptyURL : sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL;\n        oAudio.src = url; // reset some state, too\n\n        if (oAudio._called_unload !== _undefined) {\n          oAudio._called_load = false;\n        }\n      }\n\n      if (useGlobalHTML5Audio) {\n        // ensure URL state is trashed, also\n        lastGlobalHTML5URL = null;\n      }\n\n      return url;\n    };\n\n    html5CanPlay = function (o) {\n      /**\r\n       * Try to find MIME, test and return truthiness\r\n       * o = {\r\n       *  url: '/path/to/an.mp3',\r\n       *  type: 'audio/mp3'\r\n       * }\r\n       */\n      if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\n      var url = o.url || null,\n          mime = o.type || null,\n          aF = sm2.audioFormats,\n          result,\n          offset,\n          fileExt,\n          item; // account for known cases like audio/mp3\n\n      if (mime && sm2.html5[mime] !== _undefined) return sm2.html5[mime] && !preferFlashCheck(mime);\n\n      if (!html5Ext) {\n        html5Ext = [];\n\n        for (item in aF) {\n          if (aF.hasOwnProperty(item)) {\n            html5Ext.push(item);\n\n            if (aF[item].related) {\n              html5Ext = html5Ext.concat(aF[item].related);\n            }\n          }\n        }\n\n        html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\n      } // TODO: Strip URL queries, etc.\n\n\n      fileExt = url ? url.toLowerCase().match(html5Ext) : null;\n\n      if (!fileExt || !fileExt.length) {\n        if (!mime) {\n          result = false;\n        } else {\n          // audio/mp3 -> mp3, result should be known\n          offset = mime.indexOf(';'); // strip \"audio/X; codecs...\"\n\n          fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\n        }\n      } else {\n        // match the raw extension name - \"mp3\", for example\n        fileExt = fileExt[1];\n      }\n\n      if (fileExt && sm2.html5[fileExt] !== _undefined) {\n        // result known\n        result = sm2.html5[fileExt] && !preferFlashCheck(fileExt);\n      } else {\n        mime = 'audio/' + fileExt;\n        result = sm2.html5.canPlayType({\n          type: mime\n        });\n        sm2.html5[fileExt] = result; // sm2._wD('canPlayType, found result: ' + result);\n\n        result = result && sm2.html5[mime] && !preferFlashCheck(mime);\n      }\n\n      return result;\n    };\n\n    testHTML5 = function () {\n      /**\r\n       * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n       * assigns results to html5[] and flash[].\r\n       */\n      if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\n        // without HTML5, we need Flash.\n        sm2.html5.usingFlash = true;\n        needsFlash = true;\n        return false;\n      } // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\n\n\n      var a = Audio !== _undefined ? isOpera && opera.version() < 10 ? new Audio(null) : new Audio() : null,\n          item,\n          lookup,\n          support = {},\n          aF,\n          i;\n\n      function cp(m) {\n        var canPlay,\n            j,\n            result = false,\n            isOK = false;\n        if (!a || typeof a.canPlayType !== 'function') return result;\n\n        if (m instanceof Array) {\n          // iterate through all mime types, return any successes\n          for (i = 0, j = m.length; i < j; i++) {\n            if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\n              isOK = true;\n              sm2.html5[m[i]] = true; // note flash support, too\n\n              sm2.flash[m[i]] = !!m[i].match(flashMIME);\n            }\n          }\n\n          result = isOK;\n        } else {\n          canPlay = a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false;\n          result = !!(canPlay && canPlay.match(sm2.html5Test));\n        }\n\n        return result;\n      } // test all registered formats + codecs\n\n\n      aF = sm2.audioFormats;\n\n      for (item in aF) {\n        if (aF.hasOwnProperty(item)) {\n          lookup = 'audio/' + item;\n          support[item] = cp(aF[item].type); // write back generic type too, eg. audio/mp3\n\n          support[lookup] = support[item]; // assign flash\n\n          if (item.match(flashMIME)) {\n            sm2.flash[item] = true;\n            sm2.flash[lookup] = true;\n          } else {\n            sm2.flash[item] = false;\n            sm2.flash[lookup] = false;\n          } // assign result to related formats, too\n\n\n          if (aF[item] && aF[item].related) {\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\n              // eg. audio/m4a\n              support['audio/' + aF[item].related[i]] = support[item];\n              sm2.html5[aF[item].related[i]] = support[item];\n              sm2.flash[aF[item].related[i]] = support[item];\n            }\n          }\n        }\n      }\n\n      support.canPlayType = a ? cp : null;\n      sm2.html5 = mixin(sm2.html5, support);\n      sm2.html5.usingFlash = featureCheck();\n      needsFlash = sm2.html5.usingFlash;\n      return true;\n    };\n\n    strings = {\n      // <d>\n      notReady: 'Unavailable - wait until onready() has fired.',\n      notOK: 'Audio support is not available.',\n      domError: sm + 'exception caught while appending SWF to DOM.',\n      spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\n      swf404: smc + 'Verify that %s is a valid path.',\n      tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\n      checkSWF: 'See SWF output for more debug info.',\n      localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\n      waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\n      waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\n      waitSWF: smc + 'Waiting for 100% SWF load...',\n      needFunction: smc + 'Function object expected for %s',\n      badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\n      currentObj: smc + '_debug(): Current sound objects',\n      waitOnload: smc + 'Waiting for window.onload()',\n      docLoaded: smc + 'Document already loaded',\n      onload: smc + 'initComplete(): calling soundManager.onload()',\n      onloadOK: sm + '.onload() complete',\n      didInit: smc + 'init(): Already called?',\n      secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\n      badRemove: smc + 'Failed to remove Flash node.',\n      shutdown: sm + '.disable(): Shutting down',\n      queue: smc + 'Queueing %s handler',\n      smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\n      fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\n      fbLoaded: 'Flash loaded',\n      fbHandler: smc + 'flashBlockHandler()',\n      manURL: 'SMSound.load(): Using manually-assigned URL',\n      onURL: sm + '.load(): current URL already assigned.',\n      badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\n      as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\n      noNSLoop: 'Note: Looping not implemented for MovieStar formats',\n      needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\n      mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\n      needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\n      gotFocus: smc + 'Got window focus.',\n      policy: 'Enabling usePolicyFile for data access',\n      setup: sm + '.setup(): allowed parameters: %s',\n      setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\n      setupUndef: sm + '.setup(): Could not find option \"%s\"',\n      setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\n      noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\n      sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\n      reset: sm + '.reset(): Removing event callbacks',\n      mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\n      globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\n      ignoreMobile: 'Ignoring mobile restrictions for this device.' // </d>\n\n    };\n\n    str = function () {\n      // internal string replace helper.\n      // arguments: o [,items to replace]\n      // <d>\n      var args, i, j, o, sstr; // real array, please\n\n      args = slice.call(arguments); // first argument\n\n      o = args.shift();\n      sstr = strings && strings[o] ? strings[o] : '';\n\n      if (sstr && args && args.length) {\n        for (i = 0, j = args.length; i < j; i++) {\n          sstr = sstr.replace('%s', args[i]);\n        }\n      }\n\n      return sstr; // </d>\n    };\n\n    loopFix = function (sOpt) {\n      // flash 8 requires stream = false for looping to work\n      if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\n        _wDS('as2loop');\n\n        sOpt.stream = false;\n      }\n\n      return sOpt;\n    };\n\n    policyFix = function (sOpt, sPre) {\n      if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\n        sm2._wD((sPre || '') + str('policy'));\n\n        sOpt.usePolicyFile = true;\n      }\n\n      return sOpt;\n    };\n\n    complain = function (sMsg) {\n      // <d>\n      if (hasConsole && console.warn !== _undefined) {\n        console.warn(sMsg);\n      } else {\n        sm2._wD(sMsg);\n      } // </d>\n\n    };\n\n    doNothing = function () {\n      return false;\n    };\n\n    disableObject = function (o) {\n      var oProp;\n\n      for (oProp in o) {\n        if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\n          o[oProp] = doNothing;\n        }\n      }\n\n      oProp = null;\n    };\n\n    failSafely = function (bNoDisable) {\n      // general failure exception handler\n      if (bNoDisable === _undefined) {\n        bNoDisable = false;\n      }\n\n      if (disabled || bNoDisable) {\n        sm2.disable(bNoDisable);\n      }\n    };\n\n    normalizeMovieURL = function (movieURL) {\n      var urlParams = null,\n          url;\n\n      if (movieURL) {\n        if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\n          urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4); // assume user knows what they're doing\n\n          if (urlParams) return movieURL;\n        } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\n          // append trailing slash, if needed\n          movieURL += '/';\n        }\n      }\n\n      url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\n\n      if (sm2.noSWFCache) {\n        url += '?ts=' + new Date().getTime();\n      }\n\n      return url;\n    };\n\n    setVersionInfo = function () {\n      // short-hand for internal use\n      fV = parseInt(sm2.flashVersion, 10);\n\n      if (fV !== 8 && fV !== 9) {\n        sm2._wD(str('badFV', fV, defaultFlashVersion));\n\n        sm2.flashVersion = fV = defaultFlashVersion;\n      } // debug flash movie, if applicable\n\n\n      var isDebug = sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf';\n\n      if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\n        sm2._wD(str('needfl9'));\n\n        sm2.flashVersion = fV = 9;\n      }\n\n      sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'); // set up default options\n\n      if (fV > 8) {\n        // +flash 9 base options\n        sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\n        sm2.features.buffering = true; // +moviestar support\n\n        sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\n        sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n        sm2.features.movieStar = true;\n      } else {\n        sm2.features.movieStar = false;\n      } // regExp for flash canPlay(), etc.\n\n\n      sm2.filePattern = sm2.filePatterns[fV !== 8 ? 'flash9' : 'flash8']; // if applicable, use _debug versions of SWFs\n\n      sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\n      sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = fV > 8;\n    };\n\n    setPolling = function (bPolling, bHighPerformance) {\n      if (!flash) {\n        return;\n      }\n\n      flash._setPolling(bPolling, bHighPerformance);\n    };\n\n    initDebug = function () {\n      // starts debug mode, creating output <div> for UAs without console object\n      // allow force of debug mode via URL\n      // <d>\n      if (sm2.debugURLParam.test(wl)) {\n        sm2.setupOptions.debugMode = sm2.debugMode = true;\n      }\n\n      if (id(sm2.debugID)) {\n        return;\n      }\n\n      var oD, oDebug, oTarget, oToggle, tmp;\n\n      if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\n        oD = doc.createElement('div');\n        oD.id = sm2.debugID + '-toggle';\n        oToggle = {\n          position: 'fixed',\n          bottom: '0px',\n          right: '0px',\n          width: '1.2em',\n          height: '1.2em',\n          lineHeight: '1.2em',\n          margin: '2px',\n          textAlign: 'center',\n          border: '1px solid #999',\n          cursor: 'pointer',\n          background: '#fff',\n          color: '#333',\n          zIndex: 10001\n        };\n        oD.appendChild(doc.createTextNode('-'));\n        oD.onclick = toggleDebug;\n        oD.title = 'Toggle SM2 debug console';\n\n        if (ua.match(/msie 6/i)) {\n          oD.style.position = 'absolute';\n          oD.style.cursor = 'hand';\n        }\n\n        for (tmp in oToggle) {\n          if (oToggle.hasOwnProperty(tmp)) {\n            oD.style[tmp] = oToggle[tmp];\n          }\n        }\n\n        oDebug = doc.createElement('div');\n        oDebug.id = sm2.debugID;\n        oDebug.style.display = sm2.debugMode ? 'block' : 'none';\n\n        if (sm2.debugMode && !id(oD.id)) {\n          try {\n            oTarget = getDocument();\n            oTarget.appendChild(oD);\n          } catch (e2) {\n            throw new Error(str('domError') + ' \\n' + e2.toString());\n          }\n\n          oTarget.appendChild(oDebug);\n        }\n      }\n\n      oTarget = null; // </d>\n    };\n\n    idCheck = this.getSoundById; // <d>\n\n    _wDS = function (o, errorLevel) {\n      return !o ? '' : sm2._wD(str(o), errorLevel);\n    };\n\n    toggleDebug = function () {\n      var o = id(sm2.debugID),\n          oT = id(sm2.debugID + '-toggle');\n\n      if (!o) {\n        return;\n      }\n\n      if (debugOpen) {\n        // minimize\n        oT.innerHTML = '+';\n        o.style.display = 'none';\n      } else {\n        oT.innerHTML = '-';\n        o.style.display = 'block';\n      }\n\n      debugOpen = !debugOpen;\n    };\n\n    debugTS = function (sEventType, bSuccess, sMessage) {\n      // troubleshooter debug hooks\n      if (window.sm2Debugger !== _undefined) {\n        try {\n          sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\n        } catch (e) {\n          // oh well\n          return false;\n        }\n      }\n\n      return true;\n    }; // </d>\n\n\n    getSWFCSS = function () {\n      var css = [];\n\n      if (sm2.debugMode) {\n        css.push(swfCSS.sm2Debug);\n      }\n\n      if (sm2.debugFlash) {\n        css.push(swfCSS.flashDebug);\n      }\n\n      if (sm2.useHighPerformance) {\n        css.push(swfCSS.highPerf);\n      }\n\n      return css.join(' ');\n    };\n\n    flashBlockHandler = function () {\n      // *possible* flash block situation.\n      var name = str('fbHandler'),\n          p = sm2.getMoviePercent(),\n          css = swfCSS,\n          error = {\n        type: 'FLASHBLOCK'\n      };\n\n      if (sm2.html5Only) {\n        // no flash, or unused\n        return;\n      }\n\n      if (!sm2.ok()) {\n        if (needsFlash) {\n          // make the movie more visible, so user can fix\n          sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\n\n          sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\n        }\n\n        sm2.didFlashBlock = true; // fire onready(), complain lightly\n\n        processOnEvents({\n          type: 'ontimeout',\n          ignoreInit: true,\n          error: error\n        });\n        catchError(error);\n      } else {\n        // SM2 loaded OK (or recovered)\n        // <d>\n        if (sm2.didFlashBlock) {\n          sm2._wD(name + ': Unblocked');\n        } // </d>\n\n\n        if (sm2.oMC) {\n          sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\n        }\n      }\n    };\n\n    addOnEvent = function (sType, oMethod, oScope) {\n      if (on_queue[sType] === _undefined) {\n        on_queue[sType] = [];\n      }\n\n      on_queue[sType].push({\n        method: oMethod,\n        scope: oScope || null,\n        fired: false\n      });\n    };\n\n    processOnEvents = function (oOptions) {\n      // if unspecified, assume OK/error\n      if (!oOptions) {\n        oOptions = {\n          type: sm2.ok() ? 'onready' : 'ontimeout'\n        };\n      } // not ready yet.\n\n\n      if (!didInit && oOptions && !oOptions.ignoreInit) return false; // invalid case\n\n      if (oOptions.type === 'ontimeout' && (sm2.ok() || disabled && !oOptions.ignoreInit)) return false;\n      var status = {\n        success: oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled\n      },\n          // queue specified by type, or none\n      srcQueue = oOptions && oOptions.type ? on_queue[oOptions.type] || [] : [],\n          queue = [],\n          i,\n          j,\n          args = [status],\n          canRetry = needsFlash && !sm2.ok();\n\n      if (oOptions.error) {\n        args[0].error = oOptions.error;\n      }\n\n      for (i = 0, j = srcQueue.length; i < j; i++) {\n        if (srcQueue[i].fired !== true) {\n          queue.push(srcQueue[i]);\n        }\n      }\n\n      if (queue.length) {\n        // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\n        for (i = 0, j = queue.length; i < j; i++) {\n          if (queue[i].scope) {\n            queue[i].method.apply(queue[i].scope, args);\n          } else {\n            queue[i].method.apply(this, args);\n          }\n\n          if (!canRetry) {\n            // useFlashBlock and SWF timeout case doesn't count here.\n            queue[i].fired = true;\n          }\n        }\n      }\n\n      return true;\n    };\n\n    initUserOnload = function () {\n      window.setTimeout(function () {\n        if (sm2.useFlashBlock) {\n          flashBlockHandler();\n        }\n\n        processOnEvents(); // call user-defined \"onload\", scoped to window\n\n        if (typeof sm2.onload === 'function') {\n          _wDS('onload', 1);\n\n          sm2.onload.apply(window);\n\n          _wDS('onloadOK', 1);\n        }\n\n        if (sm2.waitForWindowLoad) {\n          event.add(window, 'load', initUserOnload);\n        }\n      }, 1);\n    };\n\n    detectFlash = function () {\n      /**\r\n       * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n       * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n       */\n      // this work has already been done.\n      if (hasFlash !== _undefined) return hasFlash;\n      var hasPlugin = false,\n          n = navigator,\n          obj,\n          type,\n          types,\n          AX = window.ActiveXObject; // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\n\n      var nP;\n\n      try {\n        nP = n.plugins;\n      } catch (e) {\n        nP = undefined;\n      }\n\n      if (nP && nP.length) {\n        type = 'application/x-shockwave-flash';\n        types = n.mimeTypes;\n\n        if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\n          hasPlugin = true;\n        }\n      } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\n        // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\n        try {\n          obj = new AX('ShockwaveFlash.ShockwaveFlash');\n        } catch (e) {\n          // oh well\n          obj = null;\n        }\n\n        hasPlugin = !!obj; // cleanup, because it is ActiveX after all\n\n        obj = null;\n      }\n\n      hasFlash = hasPlugin;\n      return hasPlugin;\n    };\n\n    featureCheck = function () {\n      var flashNeeded,\n          item,\n          formats = sm2.audioFormats,\n          // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\n      isSpecial = is_iDevice && !!ua.match(/os (1|2|3_0|3_1)\\s/i);\n\n      if (isSpecial) {\n        // has Audio(), but is broken; let it load links directly.\n        sm2.hasHTML5 = false; // ignore flash case, however\n\n        sm2.html5Only = true; // hide the SWF, if present\n\n        if (sm2.oMC) {\n          sm2.oMC.style.display = 'none';\n        }\n      } else if (sm2.useHTML5Audio) {\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\n\n          sm2.hasHTML5 = false;\n        } // <d>\n\n\n        if (isBadSafari) {\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\n        } // </d>\n\n      }\n\n      if (sm2.useHTML5Audio && sm2.hasHTML5) {\n        // sort out whether flash is optional, required or can be ignored.\n        // innocent until proven guilty.\n        canIgnoreFlash = true;\n\n        for (item in formats) {\n          if (formats.hasOwnProperty(item)) {\n            if (formats[item].required) {\n              if (!sm2.html5.canPlayType(formats[item].type)) {\n                // 100% HTML5 mode is not possible.\n                canIgnoreFlash = false;\n                flashNeeded = true;\n              } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\n                // flash may be required, or preferred for this format.\n                flashNeeded = true;\n              }\n            }\n          }\n        }\n      } // sanity check...\n\n\n      if (sm2.ignoreFlash) {\n        flashNeeded = false;\n        canIgnoreFlash = true;\n      }\n\n      sm2.html5Only = sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded;\n      return !sm2.html5Only;\n    };\n\n    parseURL = function (url) {\n      /**\r\n       * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n       * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n       */\n      var i,\n          j,\n          urlResult = 0,\n          result;\n\n      if (url instanceof Array) {\n        // find the first good one\n        for (i = 0, j = url.length; i < j; i++) {\n          if (url[i] instanceof Object) {\n            // MIME check\n            if (sm2.canPlayMIME(url[i].type)) {\n              urlResult = i;\n              break;\n            }\n          } else if (sm2.canPlayURL(url[i])) {\n            // URL string check\n            urlResult = i;\n            break;\n          }\n        } // normalize to string\n\n\n        if (url[urlResult].url) {\n          url[urlResult] = url[urlResult].url;\n        }\n\n        result = url[urlResult];\n      } else {\n        // single URL case\n        result = url;\n      }\n\n      return result;\n    };\n\n    startTimer = function (oSound) {\n      /**\r\n       * attach a timer to this sound, and start an interval if needed\r\n       */\n      if (!oSound._hasTimer) {\n        oSound._hasTimer = true;\n\n        if (!mobileHTML5 && sm2.html5PollingInterval) {\n          if (h5IntervalTimer === null && h5TimerCount === 0) {\n            h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\n          }\n\n          h5TimerCount++;\n        }\n      }\n    };\n\n    stopTimer = function (oSound) {\n      /**\r\n       * detach a timer\r\n       */\n      if (oSound._hasTimer) {\n        oSound._hasTimer = false;\n\n        if (!mobileHTML5 && sm2.html5PollingInterval) {\n          // interval will stop itself at next execution.\n          h5TimerCount--;\n        }\n      }\n    };\n\n    timerExecute = function () {\n      /**\r\n       * manual polling for HTML5 progress events, ie., whileplaying()\r\n       * (can achieve greater precision than conservative default HTML5 interval)\r\n       */\n      var i;\n\n      if (h5IntervalTimer !== null && !h5TimerCount) {\n        // no active timers, stop polling interval.\n        clearInterval(h5IntervalTimer);\n        h5IntervalTimer = null;\n        return;\n      } // check all HTML5 sounds with timers\n\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\n          sm2.sounds[sm2.soundIDs[i]]._onTimer();\n        }\n      }\n    };\n\n    catchError = function (options) {\n      options = options !== _undefined ? options : {};\n\n      if (typeof sm2.onerror === 'function') {\n        sm2.onerror.apply(window, [{\n          type: options.type !== _undefined ? options.type : null\n        }]);\n      }\n\n      if (options.fatal !== _undefined && options.fatal) {\n        sm2.disable();\n      }\n    };\n\n    badSafariFix = function () {\n      // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\n      if (!isBadSafari || !detectFlash()) {\n        // doesn't apply\n        return;\n      }\n\n      var aF = sm2.audioFormats,\n          i,\n          item;\n\n      for (item in aF) {\n        if (aF.hasOwnProperty(item)) {\n          if (item === 'mp3' || item === 'mp4') {\n            sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\n\n            sm2.html5[item] = false; // assign result to related formats, too\n\n            if (aF[item] && aF[item].related) {\n              for (i = aF[item].related.length - 1; i >= 0; i--) {\n                sm2.html5[aF[item].related[i]] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n    /**\r\n     * Pseudo-private flash/ExternalInterface methods\r\n     * ----------------------------------------------\r\n     */\n\n\n    this._setSandboxType = function (sandboxType) {\n      // <d>\n      // Security sandbox according to Flash plugin\n      var sb = sm2.sandbox;\n      sb.type = sandboxType;\n      sb.description = sb.types[sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown'];\n\n      if (sb.type === 'localWithFile') {\n        sb.noRemote = true;\n        sb.noLocal = false;\n\n        _wDS('secNote', 2);\n      } else if (sb.type === 'localWithNetwork') {\n        sb.noRemote = false;\n        sb.noLocal = true;\n      } else if (sb.type === 'localTrusted') {\n        sb.noRemote = false;\n        sb.noLocal = false;\n      } // </d>\n\n    };\n\n    this._externalInterfaceOK = function (swfVersion) {\n      // flash callback confirming flash loaded, EI working etc.\n      // swfVersion: SWF build string\n      if (sm2.swfLoaded) {\n        return;\n      }\n\n      var e;\n      debugTS('swf', true);\n      debugTS('flashtojs', true);\n      sm2.swfLoaded = true;\n      tryInitOnFocus = false;\n\n      if (isBadSafari) {\n        badSafariFix();\n      } // complain if JS + SWF build/version strings don't match, excluding +DEV builds\n      // <d>\n\n\n      if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\n        e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.'; // escape flash -> JS stack so this error fires in window.\n\n        setTimeout(function () {\n          throw new Error(e);\n        }, 0); // exit, init will fail with timeout\n\n        return;\n      } // </d>\n      // IE needs a larger timeout\n\n\n      setTimeout(init, isIE ? 100 : 1);\n    };\n    /**\r\n     * Private initialization helpers\r\n     * ------------------------------\r\n     */\n\n\n    createMovie = function (movieID, movieURL) {\n      // ignore if already connected\n      if (didAppend && appendSuccess) return false;\n\n      function initMsg() {\n        // <d>\n        var options = [],\n            title,\n            msg = [],\n            delimiter = ' + ';\n        title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support' : '');\n\n        if (!sm2.html5Only) {\n          if (sm2.preferFlash) {\n            options.push('preferFlash');\n          }\n\n          if (sm2.useHighPerformance) {\n            options.push('useHighPerformance');\n          }\n\n          if (sm2.flashPollingInterval) {\n            options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\n          }\n\n          if (sm2.html5PollingInterval) {\n            options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n          }\n\n          if (sm2.wmode) {\n            options.push('wmode (' + sm2.wmode + ')');\n          }\n\n          if (sm2.debugFlash) {\n            options.push('debugFlash');\n          }\n\n          if (sm2.useFlashBlock) {\n            options.push('flashBlock');\n          }\n        } else if (sm2.html5PollingInterval) {\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n        }\n\n        if (options.length) {\n          msg = msg.concat([options.join(delimiter)]);\n        }\n\n        sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\n\n        showSupport(); // </d>\n      }\n\n      if (sm2.html5Only) {\n        // 100% HTML5 mode\n        setVersionInfo();\n        initMsg();\n        sm2.oMC = id(sm2.movieID);\n        init(); // prevent multiple init attempts\n\n        didAppend = true;\n        appendSuccess = true;\n        return false;\n      } // flash path\n\n\n      var remoteURL = movieURL || sm2.url,\n          localURL = sm2.altURL || remoteURL,\n          swfTitle = 'JS/Flash audio component (SoundManager 2)',\n          oTarget = getDocument(),\n          extraClass = getSWFCSS(),\n          isRTL = null,\n          html = doc.getElementsByTagName('html')[0],\n          oEmbed,\n          oMovie,\n          tmp,\n          movieHTML,\n          oEl,\n          s,\n          x,\n          sClass;\n      isRTL = html && html.dir && html.dir.match(/rtl/i);\n      movieID = movieID === _undefined ? sm2.id : movieID;\n\n      function param(name, value) {\n        return '<param name=\"' + name + '\" value=\"' + value + '\" />';\n      } // safety check for legacy (change to Flash 9 URL)\n\n\n      setVersionInfo();\n      sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\n      movieURL = sm2.url;\n      sm2.wmode = !sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode;\n\n      if (sm2.wmode !== null && (ua.match(/msie 8/i) || !isIE && !sm2.useHighPerformance) && navigator.platform.match(/win32|win64/i)) {\n        /**\r\n         * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n         * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n         * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n         */\n        messages.push(strings.spcWmode);\n        sm2.wmode = null;\n      }\n\n      oEmbed = {\n        name: movieID,\n        id: movieID,\n        src: movieURL,\n        quality: 'high',\n        allowScriptAccess: sm2.allowScriptAccess,\n        bgcolor: sm2.bgColor,\n        pluginspage: http + 'www.macromedia.com/go/getflashplayer',\n        title: swfTitle,\n        type: 'application/x-shockwave-flash',\n        wmode: sm2.wmode,\n        // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\n        hasPriority: 'true'\n      };\n\n      if (sm2.debugFlash) {\n        oEmbed.FlashVars = 'debug=1';\n      }\n\n      if (!sm2.wmode) {\n        // don't write empty attribute\n        delete oEmbed.wmode;\n      }\n\n      if (isIE) {\n        // IE is \"special\".\n        oMovie = doc.createElement('div');\n        movieHTML = ['<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">', param('movie', movieURL), param('AllowScriptAccess', sm2.allowScriptAccess), param('quality', oEmbed.quality), sm2.wmode ? param('wmode', sm2.wmode) : '', param('bgcolor', sm2.bgColor), param('hasPriority', 'true'), sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : '', '</object>'].join('');\n      } else {\n        oMovie = doc.createElement('embed');\n\n        for (tmp in oEmbed) {\n          if (oEmbed.hasOwnProperty(tmp)) {\n            oMovie.setAttribute(tmp, oEmbed[tmp]);\n          }\n        }\n      }\n\n      initDebug();\n      extraClass = getSWFCSS();\n      oTarget = getDocument();\n\n      if (oTarget) {\n        sm2.oMC = id(sm2.movieID) || doc.createElement('div');\n\n        if (!sm2.oMC.id) {\n          sm2.oMC.id = sm2.movieID;\n          sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\n          s = null;\n          oEl = null;\n\n          if (!sm2.useFlashBlock) {\n            if (sm2.useHighPerformance) {\n              // on-screen at all times\n              s = {\n                position: 'fixed',\n                width: '8px',\n                height: '8px',\n                // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\n                bottom: '0px',\n                left: '0px',\n                overflow: 'hidden'\n              };\n            } else {\n              // hide off-screen, lower priority\n              s = {\n                position: 'absolute',\n                width: '6px',\n                height: '6px',\n                top: '-9999px',\n                left: '-9999px'\n              };\n\n              if (isRTL) {\n                s.left = Math.abs(parseInt(s.left, 10)) + 'px';\n              }\n            }\n          }\n\n          if (isWebkit) {\n            // soundcloud-reported render/crash fix, safari 5\n            sm2.oMC.style.zIndex = 10000;\n          }\n\n          if (!sm2.debugFlash) {\n            for (x in s) {\n              if (s.hasOwnProperty(x)) {\n                sm2.oMC.style[x] = s[x];\n              }\n            }\n          }\n\n          try {\n            if (!isIE) {\n              sm2.oMC.appendChild(oMovie);\n            }\n\n            oTarget.appendChild(sm2.oMC);\n\n            if (isIE) {\n              oEl = sm2.oMC.appendChild(doc.createElement('div'));\n              oEl.className = swfCSS.swfBox;\n              oEl.innerHTML = movieHTML;\n            }\n\n            appendSuccess = true;\n          } catch (e) {\n            throw new Error(str('domError') + ' \\n' + e.toString());\n          }\n        } else {\n          // SM2 container is already in the document (eg. flashblock use case)\n          sClass = sm2.oMC.className;\n          sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\n          sm2.oMC.appendChild(oMovie);\n\n          if (isIE) {\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\n            oEl.className = swfCSS.swfBox;\n            oEl.innerHTML = movieHTML;\n          }\n\n          appendSuccess = true;\n        }\n      }\n\n      didAppend = true;\n      initMsg(); // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\n\n      return true;\n    };\n\n    initMovie = function () {\n      if (sm2.html5Only) {\n        createMovie();\n        return false;\n      } // attempt to get, or create, movie (may already exist)\n\n\n      if (flash) return false;\n\n      if (!sm2.url) {\n        /**\r\n         * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n         * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n         * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n         */\n        _wDS('noURL');\n\n        return false;\n      } // inline markup case\n\n\n      flash = sm2.getMovie(sm2.id);\n\n      if (!flash) {\n        if (!oRemoved) {\n          // try to create\n          createMovie(sm2.id, sm2.url);\n        } else {\n          // try to re-append removed movie after reboot()\n          if (!isIE) {\n            sm2.oMC.appendChild(oRemoved);\n          } else {\n            sm2.oMC.innerHTML = oRemovedHTML;\n          }\n\n          oRemoved = null;\n          didAppend = true;\n        }\n\n        flash = sm2.getMovie(sm2.id);\n      }\n\n      if (typeof sm2.oninitmovie === 'function') {\n        setTimeout(sm2.oninitmovie, 1);\n      } // <d>\n\n\n      flushMessages(); // </d>\n\n      return true;\n    };\n\n    delayWaitForEI = function () {\n      setTimeout(waitForEI, 1000);\n    };\n\n    rebootIntoHTML5 = function () {\n      // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\n      window.setTimeout(function () {\n        complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\n        sm2.setup({\n          preferFlash: false\n        }).reboot(); // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\n\n        sm2.didFlashBlock = true;\n        sm2.beginDelayedInit();\n      }, 1);\n    };\n\n    waitForEI = function () {\n      var p,\n          loadIncomplete = false;\n\n      if (!sm2.url) {\n        // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\n        return;\n      }\n\n      if (waitingForEI) {\n        return;\n      }\n\n      waitingForEI = true;\n      event.remove(window, 'load', delayWaitForEI);\n\n      if (hasFlash && tryInitOnFocus && !isFocused) {\n        // Safari won't load flash in background tabs, only when focused.\n        _wDS('waitFocus');\n\n        return;\n      }\n\n      if (!didInit) {\n        p = sm2.getMoviePercent();\n\n        if (p > 0 && p < 100) {\n          loadIncomplete = true;\n        }\n      }\n\n      setTimeout(function () {\n        p = sm2.getMoviePercent();\n\n        if (loadIncomplete) {\n          // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\n          waitingForEI = false;\n\n          sm2._wD(str('waitSWF'));\n\n          window.setTimeout(delayWaitForEI, 1);\n          return;\n        } // <d>\n\n\n        if (!didInit) {\n          sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\n\n          if (!overHTTP && p) {\n            _wDS('localFail', 2);\n\n            if (!sm2.debugFlash) {\n              _wDS('tryDebug', 2);\n            }\n          }\n\n          if (p === 0) {\n            // if 0 (not null), probably a 404.\n            sm2._wD(str('swf404', sm2.url), 1);\n          }\n\n          debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\n        } // </d>\n        // give up / time-out, depending\n\n\n        if (!didInit && okToDisable) {\n          if (p === null) {\n            // SWF failed to report load progress. Possibly blocked.\n            if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\n              if (sm2.useFlashBlock) {\n                flashBlockHandler();\n              }\n\n              _wDS('waitForever');\n            } else if (!sm2.useFlashBlock && canIgnoreFlash) {\n              // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\n              rebootIntoHTML5();\n            } else {\n              _wDS('waitForever'); // fire any regular registered ontimeout() listeners.\n\n\n              processOnEvents({\n                type: 'ontimeout',\n                ignoreInit: true,\n                error: {\n                  type: 'INIT_FLASHBLOCK'\n                }\n              });\n            }\n          } else if (sm2.flashLoadTimeout === 0) {\n            // SWF loaded? Shouldn't be a blocking issue, then.\n            _wDS('waitForever');\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\n            rebootIntoHTML5();\n          } else {\n            failSafely(true);\n          }\n        }\n      }, sm2.flashLoadTimeout);\n    };\n\n    handleFocus = function () {\n      function cleanup() {\n        event.remove(window, 'focus', handleFocus);\n      }\n\n      if (isFocused || !tryInitOnFocus) {\n        // already focused, or not special Safari background tab case\n        cleanup();\n        return true;\n      }\n\n      okToDisable = true;\n      isFocused = true;\n\n      _wDS('gotFocus'); // allow init to restart\n\n\n      waitingForEI = false; // kick off ExternalInterface timeout, now that the SWF has started\n\n      delayWaitForEI();\n      cleanup();\n      return true;\n    };\n\n    flushMessages = function () {\n      // <d>\n      // SM2 pre-init debug messages\n      if (messages.length) {\n        sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\n\n        messages = [];\n      } // </d>\n\n    };\n\n    showSupport = function () {\n      // <d>\n      flushMessages();\n      var item,\n          tests = [];\n\n      if (sm2.useHTML5Audio && sm2.hasHTML5) {\n        for (item in sm2.audioFormats) {\n          if (sm2.audioFormats.hasOwnProperty(item)) {\n            tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : !sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''));\n          }\n        }\n\n        sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\n      } // </d>\n\n    };\n\n    initComplete = function (bNoDisable) {\n      if (didInit) return false;\n\n      if (sm2.html5Only) {\n        // all good.\n        _wDS('sm2Loaded', 1);\n\n        didInit = true;\n        initUserOnload();\n        debugTS('onload', true);\n        return true;\n      }\n\n      var wasTimeout = sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent(),\n          result = true,\n          error;\n\n      if (!wasTimeout) {\n        didInit = true;\n      }\n\n      error = {\n        type: !hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT'\n      };\n\n      sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\n\n      if (disabled || bNoDisable) {\n        if (sm2.useFlashBlock && sm2.oMC) {\n          sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\n        }\n\n        processOnEvents({\n          type: 'ontimeout',\n          error: error,\n          ignoreInit: true\n        });\n        debugTS('onload', false);\n        catchError(error);\n        result = false;\n      } else {\n        debugTS('onload', true);\n      }\n\n      if (!disabled) {\n        if (sm2.waitForWindowLoad && !windowLoaded) {\n          _wDS('waitOnload');\n\n          event.add(window, 'load', initUserOnload);\n        } else {\n          // <d>\n          if (sm2.waitForWindowLoad && windowLoaded) {\n            _wDS('docLoaded');\n          } // </d>\n\n\n          initUserOnload();\n        }\n      }\n\n      return result;\n    };\n    /**\r\n     * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n     * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n     */\n\n\n    setProperties = function () {\n      var i,\n          o = sm2.setupOptions;\n\n      for (i in o) {\n        if (o.hasOwnProperty(i)) {\n          // assign local property if not already defined\n          if (sm2[i] === _undefined) {\n            sm2[i] = o[i];\n          } else if (sm2[i] !== o[i]) {\n            // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\n            sm2.setupOptions[i] = sm2[i];\n          }\n        }\n      }\n    };\n\n    init = function () {\n      // called after onload()\n      if (didInit) {\n        _wDS('didInit');\n\n        return false;\n      }\n\n      function cleanup() {\n        event.remove(window, 'load', sm2.beginDelayedInit);\n      }\n\n      if (sm2.html5Only) {\n        if (!didInit) {\n          // we don't need no steenking flash!\n          cleanup();\n          sm2.enabled = true;\n          initComplete();\n        }\n\n        return true;\n      } // flash path\n\n\n      initMovie();\n\n      try {\n        // attempt to talk to Flash\n        flash._externalInterfaceTest(false);\n        /**\r\n         * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n         * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n         */\n\n\n        setPolling(true, sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50));\n\n        if (!sm2.debugMode) {\n          // stop the SWF from making debug output calls to JS\n          flash._disableDebug();\n        }\n\n        sm2.enabled = true;\n        debugTS('jstoflash', true);\n\n        if (!sm2.html5Only) {\n          // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\n          // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\n          event.add(window, 'unload', doNothing);\n        }\n      } catch (e) {\n        sm2._wD('js/flash exception: ' + e.toString());\n\n        debugTS('jstoflash', false);\n        catchError({\n          type: 'JS_TO_FLASH_EXCEPTION',\n          fatal: true\n        }); // don't disable, for reboot()\n\n        failSafely(true);\n        initComplete();\n        return false;\n      }\n\n      initComplete(); // disconnect events\n\n      cleanup();\n      return true;\n    };\n\n    domContentLoaded = function () {\n      if (didDCLoaded) return false;\n      didDCLoaded = true; // assign top-level soundManager properties eg. soundManager.url\n\n      setProperties();\n      initDebug();\n\n      if (!hasFlash && sm2.hasHTML5) {\n        sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\n\n        sm2.setup({\n          useHTML5Audio: true,\n          // make sure we aren't preferring flash, either\n          // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\n          preferFlash: false\n        });\n      }\n\n      testHTML5();\n\n      if (!hasFlash && needsFlash) {\n        messages.push(strings.needFlash); // TODO: Fatal here vs. timeout approach, etc.\n        // hack: fail sooner.\n\n        sm2.setup({\n          flashLoadTimeout: 1\n        });\n      }\n\n      if (doc.removeEventListener) {\n        doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\n      }\n\n      initMovie();\n      return true;\n    };\n\n    domContentLoadedIE = function () {\n      if (doc.readyState === 'complete') {\n        domContentLoaded();\n        doc.detachEvent('onreadystatechange', domContentLoadedIE);\n      }\n\n      return true;\n    };\n\n    winOnLoad = function () {\n      // catch edge case of initComplete() firing after window.load()\n      windowLoaded = true; // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\n\n      domContentLoaded();\n      event.remove(window, 'load', winOnLoad);\n    }; // sniff up-front\n\n\n    detectFlash(); // focus and window load, init (primarily flash-driven)\n\n    event.add(window, 'focus', handleFocus);\n    event.add(window, 'load', delayWaitForEI);\n    event.add(window, 'load', winOnLoad);\n\n    if (doc.addEventListener) {\n      doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\n    } else if (doc.attachEvent) {\n      doc.attachEvent('onreadystatechange', domContentLoadedIE);\n    } else {\n      // no add/attachevent support - safe to assume no JS -> Flash either\n      debugTS('onload', false);\n      catchError({\n        type: 'NO_DOM2_EVENTS',\n        fatal: true\n      });\n    }\n  } // SoundManager()\n  // SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\n\n\n  if (window.SM2_DEFER === _undefined || !SM2_DEFER) {\n    soundManager = new SoundManager();\n  }\n  /**\r\n   * SoundManager public interfaces\r\n   * ------------------------------\r\n   */\n\n\n  if (typeof module === 'object' && module && typeof module.exports === 'object') {\n    /**\r\n     * commonJS module\r\n     */\n    module.exports.SoundManager = SoundManager;\n    module.exports.soundManager = soundManager;\n  } else if (typeof define === 'function' && define.amd) {\n    /**\r\n     * AMD - requireJS\r\n     * basic usage:\r\n     * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n     *   SoundManager.getInstance().setup({\r\n     *     url: '/swf/',\r\n     *     onready: function() { ... }\r\n     *   })\r\n     * });\r\n     *\r\n     * SM2_DEFER usage:\r\n     * window.SM2_DEFER = true;\r\n     * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n     *   SoundManager.getInstance(function() {\r\n     *     var soundManager = new SoundManager.constructor();\r\n     *     soundManager.setup({\r\n     *       url: '/swf/',\r\n     *       ...\r\n     *     });\r\n     *     ...\r\n     *     soundManager.beginDelayedInit();\r\n     *     return soundManager;\r\n     *   })\r\n     * });\r\n     */\n    define(function () {\n      /**\r\n       * Retrieve the global instance of SoundManager.\r\n       * If a global instance does not exist it can be created using a callback.\r\n       *\r\n       * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n       * @return {SoundManager} The global SoundManager instance\r\n       */\n      function getInstance(smBuilder) {\n        if (!window.soundManager && smBuilder instanceof Function) {\n          var instance = smBuilder(SoundManager);\n\n          if (instance instanceof SoundManager) {\n            window.soundManager = instance;\n          }\n        }\n\n        return window.soundManager;\n      }\n\n      return {\n        constructor: SoundManager,\n        getInstance: getInstance\n      };\n    });\n  } // standard browser case\n  // constructor\n\n\n  window.SoundManager = SoundManager;\n  /**\r\n   * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n   * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n   */\n  // public API, flash callbacks etc.\n\n  window.soundManager = soundManager;\n})(window);","map":{"version":3,"sources":["/home/grito/Projetos/b2w-starwars/node_modules/soundmanager2/script/soundmanager2.js"],"names":["SM2","window","_undefined","document","Error","soundManager","SoundManager","smURL","smID","setupOptions","url","flashVersion","debugMode","debugFlash","useConsole","consoleOnly","waitForWindowLoad","bgColor","useHighPerformance","flashPollingInterval","html5PollingInterval","flashLoadTimeout","wmode","allowScriptAccess","useFlashBlock","useHTML5Audio","forceUseGlobalHTML5Audio","ignoreMobileRestrictions","html5Test","preferFlash","noSWFCache","idPrefix","defaultOptions","autoLoad","autoPlay","from","loops","onid3","onerror","onload","whileloading","onplay","onpause","onresume","whileplaying","onposition","onstop","onfinish","multiShot","multiShotEvents","position","pan","playbackRate","stream","to","type","usePolicyFile","volume","flash9Options","onfailure","isMovieStar","usePeakData","useWaveformData","useEQData","onbufferchange","ondataerror","movieStarOptions","bufferTime","serverURL","onconnect","duration","audioFormats","mp3","required","mp4","related","ogg","opus","wav","flac","movieID","id","debugID","debugURLParam","versionNumber","version","movieURL","altURL","swfLoaded","enabled","oMC","sounds","soundIDs","muted","didFlashBlock","filePattern","filePatterns","flash8","flash9","features","buffering","peakData","waveformData","eqData","movieStar","sandbox","types","remote","localWithFile","localWithNetwork","localTrusted","description","noRemote","noLocal","html5","usingFlash","flash","html5Only","ignoreFlash","SMSound","sm2","globalHTML5Audio","sm","smc","h5","ua","navigator","userAgent","wl","location","href","toString","doc","doNothing","setProperties","init","fV","on_queue","debugOpen","debugTS","didAppend","appendSuccess","didInit","disabled","windowLoaded","_wDS","wdCount","initComplete","mixin","assign","extraOptions","addOnEvent","processOnEvents","initUserOnload","delayWaitForEI","waitForEI","rebootIntoHTML5","setVersionInfo","handleFocus","strings","initMovie","domContentLoaded","winOnLoad","didDCLoaded","getDocument","createMovie","catchError","setPolling","initDebug","debugLevels","defaultFlashVersion","disableObject","failSafely","normalizeMovieURL","oRemoved","oRemovedHTML","str","flashBlockHandler","getSWFCSS","swfCSS","toggleDebug","loopFix","policyFix","complain","idCheck","waitingForEI","initPending","startTimer","stopTimer","timerExecute","h5TimerCount","h5IntervalTimer","parseURL","messages","canIgnoreFlash","needsFlash","featureCheck","html5OK","html5CanPlay","html5ErrorCodes","html5Ext","html5Unload","domContentLoadedIE","testHTML5","event","slice","Array","prototype","useGlobalHTML5Audio","lastGlobalHTML5URL","hasFlash","detectFlash","badSafariFix","html5_events","showSupport","flushMessages","wrapCallback","idCounter","didSetup","msecScale","is_iDevice","match","isAndroid","isIE","isWebkit","isSafari","isOpera","mobileHTML5","isBadSafari","hasConsole","console","log","isFocused","hasFocus","tryInitOnFocus","okToDisable","flashMIME","emptyURL","emptyWAV","overHTTP","protocol","http","netStreamMimeTypes","netStreamTypes","netStreamPattern","RegExp","join","mimePattern","useAltURL","swfBox","swfDefault","swfError","swfTimedout","swfUnblocked","sm2Debug","highPerf","flashDebug","hasHTML5","Audio","opera","canPlayType","e","setup","options","noURL","ok","push","globalHTML5","ignoreMobile","_wD","mobileUA","beginDelayedInit","readyState","setTimeout","supported","getMovie","movie_id","createSound","oOptions","_url","cs","cs_string","oSound","charAt","make","_setup_html5","_createSound","connected","apply","load","play","destroySound","sID","_bFromSound","oS","i","stop","_iO","unload","length","splice","destruct","onPosition","nPosition","oMethod","oScope","clearOnPosition","result","overloaded","Object","start","setPlaybackRate","rate","allowOverride","setPosition","nMsecOffset","stopAll","hasOwnProperty","pause","pauseAll","resume","resumeAll","togglePause","setPan","nPan","setVolume","nVol","j","isNaN","mute","String","muteAll","unmute","unmuteAll","toggleMute","getMemoryUse","ram","parseInt","_getMemoryUse","disable","bNoDisable","remove","canPlayMIME","sMIME","canPlayURL","sURL","canPlayLink","oLink","getSoundById","_suppressDebug","onready","sType","ontimeout","_writeDebug","sText","sTypeOrObject","sDID","o","oItem","createElement","className","appendChild","createTextNode","style","fontWeight","color","insertBefore","firstChild","indexOf","alert","_debug","reboot","resetEvents","excludeInit","k","innerHTML","parentNode","removeChild","fired","reset","getMoviePercent","PercentLoaded","s","resetProperties","add_html5_events","remove_html5_events","stop_html5_timer","start_html5_timer","attachOnPosition","onplay_called","onPositionItems","onPositionFired","detachOnPosition","applyFromTo","lastURL","lastHTML5State","urlOmitted","time","instanceOptions","isHTML5","_a","id3","loaded","playState","_called_load","_html5_canplay","src","autobuffer","preload","_load","fatal","_unload","_bFromSM","_destroySound","_s","_updatePlayState","fN","allowMulti","a","audioClone","onended","oncanplay","startOK","getAutoPlay","setAutoPlay","paused","substr","lastIndexOf","instanceCount","_oncanplay","_start","onplayerror","_onfinish","currentTime","err","add","Math","max","min","bAll","originalPosition","_onbufferchange","_resetOnPosition","_stop","_onTimer","_setAutoPlay","normalizedRate","message","position1K","offset","_setPosition","toFixed","_bCallFlash","_pause","bInstanceOnly","_setPan","_bInstanceOnly","_setVolume","hasIO","method","scope","_processOnPosition","item","f","t","end","op","retainPosition","_hasTimer","bytesLoaded","bytesTotal","durationEstimate","buffered","left","right","failures","isBuffering","metadata","bForce","isNew","x","_get_html5_duration","_whileplaying","d","Infinity","_apply_loop","nLoops","loop","dURL","decodeURI","sameURL","_added_events","oEvt","oFn","bCapture","addEventListener","removeEventListener","_onload","nSuccess","loadOK","_onerror","errorCode","nIsBuffering","_onsuspend","onsuspend","_onfailure","msg","level","code","_onwarning","onwarning","io_onfinish","_whileloading","nBytesLoaded","nBytesTotal","nDuration","nBufferLength","floor","bufferLength","oPeakData","oWaveformDataLeft","oWaveformDataRight","oEQData","eqLeft","leftPeak","rightPeak","split","leftEQ","rightEQ","_oncaptiondata","oData","captiondata","oncaptiondata","_onmetadata","oMDProps","oMDData","onmetadata","call","_onid3","oID3Props","oID3Data","_onconnect","bSuccess","_ondataerror","sError","body","getElementsByTagName","getElementById","oMain","oAdd","o1","o2","callback","oParent","hasParent","bonusOptions","Function","preferFlashCheck","kind","old","attachEvent","evt","getArgs","oArgs","args","len","pop","element","shift","arguments","html5_event","abort","canplay","ee","canplaythrough","durationchange","ended","error","loadeddata","_loaded","loadedmetadata","loadstart","playing","fromCharCode","progress","progStr","isProgress","ranges","target","total","ratechange","suspend","stalled","timeupdate","waiting","iO","oAudio","_called_unload","mime","aF","fileExt","concat","toLowerCase","lookup","support","cp","m","canPlay","isOK","notReady","notOK","domError","spcWmode","swf404","tryDebug","checkSWF","localFail","waitFocus","waitForever","waitSWF","needFunction","badID","currentObj","waitOnload","docLoaded","onloadOK","secNote","badRemove","shutdown","queue","smError","fbTimeout","fbLoaded","fbHandler","manURL","onURL","badFV","as2loop","noNSLoop","needfl9","mfTimeout","needFlash","gotFocus","policy","setupError","setupUndef","setupLate","sm2Loaded","sstr","replace","sOpt","sPre","sMsg","warn","oProp","urlParams","Date","getTime","isDebug","bPolling","bHighPerformance","_setPolling","test","oD","oDebug","oTarget","oToggle","tmp","bottom","width","height","lineHeight","margin","textAlign","border","cursor","background","zIndex","onclick","title","display","e2","errorLevel","oT","sEventType","sMessage","sm2Debugger","handleEvent","css","name","p","ignoreInit","status","success","srcQueue","canRetry","hasPlugin","n","obj","AX","ActiveXObject","nP","plugins","undefined","mimeTypes","enabledPlugin","flashNeeded","formats","isSpecial","urlResult","setInterval","clearInterval","_setSandboxType","sandboxType","sb","_externalInterfaceOK","swfVersion","initMsg","delimiter","remoteURL","localURL","swfTitle","extraClass","isRTL","html","oEmbed","oMovie","movieHTML","oEl","sClass","dir","param","value","platform","quality","bgcolor","pluginspage","hasPriority","FlashVars","setAttribute","overflow","top","abs","oninitmovie","loadIncomplete","cleanup","tests","wasTimeout","_externalInterfaceTest","_disableDebug","detachEvent","SM2_DEFER","module","exports","define","amd","getInstance","smBuilder","instance","constructor"],"mappings":"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","sourcesContent":["/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\r\n\r\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\r\n\r\n(function SM2(window, _undefined) {\r\n\r\n/* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\r\n\r\n'use strict';\r\n\r\nif (!window || !window.document) {\r\n\r\n  // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\r\n  // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\r\n\r\n  throw new Error('SoundManager requires a browser with window and document objects.');\r\n\r\n}\r\n\r\nvar soundManager = null;\r\n\r\n/**\r\n * The SoundManager constructor.\r\n *\r\n * @constructor\r\n * @param {string} smURL Optional: Path to SWF files\r\n * @param {string} smID Optional: The ID to use for the SWF container element\r\n * @this {SoundManager}\r\n * @return {SoundManager} The new SoundManager instance\r\n */\r\n\r\nfunction SoundManager(smURL, smID) {\r\n\r\n  /**\r\n   * soundManager configuration options list\r\n   * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n   * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n   */\r\n\r\n  this.setupOptions = {\r\n\r\n    url: (smURL || null),             // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\r\n    flashVersion: 8,                  // flash build to use (8 or 9.) Some API features require 9.\r\n    debugMode: true,                  // enable debugging output (console.log() with HTML fallback)\r\n    debugFlash: false,                // enable debugging output inside SWF, troubleshoot Flash/browser issues\r\n    useConsole: true,                 // use console.log() if available (otherwise, writes to #soundmanager-debug element)\r\n    consoleOnly: true,                // if console is being used, do not create/write to #soundmanager-debug\r\n    waitForWindowLoad: false,         // force SM2 to wait for window.onload() before trying to call soundManager.onload()\r\n    bgColor: '#ffffff',               // SWF background color. N/A when wmode = 'transparent'\r\n    useHighPerformance: false,        // position:fixed flash movie can help increase js/flash speed, minimize lag\r\n    flashPollingInterval: null,       // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\r\n    html5PollingInterval: null,       // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\r\n    flashLoadTimeout: 1000,           // msec to wait for flash movie to load before failing (0 = infinity)\r\n    wmode: null,                      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\r\n    allowScriptAccess: 'always',      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\r\n    useFlashBlock: false,             // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\r\n    useHTML5Audio: true,              // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\r\n    forceUseGlobalHTML5Audio: false,  // if true, a single Audio() object is used for all sounds - and only one can play at a time.\r\n    ignoreMobileRestrictions: false,  // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\r\n    html5Test: /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\r\n    preferFlash: false,               // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\r\n    noSWFCache: false,                // if true, appends ?ts={date} to break aggressive SWF caching.\r\n    idPrefix: 'sound'                 // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\r\n\r\n  };\r\n\r\n  this.defaultOptions = {\r\n\r\n    /**\r\n     * the default configuration for sound objects made with createSound() and related methods\r\n     * eg., volume, auto-load behaviour and so forth\r\n     */\r\n\r\n    autoLoad: false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\r\n    autoPlay: false,        // enable playing of file as soon as possible (much faster if \"stream\" is true)\r\n    from: null,             // position to start playback within a sound (msec), default = beginning\r\n    loops: 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\r\n    onid3: null,            // callback function for \"ID3 data is added/available\"\r\n    onerror: null,          // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\r\n    onload: null,           // callback function for \"load finished\"\r\n    whileloading: null,     // callback function for \"download progress update\" (X of Y bytes received)\r\n    onplay: null,           // callback for \"play\" start\r\n    onpause: null,          // callback for \"pause\"\r\n    onresume: null,         // callback for \"resume\" (pause toggle)\r\n    whileplaying: null,     // callback during play (position update)\r\n    onposition: null,       // object containing times and function callbacks for positions of interest\r\n    onstop: null,           // callback for \"user stop\"\r\n    onfinish: null,         // callback function for \"sound finished playing\"\r\n    multiShot: true,        // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\r\n    multiShotEvents: false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\r\n    position: null,         // offset (milliseconds) to seek to within loaded sound data.\r\n    pan: 0,                 // \"pan\" settings, left-to-right, -100 to 100\r\n    playbackRate: 1,        // rate at which to play the sound (HTML5-only)\r\n    stream: true,           // allows playing before entire file has loaded (recommended)\r\n    to: null,               // position to end playback within a sound (msec), default = end\r\n    type: null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\r\n    usePolicyFile: false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\r\n    volume: 100             // self-explanatory. 0-100, the latter being the max.\r\n\r\n  };\r\n\r\n  this.flash9Options = {\r\n\r\n    /**\r\n     * flash 9-only options,\r\n     * merged into defaultOptions if flash 9 is being used\r\n     */\r\n\r\n    onfailure: null,        // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\r\n    isMovieStar: null,      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\r\n    usePeakData: false,     // enable left/right channel peak (level) data\r\n    useWaveformData: false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\r\n    useEQData: false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\r\n    onbufferchange: null,   // callback for \"isBuffering\" property change\r\n    ondataerror: null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\r\n\r\n  };\r\n\r\n  this.movieStarOptions = {\r\n\r\n    /**\r\n     * flash 9.0r115+ MPEG4 audio options,\r\n     * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n     */\r\n\r\n    bufferTime: 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\r\n    serverURL: null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\r\n    onconnect: null,        // rtmp: callback for connection to flash media server\r\n    duration: null          // rtmp: song duration (msec)\r\n\r\n  };\r\n\r\n  this.audioFormats = {\r\n\r\n    /**\r\n     * determines HTML5 support + flash requirements.\r\n     * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n     */\r\n\r\n    mp3: {\r\n      type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\r\n      required: true\r\n    },\r\n\r\n    mp4: {\r\n      related: ['aac', 'm4a', 'm4b'], // additional formats under the MP4 container\r\n      type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\r\n      required: false\r\n    },\r\n\r\n    ogg: {\r\n      type: ['audio/ogg; codecs=vorbis'],\r\n      required: false\r\n    },\r\n\r\n    opus: {\r\n      type: ['audio/ogg; codecs=opus', 'audio/opus'],\r\n      required: false\r\n    },\r\n\r\n    wav: {\r\n      type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\r\n      required: false\r\n    },\r\n\r\n    flac: {\r\n      type: ['audio/flac'],\r\n      required: false\r\n    }\r\n\r\n  };\r\n\r\n  // HTML attributes (id + class names) for the SWF container\r\n\r\n  this.movieID = 'sm2-container';\r\n  this.id = (smID || 'sm2movie');\r\n\r\n  this.debugID = 'soundmanager-debug';\r\n  this.debugURLParam = /([#?&])debug=1/i;\r\n\r\n  // dynamic attributes\r\n\r\n  this.versionNumber = 'V2.97a.20170601';\r\n  this.version = null;\r\n  this.movieURL = null;\r\n  this.altURL = null;\r\n  this.swfLoaded = false;\r\n  this.enabled = false;\r\n  this.oMC = null;\r\n  this.sounds = {};\r\n  this.soundIDs = [];\r\n  this.muted = false;\r\n  this.didFlashBlock = false;\r\n  this.filePattern = null;\r\n\r\n  this.filePatterns = {\r\n    flash8: /\\.mp3(\\?.*)?$/i,\r\n    flash9: /\\.mp3(\\?.*)?$/i\r\n  };\r\n\r\n  // support indicators, set at init\r\n\r\n  this.features = {\r\n    buffering: false,\r\n    peakData: false,\r\n    waveformData: false,\r\n    eqData: false,\r\n    movieStar: false\r\n  };\r\n\r\n  // flash sandbox info, used primarily in troubleshooting\r\n\r\n  this.sandbox = {\r\n    // <d>\r\n    type: null,\r\n    types: {\r\n      remote: 'remote (domain-based) rules',\r\n      localWithFile: 'local with file access (no internet access)',\r\n      localWithNetwork: 'local with network (internet access only, no local access)',\r\n      localTrusted: 'local, trusted (local+internet access)'\r\n    },\r\n    description: null,\r\n    noRemote: null,\r\n    noLocal: null\r\n    // </d>\r\n  };\r\n\r\n  /**\r\n   * format support (html5/flash)\r\n   * stores canPlayType() results based on audioFormats.\r\n   * eg. { mp3: boolean, mp4: boolean }\r\n   * treat as read-only.\r\n   */\r\n\r\n  this.html5 = {\r\n    usingFlash: null // set if/when flash fallback is needed\r\n  };\r\n\r\n  // file type support hash\r\n  this.flash = {};\r\n\r\n  // determined at init time\r\n  this.html5Only = false;\r\n\r\n  // used for special cases (eg. iPad/iPhone/palm OS?)\r\n  this.ignoreFlash = false;\r\n\r\n  /**\r\n   * a few private internals (OK, a lot. :D)\r\n   */\r\n\r\n  var SMSound,\r\n  sm2 = this, globalHTML5Audio = null, flash = null, sm = 'soundManager', smc = sm + ': ', h5 = 'HTML5::', id, ua = navigator.userAgent, wl = window.location.href.toString(), doc = document, doNothing, setProperties, init, fV, on_queue = [], debugOpen = true, debugTS, didAppend = false, appendSuccess = false, didInit = false, disabled = false, windowLoaded = false, _wDS, wdCount = 0, initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'], defaultFlashVersion = 8, disableObject, failSafely, normalizeMovieURL, oRemoved = null, oRemovedHTML = null, str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false, initPending = false, startTimer, stopTimer, timerExecute, h5TimerCount = 0, h5IntervalTimer = null, parseURL, messages = [],\r\n  canIgnoreFlash, needsFlash = null, featureCheck, html5OK, html5CanPlay, html5ErrorCodes, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice, useGlobalHTML5Audio = false, lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0, didSetup, msecScale = 1000,\r\n  is_iDevice = ua.match(/(ipad|iphone|ipod)/i), isAndroid = ua.match(/android/i), isIE = ua.match(/msie|trident/i),\r\n  isWebkit = ua.match(/webkit/i),\r\n  isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\r\n  isOpera = (ua.match(/opera/i)),\r\n  mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\r\n  isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\r\n  hasConsole = (window.console !== _undefined && console.log !== _undefined),\r\n  isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\r\n  tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\r\n  okToDisable = !tryInitOnFocus,\r\n  flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\r\n  emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\r\n  emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\r\n  overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\r\n  http = (!overHTTP ? '//' : ''),\r\n  // mp3, mp4, aac etc.\r\n  netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\r\n  // Flash v9.0r115+ \"moviestar\" formats\r\n  netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\r\n  netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n  this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\r\n\r\n  // use altURL if not \"online\"\r\n  this.useAltURL = !overHTTP;\r\n\r\n  swfCSS = {\r\n    swfBox: 'sm2-object-box',\r\n    swfDefault: 'movieContainer',\r\n    swfError: 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\r\n    swfTimedout: 'swf_timedout',\r\n    swfLoaded: 'swf_loaded',\r\n    swfUnblocked: 'swf_unblocked', // or loaded OK\r\n    sm2Debug: 'sm2_debug',\r\n    highPerf: 'high_performance',\r\n    flashDebug: 'flash_debug'\r\n  };\r\n\r\n  /**\r\n   * HTML5 error codes, per W3C\r\n   * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n   * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n   * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n   * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n   * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n   */\r\n  html5ErrorCodes = [\r\n    null,\r\n    'MEDIA_ERR_ABORTED',\r\n    'MEDIA_ERR_NETWORK',\r\n    'MEDIA_ERR_DECODE',\r\n    'MEDIA_ERR_SRC_NOT_SUPPORTED'\r\n  ];\r\n\r\n  /**\r\n   * basic HTML5 Audio() support test\r\n   * try...catch because of IE 9 \"not implemented\" nonsense\r\n   * https://github.com/Modernizr/Modernizr/issues/224\r\n   */\r\n\r\n  this.hasHTML5 = (function() {\r\n    try {\r\n      // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\r\n      return (Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * Public SoundManager API\r\n   * -----------------------\r\n   */\r\n\r\n  /**\r\n   * Configures top-level soundManager properties.\r\n   *\r\n   * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n   * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n   */\r\n\r\n  this.setup = function(options) {\r\n\r\n    var noURL = (!sm2.url);\r\n\r\n    // warn if flash options have already been applied\r\n\r\n    if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\r\n      complain(str('setupLate'));\r\n    }\r\n\r\n    // TODO: defer: true?\r\n\r\n    assign(options);\r\n\r\n    if (!useGlobalHTML5Audio) {\r\n\r\n      if (mobileHTML5) {\r\n\r\n        // force the singleton HTML5 pattern on mobile, by default.\r\n        if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n          messages.push(strings.globalHTML5);\r\n          useGlobalHTML5Audio = true;\r\n        }\r\n\r\n      } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n\r\n        // only apply singleton HTML5 on desktop if forced.\r\n        messages.push(strings.globalHTML5);\r\n        useGlobalHTML5Audio = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (!didSetup && mobileHTML5) {\r\n\r\n      if (sm2.setupOptions.ignoreMobileRestrictions) {\r\n\r\n        messages.push(strings.ignoreMobile);\r\n\r\n      } else {\r\n\r\n        // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\r\n\r\n        // <d>\r\n        if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\r\n          // notify that defaults are being changed.\r\n          sm2._wD(strings.mobileUA);\r\n        }\r\n        // </d>\r\n\r\n        sm2.setupOptions.useHTML5Audio = true;\r\n        sm2.setupOptions.preferFlash = false;\r\n\r\n        if (is_iDevice) {\r\n\r\n          // no flash here.\r\n          sm2.ignoreFlash = true;\r\n\r\n        } else if ((isAndroid && !ua.match(/android\\s2\\.3/i)) || !isAndroid) {\r\n\r\n          /**\r\n           * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n           * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n           * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n           */\r\n\r\n          // <d>\r\n          sm2._wD(strings.globalHTML5);\r\n          // </d>\r\n\r\n          useGlobalHTML5Audio = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\r\n\r\n    if (options) {\r\n\r\n      if (noURL && didDCLoaded && options.url !== _undefined) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n      // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\r\n\r\n      if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\r\n        setTimeout(domContentLoaded, 1);\r\n      }\r\n\r\n    }\r\n\r\n    didSetup = true;\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.ok = function() {\r\n\r\n    return (needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\r\n\r\n  };\r\n\r\n  this.supported = this.ok; // legacy\r\n\r\n  this.getMovie = function(movie_id) {\r\n\r\n    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\r\n    return id(movie_id) || doc[movie_id] || window[movie_id];\r\n\r\n  };\r\n\r\n  /**\r\n   * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n   *\r\n   * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n   * @return {object} SMSound The new SMSound object.\r\n   */\r\n\r\n  this.createSound = function(oOptions, _url) {\r\n\r\n    var cs, cs_string, options, oSound = null;\r\n\r\n    // <d>\r\n    cs = sm + '.createSound(): ';\r\n    cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\r\n    // </d>\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(cs_string);\r\n      return false;\r\n    }\r\n\r\n    if (_url !== _undefined) {\r\n      // function overloading in JS! :) ... assume simple createSound(id, url) use case.\r\n      oOptions = {\r\n        id: oOptions,\r\n        url: _url\r\n      };\r\n    }\r\n\r\n    // inherit from defaultOptions\r\n    options = mixin(oOptions);\r\n\r\n    options.url = parseURL(options.url);\r\n\r\n    // generate an id, if needed.\r\n    if (options.id === _undefined) {\r\n      options.id = sm2.setupOptions.idPrefix + (idCounter++);\r\n    }\r\n\r\n    // <d>\r\n    if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\r\n      sm2._wD(cs + str('badID', options.id), 2);\r\n    }\r\n\r\n    sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\r\n    // </d>\r\n\r\n    if (idCheck(options.id, true)) {\r\n      sm2._wD(cs + options.id + ' exists', 1);\r\n      return sm2.sounds[options.id];\r\n    }\r\n\r\n    function make() {\r\n\r\n      options = loopFix(options);\r\n      sm2.sounds[options.id] = new SMSound(options);\r\n      sm2.soundIDs.push(options.id);\r\n      return sm2.sounds[options.id];\r\n\r\n    }\r\n\r\n    if (html5OK(options)) {\r\n\r\n      oSound = make();\r\n      // <d>\r\n      if (!sm2.html5Only) {\r\n        sm2._wD(options.id + ': Using HTML5');\r\n      }\r\n      // </d>\r\n      oSound._setup_html5(options);\r\n\r\n    } else {\r\n\r\n      if (sm2.html5Only) {\r\n        sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\r\n\r\n      if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\r\n        // data: URIs not supported by Flash, either.\r\n        sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      if (fV > 8) {\r\n        if (options.isMovieStar === null) {\r\n          // attempt to detect MPEG-4 formats\r\n          options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\r\n        }\r\n        // <d>\r\n        if (options.isMovieStar) {\r\n          sm2._wD(cs + 'using MovieStar handling');\r\n          if (options.loops > 1) {\r\n            _wDS('noNSLoop');\r\n          }\r\n        }\r\n        // </d>\r\n      }\r\n\r\n      options = policyFix(options, cs);\r\n      oSound = make();\r\n\r\n      if (fV === 8) {\r\n        flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\r\n      } else {\r\n        flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\r\n        if (!options.serverURL) {\r\n          // We are connected immediately\r\n          oSound.connected = true;\r\n          if (options.onconnect) {\r\n            options.onconnect.apply(oSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\r\n        // call load for non-rtmp streams\r\n        oSound.load(options);\r\n      }\r\n\r\n    }\r\n\r\n    // rtmp will play in onconnect\r\n    if (!options.serverURL && options.autoPlay) {\r\n      oSound.play();\r\n    }\r\n\r\n    return oSound;\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys a SMSound sound object instance.\r\n   *\r\n   * @param {string} sID The ID of the sound to destroy\r\n   */\r\n\r\n  this.destroySound = function(sID, _bFromSound) {\r\n\r\n    // explicitly destroy a sound before normal page unload, etc.\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    var oS = sm2.sounds[sID], i;\r\n\r\n    oS.stop();\r\n\r\n    // Disable all callbacks after stop(), when the sound is being destroyed\r\n    oS._iO = {};\r\n\r\n    oS.unload();\r\n\r\n    for (i = 0; i < sm2.soundIDs.length; i++) {\r\n      if (sm2.soundIDs[i] === sID) {\r\n        sm2.soundIDs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!_bFromSound) {\r\n      // ignore if being called from SMSound instance\r\n      oS.destruct(true);\r\n    }\r\n\r\n    oS = null;\r\n    delete sm2.sounds[sID];\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the load() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   */\r\n\r\n  this.load = function(sID, oOptions) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].load(oOptions);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unload() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   */\r\n\r\n  this.unload = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].unload();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the onPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod The relevant callback to fire\r\n   * @param {object} oScope Optional: The scope to apply the callback to\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.onPosition = function(sID, nPosition, oMethod, oScope) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\r\n\r\n  };\r\n\r\n  // legacy/backwards-compability: lower-case method name\r\n  this.onposition = this.onPosition;\r\n\r\n  /**\r\n   * Calls the clearOnPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod Optional: The relevant callback to fire\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.clearOnPosition = function(sID, nPosition, oMethod) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the play() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.play = function(sID, oOptions) {\r\n\r\n    var result = null,\r\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\r\n        overloaded = (oOptions && !(oOptions instanceof Object));\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\r\n      return false;\r\n    }\r\n\r\n    if (!idCheck(sID, overloaded)) {\r\n\r\n      // no sound found for the given ID. Bail.\r\n      if (!overloaded) return false;\r\n\r\n      if (overloaded) {\r\n        oOptions = {\r\n          url: oOptions\r\n        };\r\n      }\r\n\r\n      if (oOptions && oOptions.url) {\r\n        // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\r\n        sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\r\n        oOptions.id = sID;\r\n        result = sm2.createSound(oOptions).play();\r\n      }\r\n\r\n    } else if (overloaded) {\r\n\r\n      // existing sound object case\r\n      oOptions = {\r\n        url: oOptions\r\n      };\r\n\r\n    }\r\n\r\n    if (result === null) {\r\n      // default case\r\n      result = sm2.sounds[sID].play(oOptions);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  // just for convenience\r\n  this.start = this.play;\r\n\r\n  /**\r\n   * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPlaybackRate = function(sID, rate, allowOverride) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nMsecOffset Position (milliseconds)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPosition = function(sID, nMsecOffset) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPosition(nMsecOffset);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the stop() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.stop = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    sm2._wD(sm + '.stop(' + sID + ')', 1);\r\n\r\n    return sm2.sounds[sID].stop();\r\n\r\n  };\r\n\r\n  /**\r\n   * Stops all currently-playing sounds.\r\n   */\r\n\r\n  this.stopAll = function() {\r\n\r\n    var oSound;\r\n    sm2._wD(sm + '.stopAll()', 1);\r\n\r\n    for (oSound in sm2.sounds) {\r\n      if (sm2.sounds.hasOwnProperty(oSound)) {\r\n        // apply only to sound objects\r\n        sm2.sounds[oSound].stop();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the pause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.pause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].pause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Pauses all currently-playing sounds.\r\n   */\r\n\r\n  this.pauseAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].pause();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the resume() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.resume = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].resume();\r\n\r\n  };\r\n\r\n  /**\r\n   * Resumes all currently-paused sounds.\r\n   */\r\n\r\n  this.resumeAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].resume();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the togglePause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.togglePause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].togglePause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPan() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPan The pan value (-100 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPan = function(sID, nPan) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPan(nPan);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setVolume() method of a SMSound object by ID\r\n   * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nVol The volume value (0 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setVolume = function(sID, nVol) {\r\n\r\n    // setVolume(50) function overloading case - apply to all sounds\r\n\r\n    var i, j;\r\n\r\n    if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\r\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n        sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // setVolume('mySound', 50) case\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setVolume(nVol);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.mute = function(sID) {\r\n\r\n    var i = 0;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.mute(): Muting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].mute();\r\n      }\r\n      sm2.muted = true;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\r\n      return sm2.sounds[sID].mute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Mutes all sounds.\r\n   */\r\n\r\n  this.muteAll = function() {\r\n\r\n    sm2.mute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.unmute = function(sID) {\r\n\r\n    var i;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].unmute();\r\n      }\r\n      sm2.muted = false;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\r\n\r\n      return sm2.sounds[sID].unmute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Unmutes all sounds.\r\n   */\r\n\r\n  this.unmuteAll = function() {\r\n\r\n    sm2.unmute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the toggleMute() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.toggleMute = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].toggleMute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves the memory used by the flash plugin.\r\n   *\r\n   * @return {number} The amount of memory in use\r\n   */\r\n\r\n  this.getMemoryUse = function() {\r\n\r\n    // flash-only\r\n    var ram = 0;\r\n\r\n    if (flash && fV !== 8) {\r\n      ram = parseInt(flash._getMemoryUse(), 10);\r\n    }\r\n\r\n    return ram;\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: NOPs soundManager and all SMSound objects.\r\n   */\r\n\r\n  this.disable = function(bNoDisable) {\r\n\r\n    // destroy all functions\r\n    var i;\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    // already disabled?\r\n    if (disabled) return false;\r\n\r\n    disabled = true;\r\n\r\n    _wDS('shutdown', 1);\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      disableObject(sm2.sounds[sm2.soundIDs[i]]);\r\n    }\r\n\r\n    disableObject(sm2);\r\n\r\n    // fire \"complete\", despite fail\r\n    initComplete(bNoDisable);\r\n\r\n    event.remove(window, 'load', initUserOnload);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n   */\r\n\r\n  this.canPlayMIME = function(sMIME) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        type: sMIME\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      // if flash 9, test netStream (movieStar) types as well.\r\n      result = (sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a URL based on audio support.\r\n   *\r\n   * @param {string} sURL The URL to test\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayURL = function(sURL) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        url: sURL\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      result = (sURL && sm2.ok() ? !!(sURL.match(sm2.filePattern)) : null);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n   *\r\n   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayLink = function(oLink) {\r\n\r\n    if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\r\n\r\n    return sm2.canPlayURL(oLink.href);\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.getSoundById = function(sID, _suppressDebug) {\r\n\r\n    if (!sID) return null;\r\n\r\n    var result = sm2.sounds[sID];\r\n\r\n    // <d>\r\n    if (!result && !_suppressDebug) {\r\n      sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\r\n    }\r\n    // </d>\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has successfully initialized.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.onready = function(oMethod, oScope) {\r\n\r\n    var sType = 'onready',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents();\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has failed to initialize.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.ontimeout = function(oMethod, oScope) {\r\n\r\n    var sType = 'ontimeout',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents({ type: sType });\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Writes console.log()-style debug output to a console or in-browser element.\r\n   * Applies when debugMode = true\r\n   *\r\n   * @param {string} sText The console message\r\n   * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n   */\r\n\r\n  this._writeDebug = function(sText, sTypeOrObject) {\r\n\r\n    // pseudo-private console.log()-style output\r\n    // <d>\r\n\r\n    var sDID = 'soundmanager-debug', o, oItem;\r\n\r\n    if (!sm2.setupOptions.debugMode) return false;\r\n\r\n    if (hasConsole && sm2.useConsole) {\r\n      if (sTypeOrObject && typeof sTypeOrObject === 'object') {\r\n        // object passed; dump to console.\r\n        console.log(sText, sTypeOrObject);\r\n      } else if (debugLevels[sTypeOrObject] !== _undefined) {\r\n        console[debugLevels[sTypeOrObject]](sText);\r\n      } else {\r\n        console.log(sText);\r\n      }\r\n      if (sm2.consoleOnly) return true;\r\n    }\r\n\r\n    o = id(sDID);\r\n\r\n    if (!o) return false;\r\n\r\n    oItem = doc.createElement('div');\r\n\r\n    if (++wdCount % 2 === 0) {\r\n      oItem.className = 'sm2-alt';\r\n    }\r\n\r\n    if (sTypeOrObject === _undefined) {\r\n      sTypeOrObject = 0;\r\n    } else {\r\n      sTypeOrObject = parseInt(sTypeOrObject, 10);\r\n    }\r\n\r\n    oItem.appendChild(doc.createTextNode(sText));\r\n\r\n    if (sTypeOrObject) {\r\n      if (sTypeOrObject >= 2) {\r\n        oItem.style.fontWeight = 'bold';\r\n      }\r\n      if (sTypeOrObject === 3) {\r\n        oItem.style.color = '#ff3333';\r\n      }\r\n    }\r\n\r\n    // top-to-bottom\r\n    // o.appendChild(oItem);\r\n\r\n    // bottom-to-top\r\n    o.insertBefore(oItem, o.firstChild);\r\n\r\n    o = null;\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  // <d>\r\n  // last-resort debugging option\r\n  if (wl.indexOf('sm2-debug=alert') !== -1) {\r\n    this._writeDebug = function(sText) {\r\n      window.alert(sText);\r\n    };\r\n  }\r\n  // </d>\r\n\r\n  // alias\r\n  this._wD = this._writeDebug;\r\n\r\n  /**\r\n   * Provides debug / state information on all SMSound objects.\r\n   */\r\n\r\n  this._debug = function() {\r\n\r\n    // <d>\r\n    var i, j;\r\n    _wDS('currentObj', 1);\r\n\r\n    for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n      sm2.sounds[sm2.soundIDs[i]]._debug();\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  /**\r\n   * Restarts and re-initializes the SoundManager instance.\r\n   *\r\n   * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n   * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n   * @return {object} soundManager The soundManager instance.\r\n   */\r\n\r\n  this.reboot = function(resetEvents, excludeInit) {\r\n\r\n    // reset some (or all) state, and re-init unless otherwise specified.\r\n\r\n    // <d>\r\n    if (sm2.soundIDs.length) {\r\n      sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\r\n    }\r\n    // </d>\r\n\r\n    var i, j, k;\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].destruct();\r\n    }\r\n\r\n    // trash ze flash (remove from the DOM)\r\n\r\n    if (flash) {\r\n\r\n      try {\r\n\r\n        if (isIE) {\r\n          oRemovedHTML = flash.innerHTML;\r\n        }\r\n\r\n        oRemoved = flash.parentNode.removeChild(flash);\r\n\r\n      } catch(e) {\r\n\r\n        // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\r\n\r\n        _wDS('badRemove', 2);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // actually, force recreate of movie.\r\n\r\n    oRemovedHTML = oRemoved = needsFlash = flash = null;\r\n\r\n    sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\r\n\r\n    sm2.soundIDs = [];\r\n    sm2.sounds = {};\r\n\r\n    idCounter = 0;\r\n    didSetup = false;\r\n\r\n    if (!resetEvents) {\r\n      // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\r\n      for (i in on_queue) {\r\n        if (on_queue.hasOwnProperty(i)) {\r\n          for (j = 0, k = on_queue[i].length; j < k; j++) {\r\n            on_queue[i][j].fired = false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // remove all callbacks entirely\r\n      on_queue = [];\r\n    }\r\n\r\n    // <d>\r\n    if (!excludeInit) {\r\n      sm2._wD(sm + ': Rebooting...');\r\n    }\r\n    // </d>\r\n\r\n    // reset HTML5 and flash canPlay test results\r\n\r\n    sm2.html5 = {\r\n      usingFlash: null\r\n    };\r\n\r\n    sm2.flash = {};\r\n\r\n    // reset device-specific HTML/flash mode switches\r\n\r\n    sm2.html5Only = false;\r\n    sm2.ignoreFlash = false;\r\n\r\n    window.setTimeout(function() {\r\n\r\n      // by default, re-init\r\n\r\n      if (!excludeInit) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n    }, 20);\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.reset = function() {\r\n\r\n    /**\r\n     * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n     * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\r\n\r\n    _wDS('reset');\r\n\r\n    return sm2.reboot(true, true);\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: Determines the SM2 flash movie's load progress.\r\n   *\r\n   * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n   */\r\n\r\n  this.getMoviePercent = function() {\r\n\r\n    /**\r\n     * Interesting syntax notes...\r\n     * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n     * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n     * Thus, 'in' syntax must be used.\r\n     */\r\n\r\n    return (flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null);\r\n\r\n  };\r\n\r\n  /**\r\n   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n   */\r\n\r\n  this.beginDelayedInit = function() {\r\n\r\n    windowLoaded = true;\r\n    domContentLoaded();\r\n\r\n    setTimeout(function() {\r\n\r\n      if (initPending) return false;\r\n\r\n      createMovie();\r\n      initMovie();\r\n      initPending = true;\r\n\r\n      return true;\r\n\r\n    }, 20);\r\n\r\n    delayWaitForEI();\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys the SoundManager instance and all SMSound instances.\r\n   */\r\n\r\n  this.destruct = function() {\r\n\r\n    sm2._wD(sm + '.destruct()');\r\n    sm2.disable(true);\r\n\r\n  };\r\n\r\n  /**\r\n   * SMSound() (sound object) constructor\r\n   * ------------------------------------\r\n   *\r\n   * @param {object} oOptions Sound options (id and url are required attributes)\r\n   * @return {SMSound} The new SMSound object\r\n   */\r\n\r\n  SMSound = function(oOptions) {\r\n\r\n    var s = this, resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false, onPositionItems = [], onPositionFired = 0, detachOnPosition, applyFromTo, lastURL = null, lastHTML5State, urlOmitted;\r\n\r\n    lastHTML5State = {\r\n      // tracks duration + position (time)\r\n      duration: null,\r\n      time: null\r\n    };\r\n\r\n    this.id = oOptions.id;\r\n\r\n    // legacy\r\n    this.sID = this.id;\r\n\r\n    this.url = oOptions.url;\r\n    this.options = mixin(oOptions);\r\n\r\n    // per-play-instance-specific options\r\n    this.instanceOptions = this.options;\r\n\r\n    // short alias\r\n    this._iO = this.instanceOptions;\r\n\r\n    // assign property defaults\r\n    this.pan = this.options.pan;\r\n    this.volume = this.options.volume;\r\n\r\n    // whether or not this object is using HTML5\r\n    this.isHTML5 = false;\r\n\r\n    // internal HTML5 Audio() object reference\r\n    this._a = null;\r\n\r\n    // for flash 8 special-case createSound() without url, followed by load/play with url case\r\n    urlOmitted = (!this.url);\r\n\r\n    /**\r\n     * SMSound() public methods\r\n     * ------------------------\r\n     */\r\n\r\n    this.id3 = {};\r\n\r\n    /**\r\n     * Writes SMSound object parameters to debug console\r\n     */\r\n\r\n    this._debug = function() {\r\n\r\n      // <d>\r\n      sm2._wD(s.id + ': Merged options:', s.options);\r\n      // </d>\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins loading a sound per its *url*.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.load = function(options) {\r\n\r\n      var oSound = null, instanceOptions;\r\n\r\n      if (options !== _undefined) {\r\n        s._iO = mixin(options, s.options);\r\n      } else {\r\n        options = s.options;\r\n        s._iO = options;\r\n        if (lastURL && lastURL !== s.url) {\r\n          _wDS('manURL');\r\n          s._iO.url = s.url;\r\n          s.url = null;\r\n        }\r\n      }\r\n\r\n      if (!s._iO.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      // ensure we're in sync\r\n      s.instanceOptions = s._iO;\r\n\r\n      // local shortcut\r\n      instanceOptions = s._iO;\r\n\r\n      sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\r\n\r\n      if (!instanceOptions.url && !s.url) {\r\n        sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\r\n        return s;\r\n      }\r\n\r\n      // <d>\r\n      if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\r\n        // flash 8 load() -> play() won't work before onload has fired.\r\n        sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\r\n      }\r\n      // </d>\r\n\r\n      if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\r\n        _wDS('onURL', 1);\r\n        // if loaded and an onload() exists, fire immediately.\r\n        if (s.readyState === 3 && instanceOptions.onload) {\r\n          // assume success based on truthy duration.\r\n          wrapCallback(s, function() {\r\n            instanceOptions.onload.apply(s, [(!!s.duration)]);\r\n          });\r\n        }\r\n        return s;\r\n      }\r\n\r\n      // reset a few state properties\r\n\r\n      s.loaded = false;\r\n      s.readyState = 1;\r\n      s.playState = 0;\r\n      s.id3 = {};\r\n\r\n      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\r\n\r\n      if (html5OK(instanceOptions)) {\r\n\r\n        oSound = s._setup_html5(instanceOptions);\r\n\r\n        if (!oSound._called_load) {\r\n\r\n          s._html5_canplay = false;\r\n\r\n          // TODO: review called_load / html5_canplay logic\r\n\r\n          // if url provided directly to load(), assign it here.\r\n\r\n          if (s.url !== instanceOptions.url) {\r\n\r\n            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\r\n\r\n            s._a.src = instanceOptions.url;\r\n\r\n            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\r\n\r\n            // reset position for new URL\r\n            s.setPosition(0);\r\n\r\n          }\r\n\r\n          // given explicit load call, try to preload.\r\n\r\n          // early HTML5 implementation (non-standard)\r\n          s._a.autobuffer = 'auto';\r\n\r\n          // standard property, values: none / metadata / auto\r\n          // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\r\n          s._a.preload = 'auto';\r\n\r\n          s._a._called_load = true;\r\n\r\n        } else {\r\n\r\n          sm2._wD(s.id + ': Ignoring request to load again');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5Only) {\r\n          sm2._wD(s.id + ': No flash support. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        if (s._iO.url && s._iO.url.match(/data:/i)) {\r\n          // data: URIs not supported by Flash, either.\r\n          sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        try {\r\n          s.isHTML5 = false;\r\n          s._iO = policyFix(loopFix(instanceOptions));\r\n          // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\r\n          if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\r\n            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\r\n            s._iO.autoPlay = false;\r\n          }\r\n          // re-assign local shortcut\r\n          instanceOptions = s._iO;\r\n          if (fV === 8) {\r\n            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\r\n          } else {\r\n            flash._load(s.id, instanceOptions.url, !!(instanceOptions.stream), !!(instanceOptions.autoPlay), instanceOptions.loops || 1, !!(instanceOptions.autoLoad), instanceOptions.usePolicyFile);\r\n          }\r\n        } catch(e) {\r\n          _wDS('smError', 2);\r\n          debugTS('onload', false);\r\n          catchError({\r\n            type: 'SMSOUND_LOAD_JS_EXCEPTION',\r\n            fatal: true\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      // after all of this, ensure sound url is up to date.\r\n      s.url = instanceOptions.url;\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads a sound, canceling any open HTTP requests.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unload = function() {\r\n\r\n      // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\r\n      // Flash 9/AS3: Close stream, preventing further load\r\n      // HTML5: Most UAs will use empty URL\r\n\r\n      if (s.readyState !== 0) {\r\n\r\n        sm2._wD(s.id + ': unload()');\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          if (fV === 8) {\r\n            flash._unload(s.id, emptyURL);\r\n          } else {\r\n            flash._unload(s.id);\r\n          }\r\n\r\n        } else {\r\n\r\n          stop_html5_timer();\r\n\r\n          if (s._a) {\r\n\r\n            s._a.pause();\r\n\r\n            // update empty URL, too\r\n            lastURL = html5Unload(s._a);\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // reset load/status flags\r\n        resetProperties();\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads and destroys a sound.\r\n     */\r\n\r\n    this.destruct = function(_bFromSM) {\r\n\r\n      sm2._wD(s.id + ': Destruct');\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        // kill sound within Flash\r\n        // Disable the onfailure handler\r\n        s._iO.onfailure = null;\r\n        flash._destroySound(s.id);\r\n\r\n      } else {\r\n\r\n        stop_html5_timer();\r\n\r\n        if (s._a) {\r\n          s._a.pause();\r\n          html5Unload(s._a);\r\n          if (!useGlobalHTML5Audio) {\r\n            remove_html5_events();\r\n          }\r\n          // break obvious circular reference\r\n          s._a._s = null;\r\n          s._a = null;\r\n        }\r\n\r\n      }\r\n\r\n      if (!_bFromSM) {\r\n        // ensure deletion from controller\r\n        sm2.destroySound(s.id, true);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins playing a sound.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.play = function(options, _updatePlayState) {\r\n\r\n      var fN, allowMulti, a, onready,\r\n          audioClone, onended, oncanplay,\r\n          startOK = true;\r\n\r\n      // <d>\r\n      fN = s.id + ': play(): ';\r\n      // </d>\r\n\r\n      // default to true\r\n      _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\r\n\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // first, use local URL (if specified)\r\n      if (s.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      // mix in any options defined at createSound()\r\n      s._iO = mixin(s._iO, s.options);\r\n\r\n      // mix in any options specific to this method\r\n      s._iO = mixin(options, s._iO);\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      s.instanceOptions = s._iO;\r\n\r\n      // RTMP-only\r\n      if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\r\n        if (!s.getAutoPlay()) {\r\n          sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\r\n          s.setAutoPlay(true);\r\n        }\r\n        // play will be called in onconnect()\r\n        return s;\r\n      }\r\n\r\n      if (html5OK(s._iO)) {\r\n        s._setup_html5(s._iO);\r\n        start_html5_timer();\r\n      }\r\n\r\n      if (s.playState === 1 && !s.paused) {\r\n\r\n        allowMulti = s._iO.multiShot;\r\n\r\n        if (!allowMulti) {\r\n\r\n          sm2._wD(fN + 'Already playing (one-shot)', 1);\r\n\r\n          if (s.isHTML5) {\r\n            // go back to original position.\r\n            s.setPosition(s._iO.position);\r\n          }\r\n\r\n          return s;\r\n\r\n        }\r\n\r\n        sm2._wD(fN + 'Already playing (multi-shot)', 1);\r\n\r\n      }\r\n\r\n      // edge case: play() with explicit URL parameter\r\n      if (options.url && options.url !== s.url) {\r\n\r\n        // special case for createSound() followed by load() / play() with url; avoid double-load case.\r\n        if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\r\n\r\n          urlOmitted = false;\r\n\r\n        } else {\r\n\r\n          // load using merged options\r\n          s.load(s._iO);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (!s.loaded) {\r\n\r\n        if (s.readyState === 0) {\r\n\r\n          sm2._wD(fN + 'Attempting to load');\r\n\r\n          // try to get this sound playing ASAP\r\n          if (!s.isHTML5 && !sm2.html5Only) {\r\n\r\n            // flash: assign directly because setAutoPlay() increments the instanceCount\r\n            s._iO.autoPlay = true;\r\n            s.load(s._iO);\r\n\r\n          } else if (s.isHTML5) {\r\n\r\n            // iOS needs this when recycling sounds, loading a new URL on an existing object.\r\n            s.load(s._iO);\r\n\r\n          } else {\r\n\r\n            sm2._wD(fN + 'Unsupported type. Exiting.');\r\n\r\n            return s;\r\n\r\n          }\r\n\r\n          // HTML5 hack - re-set instanceOptions?\r\n          s.instanceOptions = s._iO;\r\n\r\n        } else if (s.readyState === 2) {\r\n\r\n          sm2._wD(fN + 'Could not load - exiting', 2);\r\n\r\n          return s;\r\n\r\n        } else {\r\n\r\n          sm2._wD(fN + 'Loading - attempting to play...');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // \"play()\"\r\n        sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\r\n\r\n      }\r\n\r\n      if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\r\n        // flash 9 needs a position reset if play() is called while at the end of a sound.\r\n        sm2._wD(fN + 'Sound at end, resetting to position: 0');\r\n        options.position = 0;\r\n      }\r\n\r\n      /**\r\n       * Streams will pause when their buffer is full if they are being loaded.\r\n       * In this case paused is true, but the song hasn't started playing yet.\r\n       * If we just call resume() the onplay() callback will never be called.\r\n       * So only call resume() if the position is > 0.\r\n       * Another reason is because options like volume won't have been applied yet.\r\n       * For normal sounds, just resume.\r\n       */\r\n\r\n      if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\r\n\r\n        // https://gist.github.com/37b17df75cc4d7a90bf6\r\n        sm2._wD(fN + 'Resuming from paused state', 1);\r\n        s.resume();\r\n\r\n      } else {\r\n\r\n        s._iO = mixin(options, s._iO);\r\n\r\n        /**\r\n         * Preload in the event of play() with position under Flash,\r\n         * or from/to parameters and non-RTMP case\r\n         */\r\n        if (((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\r\n\r\n          onready = function() {\r\n            // sound \"canplay\" or onload()\r\n            // re-apply position/from/to to instance options, and start playback\r\n            s._iO = mixin(options, s._iO);\r\n            s.play(s._iO);\r\n          };\r\n\r\n          // HTML5 needs to at least have \"canplay\" fired before seeking.\r\n          if (s.isHTML5 && !s._html5_canplay) {\r\n\r\n            // this hasn't been loaded yet. load it first, and then do this again.\r\n            sm2._wD(fN + 'Beginning load for non-zero offset case');\r\n\r\n            s.load({\r\n              // note: custom HTML5-only event added for from/to implementation.\r\n              _oncanplay: onready\r\n            });\r\n\r\n          } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\r\n\r\n            // to be safe, preload the whole thing in Flash.\r\n\r\n            sm2._wD(fN + 'Preloading for non-zero offset case');\r\n\r\n            s.load({\r\n              onload: onready\r\n            });\r\n\r\n          }\r\n\r\n          // otherwise, we're ready to go. re-apply local options, and continue\r\n\r\n          s._iO = applyFromTo();\r\n\r\n        }\r\n\r\n        // sm2._wD(fN + 'Starting to play');\r\n\r\n        // increment instance counter, where enabled + supported\r\n        if (!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\r\n          s.instanceCount++;\r\n        }\r\n\r\n        // if first play and onposition parameters exist, apply them now\r\n        if (s._iO.onposition && s.playState === 0) {\r\n          attachOnPosition(s);\r\n        }\r\n\r\n        s.playState = 1;\r\n        s.paused = false;\r\n\r\n        s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\r\n\r\n        if (!s.isHTML5) {\r\n          s._iO = policyFix(loopFix(s._iO));\r\n        }\r\n\r\n        if (s._iO.onplay && _updatePlayState) {\r\n          s._iO.onplay.apply(s);\r\n          onplay_called = true;\r\n        }\r\n\r\n        s.setVolume(s._iO.volume, true);\r\n        s.setPan(s._iO.pan, true);\r\n\r\n        if (s._iO.playbackRate !== 1) {\r\n          s.setPlaybackRate(s._iO.playbackRate);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\r\n\r\n          if (fV === 9 && !startOK) {\r\n            // edge case: no sound hardware, or 32-channel flash ceiling hit.\r\n            // applies only to Flash 9, non-NetStream/MovieStar sounds.\r\n            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\r\n            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\r\n            if (s._iO.onplayerror) {\r\n              s._iO.onplayerror.apply(s);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (s.instanceCount < 2) {\r\n\r\n            // HTML5 single-instance case\r\n\r\n            start_html5_timer();\r\n\r\n            a = s._setup_html5();\r\n\r\n            s.setPosition(s._iO.position);\r\n\r\n            a.play();\r\n\r\n          } else {\r\n\r\n            // HTML5 multi-shot case\r\n\r\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\r\n\r\n            audioClone = new Audio(s._iO.url);\r\n\r\n            onended = function() {\r\n              event.remove(audioClone, 'ended', onended);\r\n              s._onfinish(s);\r\n              // cleanup\r\n              html5Unload(audioClone);\r\n              audioClone = null;\r\n            };\r\n\r\n            oncanplay = function() {\r\n              event.remove(audioClone, 'canplay', oncanplay);\r\n              try {\r\n                audioClone.currentTime = s._iO.position / msecScale;\r\n              } catch(err) {\r\n                complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position / msecScale));\r\n              }\r\n              audioClone.play();\r\n            };\r\n\r\n            event.add(audioClone, 'ended', onended);\r\n\r\n            // apply volume to clones, too\r\n            if (s._iO.volume !== _undefined) {\r\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\r\n            }\r\n\r\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\r\n            if (s.muted) {\r\n              audioClone.muted = true;\r\n            }\r\n\r\n            if (s._iO.position) {\r\n              // HTML5 audio can't seek before onplay() event has fired.\r\n              // wait for canplay, then seek to position and start playback.\r\n              event.add(audioClone, 'canplay', oncanplay);\r\n            } else {\r\n              // begin playback at currentTime: 0\r\n              audioClone.play();\r\n            }\r\n\r\n          }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // just for convenience\r\n    this.start = this.play;\r\n\r\n    /**\r\n     * Stops playing a sound (and optionally, all sounds)\r\n     *\r\n     * @param {boolean} bAll Optional: Whether to stop all sounds\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.stop = function(bAll) {\r\n\r\n      var instanceOptions = s._iO,\r\n          originalPosition;\r\n\r\n      if (s.playState === 1) {\r\n\r\n        sm2._wD(s.id + ': stop()');\r\n\r\n        s._onbufferchange(0);\r\n        s._resetOnPosition(0);\r\n        s.paused = false;\r\n\r\n        if (!s.isHTML5) {\r\n          s.playState = 0;\r\n        }\r\n\r\n        // remove onPosition listeners, if any\r\n        detachOnPosition();\r\n\r\n        // and \"to\" position, if set\r\n        if (instanceOptions.to) {\r\n          s.clearOnPosition(instanceOptions.to);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          flash._stop(s.id, bAll);\r\n\r\n          // hack for netStream: just unload\r\n          if (instanceOptions.serverURL) {\r\n            s.unload();\r\n          }\r\n\r\n        } else if (s._a) {\r\n\r\n            originalPosition = s.position;\r\n\r\n            // act like Flash, though\r\n            s.setPosition(0);\r\n\r\n            // hack: reflect old position for onstop() (also like Flash)\r\n            s.position = originalPosition;\r\n\r\n            // html5 has no stop()\r\n            // NOTE: pausing means iOS requires interaction to resume.\r\n            s._a.pause();\r\n\r\n            s.playState = 0;\r\n\r\n            // and update UI\r\n            s._onTimer();\r\n\r\n            stop_html5_timer();\r\n\r\n          }\r\n\r\n        s.instanceCount = 0;\r\n        s._iO = {};\r\n\r\n        if (instanceOptions.onstop) {\r\n          instanceOptions.onstop.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Sets autoPlay for RTMP.\r\n     *\r\n     * @param {boolean} autoPlay state\r\n     */\r\n\r\n    this.setAutoPlay = function(autoPlay) {\r\n\r\n      sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\r\n      s._iO.autoPlay = autoPlay;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setAutoPlay(s.id, autoPlay);\r\n        if (autoPlay) {\r\n          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\r\n          if (!s.instanceCount && s.readyState === 1) {\r\n            s.instanceCount++;\r\n            sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Returns the autoPlay boolean.\r\n     *\r\n     * @return {boolean} The current autoPlay value\r\n     */\r\n\r\n    this.getAutoPlay = function() {\r\n\r\n      return s._iO.autoPlay;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the playback rate of a sound (HTML5-only.)\r\n     *\r\n     * @param {number} playbackRate (+/-)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPlaybackRate = function(playbackRate) {\r\n\r\n      // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\r\n      // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\r\n      var normalizedRate = Math.max(0.5, Math.min(4, playbackRate));\r\n\r\n      // <d>\r\n      if (normalizedRate !== playbackRate) {\r\n        sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\r\n      }\r\n      // </d>\r\n\r\n      if (s.isHTML5) {\r\n        try {\r\n          s._iO.playbackRate = normalizedRate;\r\n          s._a.playbackRate = normalizedRate;\r\n        } catch(e) {\r\n          sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\r\n        }\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the position of a sound.\r\n     *\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPosition = function(nMsecOffset) {\r\n\r\n      if (nMsecOffset === _undefined) {\r\n        nMsecOffset = 0;\r\n      }\r\n\r\n      var position, position1K,\r\n          // Use the duration from the instance options, if we don't have a track duration yet.\r\n          // position >= 0 and <= current available (loaded) duration\r\n          offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\r\n\r\n      s.position = offset;\r\n      position1K = s.position / msecScale;\r\n      s._resetOnPosition(s.position);\r\n      s._iO.position = offset;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        position = (fV === 9 ? s.position : position1K);\r\n\r\n        if (s.readyState && s.readyState !== 2) {\r\n          // if paused or not playing, will not resume (by playing)\r\n          flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\r\n        }\r\n\r\n      } else if (s._a) {\r\n\r\n        // Set the position in the canplay handler if the sound is not ready yet\r\n        if (s._html5_canplay) {\r\n\r\n          if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\r\n\r\n            /**\r\n             * DOM/JS errors/exceptions to watch out for:\r\n             * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n             * \"INDEX_SIZE_ERR\": DOM exception 1\r\n             */\r\n            sm2._wD(s.id + ': setPosition(' + position1K + ')');\r\n\r\n            try {\r\n              s._a.currentTime = position1K;\r\n              if (s.playState === 0 || s.paused) {\r\n                // allow seek without auto-play/resume\r\n                s._a.pause();\r\n              }\r\n            } catch(e) {\r\n              sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (position1K) {\r\n\r\n          // warn on non-zero seek attempts\r\n          sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\r\n          return s;\r\n\r\n        }\r\n\r\n        if (s.paused) {\r\n\r\n          // if paused, refresh UI right away by forcing update\r\n          s._onTimer(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.pause = function(_bCallFlash) {\r\n\r\n      if (s.paused || (s.playState === 0 && s.readyState !== 1)) return s;\r\n\r\n      sm2._wD(s.id + ': pause()');\r\n      s.paused = true;\r\n\r\n      if (!s.isHTML5) {\r\n        if (_bCallFlash || _bCallFlash === _undefined) {\r\n          flash._pause(s.id, s._iO.multiShot);\r\n        }\r\n      } else {\r\n        s._setup_html5().pause();\r\n        stop_html5_timer();\r\n      }\r\n\r\n      if (s._iO.onpause) {\r\n        s._iO.onpause.apply(s);\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Resumes sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    /**\r\n     * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n     * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n     * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n     * hasn't been called already. In this case since the sound is being played for the\r\n     * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n     */\r\n\r\n    this.resume = function() {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      if (!s.paused) return s;\r\n\r\n      sm2._wD(s.id + ': resume()');\r\n      s.paused = false;\r\n      s.playState = 1;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\r\n          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\r\n          s.setPosition(s.position);\r\n        }\r\n\r\n        // flash method is toggle-based (pause/resume)\r\n        flash._pause(s.id, instanceOptions.multiShot);\r\n\r\n      } else {\r\n\r\n        s._setup_html5().play();\r\n        start_html5_timer();\r\n\r\n      }\r\n\r\n      if (!onplay_called && instanceOptions.onplay) {\r\n\r\n        instanceOptions.onplay.apply(s);\r\n        onplay_called = true;\r\n\r\n      } else if (instanceOptions.onresume) {\r\n\r\n        instanceOptions.onresume.apply(s);\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.togglePause = function() {\r\n\r\n      sm2._wD(s.id + ': togglePause()');\r\n\r\n      if (s.playState === 0) {\r\n        s.play({\r\n          position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\r\n        });\r\n        return s;\r\n      }\r\n\r\n      if (s.paused) {\r\n        s.resume();\r\n      } else {\r\n        s.pause();\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the panning (L-R) effect.\r\n     *\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPan = function(nPan, bInstanceOnly) {\r\n\r\n      if (nPan === _undefined) {\r\n        nPan = 0;\r\n      }\r\n\r\n      if (bInstanceOnly === _undefined) {\r\n        bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setPan(s.id, nPan);\r\n      } // else { no HTML5 pan? }\r\n\r\n      s._iO.pan = nPan;\r\n\r\n      if (!bInstanceOnly) {\r\n        s.pan = nPan;\r\n        s.options.pan = nPan;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the volume.\r\n     *\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setVolume = function(nVol, _bInstanceOnly) {\r\n\r\n      /**\r\n       * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n       * Hardware volume control overrides software, and volume\r\n       * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n       */\r\n\r\n      if (nVol === _undefined) {\r\n        nVol = 100;\r\n      }\r\n\r\n      if (_bInstanceOnly === _undefined) {\r\n        _bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\r\n\r\n      } else if (s._a) {\r\n\r\n        if (sm2.muted && !s.muted) {\r\n          s.muted = true;\r\n          s._a.muted = true;\r\n        }\r\n\r\n        // valid range for native HTML5 Audio(): 0-1\r\n        s._a.volume = Math.max(0, Math.min(1, nVol / 100));\r\n\r\n      }\r\n\r\n      s._iO.volume = nVol;\r\n\r\n      if (!_bInstanceOnly) {\r\n        s.volume = nVol;\r\n        s.options.volume = nVol;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Mutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.mute = function() {\r\n\r\n      s.muted = true;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, 0);\r\n      } else if (s._a) {\r\n        s._a.muted = true;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unmutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unmute = function() {\r\n\r\n      s.muted = false;\r\n      var hasIO = (s._iO.volume !== _undefined);\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\r\n      } else if (s._a) {\r\n        s._a.muted = false;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles the muted state of a sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.toggleMute = function() {\r\n\r\n      return (s.muted ? s.unmute() : s.mute());\r\n\r\n    };\r\n\r\n    /**\r\n     * Registers a callback to be fired when a sound reaches a given position during playback.\r\n     *\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.onPosition = function(nPosition, oMethod, oScope) {\r\n\r\n      // TODO: basic dupe checking?\r\n\r\n      onPositionItems.push({\r\n        position: parseInt(nPosition, 10),\r\n        method: oMethod,\r\n        scope: (oScope !== _undefined ? oScope : s),\r\n        fired: false\r\n      });\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // legacy/backwards-compability: lower-case method name\r\n    this.onposition = this.onPosition;\r\n\r\n    /**\r\n     * Removes registered callback(s) from a sound, by position and/or callback.\r\n     *\r\n     * @param {number} nPosition The position to clear callback(s) for\r\n     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.clearOnPosition = function(nPosition, oMethod) {\r\n\r\n      var i;\r\n\r\n      nPosition = parseInt(nPosition, 10);\r\n\r\n      if (isNaN(nPosition)) {\r\n        // safety check\r\n        return;\r\n      }\r\n\r\n      for (i = 0; i < onPositionItems.length; i++) {\r\n\r\n        if (nPosition === onPositionItems[i].position) {\r\n          // remove this item if no method was specified, or, if the method matches\r\n\r\n          if (!oMethod || (oMethod === onPositionItems[i].method)) {\r\n\r\n            if (onPositionItems[i].fired) {\r\n              // decrement \"fired\" counter, too\r\n              onPositionFired--;\r\n            }\r\n\r\n            onPositionItems.splice(i, 1);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._processOnPosition = function() {\r\n\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j || !s.playState || onPositionFired >= j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (!item.fired && s.position >= item.position) {\r\n\r\n          item.fired = true;\r\n          onPositionFired++;\r\n          item.method.apply(item.scope, [item.position]);\r\n\r\n          //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\r\n          j = onPositionItems.length;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._resetOnPosition = function(nPosition) {\r\n\r\n      // reset \"fired\" for items interested in this position\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (item.fired && nPosition <= item.position) {\r\n          item.fired = false;\r\n          onPositionFired--;\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * SMSound() private internals\r\n     * --------------------------------\r\n     */\r\n\r\n    applyFromTo = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          f = instanceOptions.from,\r\n          t = instanceOptions.to,\r\n          start, end;\r\n\r\n      end = function() {\r\n\r\n        // end has been reached.\r\n        sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\r\n\r\n        // detach listener\r\n        s.clearOnPosition(t, end);\r\n\r\n        // stop should clear this, too\r\n        s.stop();\r\n\r\n      };\r\n\r\n      start = function() {\r\n\r\n        sm2._wD(s.id + ': Playing \"from\" ' + f);\r\n\r\n        // add listener for end\r\n        if (t !== null && !isNaN(t)) {\r\n          s.onPosition(t, end);\r\n        }\r\n\r\n      };\r\n\r\n      if (f !== null && !isNaN(f)) {\r\n\r\n        // apply to instance options, guaranteeing correct start position.\r\n        instanceOptions.position = f;\r\n\r\n        // multiShot timing can't be tracked, so prevent that.\r\n        instanceOptions.multiShot = false;\r\n\r\n        start();\r\n\r\n      }\r\n\r\n      // return updated instanceOptions including starting position\r\n      return instanceOptions;\r\n\r\n    };\r\n\r\n    attachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // attach onposition things, if any, now.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.onPosition(parseInt(item, 10), op[item]);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    detachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // detach any onposition()-style listeners.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.clearOnPosition(parseInt(item, 10));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    start_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        startTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    stop_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        stopTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    resetProperties = function(retainPosition) {\r\n\r\n      if (!retainPosition) {\r\n        onPositionItems = [];\r\n        onPositionFired = 0;\r\n      }\r\n\r\n      onplay_called = false;\r\n\r\n      s._hasTimer = null;\r\n      s._a = null;\r\n      s._html5_canplay = false;\r\n      s.bytesLoaded = null;\r\n      s.bytesTotal = null;\r\n      s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\r\n      s.durationEstimate = null;\r\n      s.buffered = [];\r\n\r\n      // legacy: 1D array\r\n      s.eqData = [];\r\n\r\n      s.eqData.left = [];\r\n      s.eqData.right = [];\r\n\r\n      s.failures = 0;\r\n      s.isBuffering = false;\r\n      s.instanceOptions = {};\r\n      s.instanceCount = 0;\r\n      s.loaded = false;\r\n      s.metadata = {};\r\n\r\n      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\r\n      s.readyState = 0;\r\n\r\n      s.muted = false;\r\n      s.paused = false;\r\n\r\n      s.peakData = {\r\n        left: 0,\r\n        right: 0\r\n      };\r\n\r\n      s.waveformData = {\r\n        left: [],\r\n        right: []\r\n      };\r\n\r\n      s.playState = 0;\r\n      s.position = null;\r\n\r\n      s.id3 = {};\r\n\r\n    };\r\n\r\n    resetProperties();\r\n\r\n    /**\r\n     * Pseudo-private SMSound internals\r\n     * --------------------------------\r\n     */\r\n\r\n    this._onTimer = function(bForce) {\r\n\r\n      /**\r\n       * HTML5-only _whileplaying() etc.\r\n       * called from both HTML5 native events, and polling/interval-based timers\r\n       * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n       */\r\n\r\n      var duration, isNew = false, time, x = {};\r\n\r\n      if (s._hasTimer || bForce) {\r\n\r\n        // TODO: May not need to track readyState (1 = loading)\r\n\r\n        if (s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\r\n\r\n          duration = s._get_html5_duration();\r\n\r\n          if (duration !== lastHTML5State.duration) {\r\n\r\n            lastHTML5State.duration = duration;\r\n            s.duration = duration;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          // TODO: investigate why this goes wack if not set/re-set each time.\r\n          s.durationEstimate = s.duration;\r\n\r\n          time = (s._a.currentTime * msecScale || 0);\r\n\r\n          if (time !== lastHTML5State.time) {\r\n\r\n            lastHTML5State.time = time;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          if (isNew || bForce) {\r\n\r\n            s._whileplaying(time, x, x, x, x);\r\n\r\n          }\r\n\r\n        }/* else {\r\n\r\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n\r\n          return false;\r\n\r\n        }*/\r\n\r\n      }\r\n\r\n      return isNew;\r\n\r\n    };\r\n\r\n    this._get_html5_duration = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\r\n          d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\r\n          result = (d && !isNaN(d) && d !== Infinity ? d : null);\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n    this._apply_loop = function(a, nLoops) {\r\n\r\n      /**\r\n       * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n       * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n       */\r\n\r\n      // <d>\r\n      if (!a.loop && nLoops > 1) {\r\n        sm2._wD('Note: Native HTML5 looping is infinite.', 1);\r\n      }\r\n      // </d>\r\n\r\n      a.loop = (nLoops > 1 ? 'loop' : '');\r\n\r\n    };\r\n\r\n    this._setup_html5 = function(options) {\r\n\r\n      var instanceOptions = mixin(s._iO, options),\r\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\r\n          dURL = decodeURI(instanceOptions.url),\r\n          sameURL;\r\n\r\n      /**\r\n       * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n       * Fixes case with devices that can only play one sound at a time\r\n       * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n       */\r\n\r\n      if (useGlobalHTML5Audio) {\r\n\r\n        if (dURL === decodeURI(lastGlobalHTML5URL)) {\r\n          // global HTML5 audio: re-use of URL\r\n          sameURL = true;\r\n        }\r\n\r\n      } else if (dURL === decodeURI(lastURL)) {\r\n\r\n        // options URL is the same as the \"last\" URL, and we used (loaded) it\r\n        sameURL = true;\r\n\r\n      }\r\n\r\n      if (a) {\r\n\r\n        if (a._s) {\r\n\r\n          if (useGlobalHTML5Audio) {\r\n\r\n            if (a._s && a._s.playState && !sameURL) {\r\n\r\n              // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\r\n              a._s.stop();\r\n\r\n            }\r\n\r\n          } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\r\n\r\n            // non-global HTML5 reuse case: same url, ignore request\r\n            s._apply_loop(a, instanceOptions.loops);\r\n\r\n            return a;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (!sameURL) {\r\n\r\n          // don't retain onPosition() stuff with new URLs.\r\n\r\n          if (lastURL) {\r\n            resetProperties(false);\r\n          }\r\n\r\n          // assign new HTML5 URL\r\n\r\n          a.src = instanceOptions.url;\r\n\r\n          s.url = instanceOptions.url;\r\n\r\n          lastURL = instanceOptions.url;\r\n\r\n          lastGlobalHTML5URL = instanceOptions.url;\r\n\r\n          a._called_load = false;\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n          s._a = new Audio(instanceOptions.url);\r\n          s._a.load();\r\n\r\n        } else {\r\n\r\n          // null for stupid Opera 9.64 case\r\n          s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\r\n\r\n        }\r\n\r\n        // assign local reference\r\n        a = s._a;\r\n\r\n        a._called_load = false;\r\n\r\n        if (useGlobalHTML5Audio) {\r\n\r\n          globalHTML5Audio = a;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      s.isHTML5 = true;\r\n\r\n      // store a ref on the track\r\n      s._a = a;\r\n\r\n      // store a ref on the audio\r\n      a._s = s;\r\n\r\n      add_html5_events();\r\n\r\n      s._apply_loop(a, instanceOptions.loops);\r\n\r\n      if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n        s.load();\r\n\r\n      } else {\r\n\r\n        // early HTML5 implementation (non-standard)\r\n        a.autobuffer = false;\r\n\r\n        // standard ('none' is also an option.)\r\n        a.preload = 'auto';\r\n\r\n      }\r\n\r\n      return a;\r\n\r\n    };\r\n\r\n    add_html5_events = function() {\r\n\r\n      if (s._a._added_events) return false;\r\n\r\n      var f;\r\n\r\n      function add(oEvt, oFn, bCapture) {\r\n        return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\r\n      }\r\n\r\n      s._a._added_events = true;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          add(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    remove_html5_events = function() {\r\n\r\n      // Remove event listeners\r\n\r\n      var f;\r\n\r\n      function remove(oEvt, oFn, bCapture) {\r\n        return (s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\r\n      }\r\n\r\n      sm2._wD(s.id + ': Removing event listeners');\r\n      s._a._added_events = false;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          remove(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Pseudo-private event internals\r\n     * ------------------------------\r\n     */\r\n\r\n    this._onload = function(nSuccess) {\r\n\r\n      var fN,\r\n          // check for duration to prevent false positives from flash 8 when loading from cache.\r\n          loadOK = !!nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\r\n\r\n      // <d>\r\n      fN = s.id + ': ';\r\n      sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        if (sm2.sandbox.noRemote === true) {\r\n          sm2._wD(fN + str('noNet'), 1);\r\n        }\r\n        if (sm2.sandbox.noLocal === true) {\r\n          sm2._wD(fN + str('noLocal'), 1);\r\n        }\r\n      }\r\n      // </d>\r\n\r\n      s.loaded = loadOK;\r\n      s.readyState = (loadOK ? 3 : 2);\r\n      s._onbufferchange(0);\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        // note: no error code from Flash.\r\n        s._onerror();\r\n      }\r\n\r\n      if (s._iO.onload) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onload.apply(s, [loadOK]);\r\n        });\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._onerror = function(errorCode, description) {\r\n\r\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n      if (s._iO.onerror) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onerror.apply(s, [errorCode, description]);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n    this._onbufferchange = function(nIsBuffering) {\r\n\r\n      // ignore if not playing\r\n      if (s.playState === 0) return false;\r\n\r\n      if ((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) return false;\r\n\r\n      s.isBuffering = (nIsBuffering === 1);\r\n\r\n      if (s._iO.onbufferchange) {\r\n        sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\r\n        s._iO.onbufferchange.apply(s, [nIsBuffering]);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Playback may have stopped due to buffering, or related reason.\r\n     * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n     */\r\n\r\n    this._onsuspend = function() {\r\n\r\n      if (s._iO.onsuspend) {\r\n        sm2._wD(s.id + ': Playback suspended');\r\n        s._iO.onsuspend.apply(s);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n     * at this point we just recreate failed sounds rather than trying to reconnect\r\n     */\r\n\r\n    this._onfailure = function(msg, level, code) {\r\n\r\n      s.failures++;\r\n      sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\r\n\r\n      if (s._iO.onfailure && s.failures === 1) {\r\n        s._iO.onfailure(msg, level, code);\r\n      } else {\r\n        sm2._wD(s.id + ': Ignoring failure');\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n     * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n     */\r\n\r\n    this._onwarning = function(msg, level, code) {\r\n\r\n      if (s._iO.onwarning) {\r\n        s._iO.onwarning(msg, level, code);\r\n      }\r\n\r\n    };\r\n\r\n    this._onfinish = function() {\r\n\r\n      // store local copy before it gets trashed...\r\n      var io_onfinish = s._iO.onfinish;\r\n\r\n      s._onbufferchange(0);\r\n      s._resetOnPosition(0);\r\n\r\n      // reset some state items\r\n      if (s.instanceCount) {\r\n\r\n        s.instanceCount--;\r\n\r\n        if (!s.instanceCount) {\r\n\r\n          // remove onPosition listeners, if any\r\n          detachOnPosition();\r\n\r\n          // reset instance options\r\n          s.playState = 0;\r\n          s.paused = false;\r\n          s.instanceCount = 0;\r\n          s.instanceOptions = {};\r\n          s._iO = {};\r\n          stop_html5_timer();\r\n\r\n          // reset position, too\r\n          if (s.isHTML5) {\r\n            s.position = 0;\r\n          }\r\n\r\n        }\r\n\r\n        if (!s.instanceCount || s._iO.multiShotEvents) {\r\n          // fire onfinish for last, or every instance\r\n          if (io_onfinish) {\r\n            sm2._wD(s.id + ': onfinish()');\r\n            wrapCallback(s, function() {\r\n              io_onfinish.apply(s);\r\n            });\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      s.bytesLoaded = nBytesLoaded;\r\n      s.bytesTotal = nBytesTotal;\r\n      s.duration = Math.floor(nDuration);\r\n      s.bufferLength = nBufferLength;\r\n\r\n      if (!s.isHTML5 && !instanceOptions.isMovieStar) {\r\n\r\n        if (instanceOptions.duration) {\r\n          // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\r\n          s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\r\n        } else {\r\n          s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\r\n        }\r\n\r\n      } else {\r\n\r\n        s.durationEstimate = s.duration;\r\n\r\n      }\r\n\r\n      // for flash, reflect sequential-load-style buffering\r\n      if (!s.isHTML5) {\r\n        s.buffered = [{\r\n          start: 0,\r\n          end: s.duration\r\n        }];\r\n      }\r\n\r\n      // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\r\n      if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\r\n        instanceOptions.whileloading.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\r\n\r\n      var instanceOptions = s._iO,\r\n          eqLeft;\r\n\r\n      // flash safety net\r\n      if (isNaN(nPosition) || nPosition === null) return false;\r\n\r\n      // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\r\n      s.position = Math.max(0, nPosition);\r\n\r\n      s._processOnPosition();\r\n\r\n      if (!s.isHTML5 && fV > 8) {\r\n\r\n        if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\r\n          s.peakData = {\r\n            left: oPeakData.leftPeak,\r\n            right: oPeakData.rightPeak\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\r\n          s.waveformData = {\r\n            left: oWaveformDataLeft.split(','),\r\n            right: oWaveformDataRight.split(',')\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useEQData) {\r\n          if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\r\n            eqLeft = oEQData.leftEQ.split(',');\r\n            s.eqData = eqLeft;\r\n            s.eqData.left = eqLeft;\r\n            if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\r\n              s.eqData.right = oEQData.rightEQ.split(',');\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (s.playState === 1) {\r\n\r\n        // special case/hack: ensure buffering is false if loading from cache (and not yet started)\r\n        if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\r\n          s._onbufferchange(0);\r\n        }\r\n\r\n        if (instanceOptions.whileplaying) {\r\n          // flash may call after actual finish\r\n          instanceOptions.whileplaying.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._oncaptiondata = function(oData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       *\r\n       * @param {object} oData\r\n       */\r\n\r\n      sm2._wD(s.id + ': Caption data received.');\r\n\r\n      s.captiondata = oData;\r\n\r\n      if (s._iO.oncaptiondata) {\r\n        s._iO.oncaptiondata.apply(s, [oData]);\r\n      }\r\n\r\n    };\r\n\r\n    this._onmetadata = function(oMDProps, oMDData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       * RTMP may include song title, MovieStar content may include encoding info\r\n       *\r\n       * @param {array} oMDProps (names)\r\n       * @param {array} oMDData (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': Metadata received.');\r\n\r\n      var oData = {}, i, j;\r\n\r\n      for (i = 0, j = oMDProps.length; i < j; i++) {\r\n        oData[oMDProps[i]] = oMDData[i];\r\n      }\r\n\r\n      s.metadata = oData;\r\n\r\n      if (s._iO.onmetadata) {\r\n        s._iO.onmetadata.call(s, s.metadata);\r\n      }\r\n\r\n    };\r\n\r\n    this._onid3 = function(oID3Props, oID3Data) {\r\n\r\n      /**\r\n       * internal: flash 8 + flash 9 ID3 feature\r\n       * may include artist, song title etc.\r\n       *\r\n       * @param {array} oID3Props (names)\r\n       * @param {array} oID3Data (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': ID3 data received.');\r\n\r\n      var oData = [], i, j;\r\n\r\n      for (i = 0, j = oID3Props.length; i < j; i++) {\r\n        oData[oID3Props[i]] = oID3Data[i];\r\n      }\r\n\r\n      s.id3 = mixin(s.id3, oData);\r\n\r\n      if (s._iO.onid3) {\r\n        s._iO.onid3.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    // flash/RTMP-only\r\n\r\n    this._onconnect = function(bSuccess) {\r\n\r\n      bSuccess = (bSuccess === 1);\r\n      sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\r\n      s.connected = bSuccess;\r\n\r\n      if (bSuccess) {\r\n\r\n        s.failures = 0;\r\n\r\n        if (idCheck(s.id)) {\r\n          if (s.getAutoPlay()) {\r\n            // only update the play state if auto playing\r\n            s.play(_undefined, s.getAutoPlay());\r\n          } else if (s._iO.autoLoad) {\r\n            s.load();\r\n          }\r\n        }\r\n\r\n        if (s._iO.onconnect) {\r\n          s._iO.onconnect.apply(s, [bSuccess]);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._ondataerror = function(sError) {\r\n\r\n      // flash 9 wave/eq data handler\r\n      // hack: called at start, and end from flash at/after onfinish()\r\n      if (s.playState > 0) {\r\n        sm2._wD(s.id + ': Data error: ' + sError);\r\n        if (s._iO.ondataerror) {\r\n          s._iO.ondataerror.apply(s);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // <d>\r\n    this._debug();\r\n    // </d>\r\n\r\n  }; // SMSound()\r\n\r\n  /**\r\n   * Private SoundManager internals\r\n   * ------------------------------\r\n   */\r\n\r\n  getDocument = function() {\r\n\r\n    return (doc.body || doc.getElementsByTagName('div')[0]);\r\n\r\n  };\r\n\r\n  id = function(sID) {\r\n\r\n    return doc.getElementById(sID);\r\n\r\n  };\r\n\r\n  mixin = function(oMain, oAdd) {\r\n\r\n    // non-destructive merge\r\n    var o1 = (oMain || {}), o2, o;\r\n\r\n    // if unspecified, o2 is the default options object\r\n    o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\r\n\r\n    for (o in o2) {\r\n\r\n      if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\r\n\r\n        if (typeof o2[o] !== 'object' || o2[o] === null) {\r\n\r\n          // assign directly\r\n          o1[o] = o2[o];\r\n\r\n        } else {\r\n\r\n          // recurse through o2\r\n          o1[o] = mixin(o1[o], o2[o]);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return o1;\r\n\r\n  };\r\n\r\n  wrapCallback = function(oSound, callback) {\r\n\r\n    /**\r\n     * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n     * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n     * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n     * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n     * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n     */\r\n    if (!oSound.isHTML5 && fV === 8) {\r\n      window.setTimeout(callback, 0);\r\n    } else {\r\n      callback();\r\n    }\r\n\r\n  };\r\n\r\n  // additional soundManager properties that soundManager.setup() will accept\r\n\r\n  extraOptions = {\r\n    onready: 1,\r\n    ontimeout: 1,\r\n    defaultOptions: 1,\r\n    flash9Options: 1,\r\n    movieStarOptions: 1\r\n  };\r\n\r\n  assign = function(o, oParent) {\r\n\r\n    /**\r\n     * recursive assignment of properties, soundManager.setup() helper\r\n     * allows property assignment based on whitelist\r\n     */\r\n\r\n    var i,\r\n        result = true,\r\n        hasParent = (oParent !== _undefined),\r\n        setupOptions = sm2.setupOptions,\r\n        bonusOptions = extraOptions;\r\n\r\n    // <d>\r\n\r\n    // if soundManager.setup() called, show accepted parameters.\r\n\r\n    if (o === _undefined) {\r\n\r\n      result = [];\r\n\r\n      for (i in setupOptions) {\r\n\r\n        if (setupOptions.hasOwnProperty(i)) {\r\n          result.push(i);\r\n        }\r\n\r\n      }\r\n\r\n      for (i in bonusOptions) {\r\n\r\n        if (bonusOptions.hasOwnProperty(i)) {\r\n\r\n          if (typeof sm2[i] === 'object') {\r\n            result.push(i + ': {...}');\r\n          } else if (sm2[i] instanceof Function) {\r\n            result.push(i + ': function() {...}');\r\n          } else {\r\n            result.push(i);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      sm2._wD(str('setup', result.join(', ')));\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // </d>\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // if not an {object} we want to recurse through...\r\n\r\n        if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\r\n\r\n          // check \"allowed\" options\r\n\r\n          if (hasParent && bonusOptions[oParent] !== _undefined) {\r\n\r\n            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\r\n            sm2[oParent][i] = o[i];\r\n\r\n          } else if (setupOptions[i] !== _undefined) {\r\n\r\n            // special case: assign to setupOptions object, which soundManager property references\r\n            sm2.setupOptions[i] = o[i];\r\n\r\n            // assign directly to soundManager, too\r\n            sm2[i] = o[i];\r\n\r\n          } else if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else if (sm2[i] instanceof Function) {\r\n\r\n            /**\r\n             * valid extraOptions (bonusOptions) parameter.\r\n             * is it a method, like onready/ontimeout? call it.\r\n             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n             */\r\n            sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\r\n\r\n          } else {\r\n\r\n            // good old-fashioned direct assignment\r\n            sm2[i] = o[i];\r\n\r\n          }\r\n\r\n        } else if (bonusOptions[i] === _undefined) {\r\n\r\n          // recursion case, eg., { defaultOptions: { ... } }\r\n\r\n          // invalid or disallowed parameter. complain.\r\n          complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n          result = false;\r\n\r\n        } else {\r\n\r\n          // recurse through object\r\n          return assign(o[i], i);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  function preferFlashCheck(kind) {\r\n\r\n    // whether flash should play a given type\r\n    return (sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\r\n\r\n  }\r\n\r\n  /**\r\n   * Internal DOM2-level event helpers\r\n   * ---------------------------------\r\n   */\r\n\r\n  event = (function() {\r\n\r\n    // normalize event methods\r\n    var old = (window.attachEvent),\r\n    evt = {\r\n      add: (old ? 'attachEvent' : 'addEventListener'),\r\n      remove: (old ? 'detachEvent' : 'removeEventListener')\r\n    };\r\n\r\n    // normalize \"on\" event prefix, optional capture argument\r\n    function getArgs(oArgs) {\r\n\r\n      var args = slice.call(oArgs),\r\n          len = args.length;\r\n\r\n      if (old) {\r\n        // prefix\r\n        args[1] = 'on' + args[1];\r\n        if (len > 3) {\r\n          // no capture\r\n          args.pop();\r\n        }\r\n      } else if (len === 3) {\r\n        args.push(false);\r\n      }\r\n\r\n      return args;\r\n\r\n    }\r\n\r\n    function apply(args, sType) {\r\n\r\n      // normalize and call the event method, with the proper arguments\r\n      var element = args.shift(),\r\n          method = [evt[sType]];\r\n\r\n      if (old) {\r\n        // old IE can't do apply().\r\n        element[method](args[0], args[1]);\r\n      } else {\r\n        element[method].apply(element, args);\r\n      }\r\n\r\n    }\r\n\r\n    function add() {\r\n      apply(getArgs(arguments), 'add');\r\n    }\r\n\r\n    function remove() {\r\n      apply(getArgs(arguments), 'remove');\r\n    }\r\n\r\n    return {\r\n      add: add,\r\n      remove: remove\r\n    };\r\n\r\n  }());\r\n\r\n  /**\r\n   * Internal HTML5 event handling\r\n   * -----------------------------\r\n   */\r\n\r\n  function html5_event(oFn) {\r\n\r\n    // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\r\n\r\n    return function(e) {\r\n\r\n      var s = this._s,\r\n          result;\r\n\r\n      if (!s || !s._a) {\r\n        // <d>\r\n        if (s && s.id) {\r\n          sm2._wD(s.id + ': Ignoring ' + e.type);\r\n        } else {\r\n          sm2._wD(h5 + 'Ignoring ' + e.type);\r\n        }\r\n        // </d>\r\n        result = null;\r\n      } else {\r\n        result = oFn.call(this, e);\r\n      }\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  html5_events = {\r\n\r\n    // HTML5 event-name-to-handler map\r\n\r\n    abort: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': abort');\r\n\r\n    }),\r\n\r\n    // enough has loaded to play\r\n\r\n    canplay: html5_event(function() {\r\n\r\n      var s = this._s,\r\n          position1K;\r\n\r\n      if (s._html5_canplay) {\r\n        // this event has already fired. ignore.\r\n        return;\r\n      }\r\n\r\n      s._html5_canplay = true;\r\n      sm2._wD(s.id + ': canplay');\r\n      s._onbufferchange(0);\r\n\r\n      // position according to instance options\r\n      position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null);\r\n\r\n      // set the position if position was provided before the sound loaded\r\n      if (this.currentTime !== position1K) {\r\n        sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\r\n        try {\r\n          this.currentTime = position1K;\r\n        } catch(ee) {\r\n          sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\r\n        }\r\n      }\r\n\r\n      // hack for HTML5 from/to case\r\n      if (s._iO._oncanplay) {\r\n        s._iO._oncanplay();\r\n      }\r\n\r\n    }),\r\n\r\n    canplaythrough: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      if (!s.loaded) {\r\n        s._onbufferchange(0);\r\n        s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\r\n        s._onload(true);\r\n      }\r\n\r\n    }),\r\n\r\n    durationchange: html5_event(function() {\r\n\r\n      // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\r\n\r\n      var s = this._s,\r\n          duration;\r\n\r\n      duration = s._get_html5_duration();\r\n\r\n      if (!isNaN(duration) && duration !== s.duration) {\r\n\r\n        sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\r\n\r\n        s.durationEstimate = s.duration = duration;\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    // TODO: Reserved for potential use\r\n    /*\r\n    emptied: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': emptied');\r\n\r\n    }),\r\n    */\r\n\r\n    ended: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': ended');\r\n\r\n      s._onfinish();\r\n\r\n    }),\r\n\r\n    error: html5_event(function() {\r\n\r\n      var description = (html5ErrorCodes[this.error.code] || null);\r\n      sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\r\n      this._s._onload(false);\r\n      this._s._onerror(this.error.code, description);\r\n\r\n    }),\r\n\r\n    loadeddata: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': loadeddata');\r\n\r\n      // safari seems to nicely report progress events, eventually totalling 100%\r\n      if (!s._loaded && !isSafari) {\r\n        s.duration = s._get_html5_duration();\r\n      }\r\n\r\n    }),\r\n\r\n    loadedmetadata: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadedmetadata');\r\n\r\n    }),\r\n\r\n    loadstart: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadstart');\r\n      // assume buffering at first\r\n      this._s._onbufferchange(1);\r\n\r\n    }),\r\n\r\n    play: html5_event(function() {\r\n\r\n      // sm2._wD(this._s.id + ': play()');\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    playing: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    progress: html5_event(function(e) {\r\n\r\n      // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\r\n\r\n      var s = this._s,\r\n          i, j, progStr, buffered = 0,\r\n          isProgress = (e.type === 'progress'),\r\n          ranges = e.target.buffered,\r\n          // firefox 3.6 implements e.loaded/total (bytes)\r\n          loaded = (e.loaded || 0),\r\n          total = (e.total || 1);\r\n\r\n      // reset the \"buffered\" (loaded byte ranges) array\r\n      s.buffered = [];\r\n\r\n      if (ranges && ranges.length) {\r\n\r\n        // if loaded is 0, try TimeRanges implementation as % of load\r\n        // https://developer.mozilla.org/en/DOM/TimeRanges\r\n\r\n        // re-build \"buffered\" array\r\n        // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\r\n        for (i = 0, j = ranges.length; i < j; i++) {\r\n          s.buffered.push({\r\n            start: ranges.start(i) * msecScale,\r\n            end: ranges.end(i) * msecScale\r\n          });\r\n        }\r\n\r\n        // use the last value locally\r\n        buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\r\n\r\n        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\r\n        loaded = Math.min(1, buffered / (e.target.duration * msecScale));\r\n\r\n        // <d>\r\n        if (isProgress && ranges.length > 1) {\r\n          progStr = [];\r\n          j = ranges.length;\r\n          for (i = 0; i < j; i++) {\r\n            progStr.push((e.target.buffered.start(i) * msecScale) + '-' + (e.target.buffered.end(i) * msecScale));\r\n          }\r\n          sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\r\n        }\r\n\r\n        if (isProgress && !isNaN(loaded)) {\r\n          sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n      if (!isNaN(loaded)) {\r\n\r\n        // TODO: prevent calls with duplicate values.\r\n        s._whileloading(loaded, total, s._get_html5_duration());\r\n        if (loaded && total && loaded === total) {\r\n          // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\r\n          html5_events.canplaythrough.call(this, e);\r\n        }\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    ratechange: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': ratechange');\r\n\r\n    }),\r\n\r\n    suspend: html5_event(function(e) {\r\n\r\n      // download paused/stopped, may have finished (eg. onload)\r\n      var s = this._s;\r\n\r\n      sm2._wD(this._s.id + ': suspend');\r\n      html5_events.progress.call(this, e);\r\n      s._onsuspend();\r\n\r\n    }),\r\n\r\n    stalled: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': stalled');\r\n\r\n    }),\r\n\r\n    timeupdate: html5_event(function() {\r\n\r\n      this._s._onTimer();\r\n\r\n    }),\r\n\r\n    waiting: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      // see also: seeking\r\n      sm2._wD(this._s.id + ': waiting');\r\n\r\n      // playback faster than download rate, etc.\r\n      s._onbufferchange(1);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  html5OK = function(iO) {\r\n\r\n    // playability test based on URL or MIME type\r\n\r\n    var result;\r\n\r\n    if (!iO || (!iO.type && !iO.url && !iO.serverURL)) {\r\n\r\n      // nothing to check\r\n      result = false;\r\n\r\n    } else if (iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\r\n\r\n      // RTMP, or preferring flash\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\r\n      result = ((iO.type ? html5CanPlay({ type: iO.type }) : html5CanPlay({ url: iO.url }) || sm2.html5Only || iO.url.match(/data:/i)));\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  html5Unload = function(oAudio) {\r\n\r\n    /**\r\n     * Internal method: Unload media, and cancel any current/pending network requests.\r\n     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n     * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n     */\r\n\r\n    var url;\r\n\r\n    if (oAudio) {\r\n\r\n      // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\r\n      // Desktop Safari complains / fails on data: URI, so it gets about:blank.\r\n      url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\r\n\r\n      oAudio.src = url;\r\n\r\n      // reset some state, too\r\n      if (oAudio._called_unload !== _undefined) {\r\n        oAudio._called_load = false;\r\n      }\r\n\r\n    }\r\n\r\n    if (useGlobalHTML5Audio) {\r\n\r\n      // ensure URL state is trashed, also\r\n      lastGlobalHTML5URL = null;\r\n\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  html5CanPlay = function(o) {\r\n\r\n    /**\r\n     * Try to find MIME, test and return truthiness\r\n     * o = {\r\n     *  url: '/path/to/an.mp3',\r\n     *  type: 'audio/mp3'\r\n     * }\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\r\n\r\n    var url = (o.url || null),\r\n        mime = (o.type || null),\r\n        aF = sm2.audioFormats,\r\n        result,\r\n        offset,\r\n        fileExt,\r\n        item;\r\n\r\n    // account for known cases like audio/mp3\r\n\r\n    if (mime && sm2.html5[mime] !== _undefined) return (sm2.html5[mime] && !preferFlashCheck(mime));\r\n\r\n    if (!html5Ext) {\r\n\r\n      html5Ext = [];\r\n\r\n      for (item in aF) {\r\n\r\n        if (aF.hasOwnProperty(item)) {\r\n\r\n          html5Ext.push(item);\r\n\r\n          if (aF[item].related) {\r\n            html5Ext = html5Ext.concat(aF[item].related);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n    }\r\n\r\n    // TODO: Strip URL queries, etc.\r\n    fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\r\n\r\n    if (!fileExt || !fileExt.length) {\r\n\r\n      if (!mime) {\r\n\r\n        result = false;\r\n\r\n      } else {\r\n\r\n        // audio/mp3 -> mp3, result should be known\r\n        offset = mime.indexOf(';');\r\n\r\n        // strip \"audio/X; codecs...\"\r\n        fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      // match the raw extension name - \"mp3\", for example\r\n      fileExt = fileExt[1];\r\n\r\n    }\r\n\r\n    if (fileExt && sm2.html5[fileExt] !== _undefined) {\r\n\r\n      // result known\r\n      result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\r\n\r\n    } else {\r\n\r\n      mime = 'audio/' + fileExt;\r\n      result = sm2.html5.canPlayType({ type: mime });\r\n\r\n      sm2.html5[fileExt] = result;\r\n\r\n      // sm2._wD('canPlayType, found result: ' + result);\r\n      result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  testHTML5 = function() {\r\n\r\n    /**\r\n     * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n     * assigns results to html5[] and flash[].\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n\r\n      // without HTML5, we need Flash.\r\n      sm2.html5.usingFlash = true;\r\n      needsFlash = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\r\n    var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\r\n        item, lookup, support = {}, aF, i;\r\n\r\n    function cp(m) {\r\n\r\n      var canPlay, j,\r\n          result = false,\r\n          isOK = false;\r\n\r\n      if (!a || typeof a.canPlayType !== 'function') return result;\r\n\r\n      if (m instanceof Array) {\r\n\r\n        // iterate through all mime types, return any successes\r\n\r\n        for (i = 0, j = m.length; i < j; i++) {\r\n\r\n          if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\r\n\r\n            isOK = true;\r\n            sm2.html5[m[i]] = true;\r\n\r\n            // note flash support, too\r\n            sm2.flash[m[i]] = !!(m[i].match(flashMIME));\r\n\r\n          }\r\n\r\n        }\r\n\r\n        result = isOK;\r\n\r\n      } else {\r\n\r\n        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\r\n        result = !!(canPlay && (canPlay.match(sm2.html5Test)));\r\n\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n\r\n    // test all registered formats + codecs\r\n\r\n    aF = sm2.audioFormats;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        lookup = 'audio/' + item;\r\n\r\n        support[item] = cp(aF[item].type);\r\n\r\n        // write back generic type too, eg. audio/mp3\r\n        support[lookup] = support[item];\r\n\r\n        // assign flash\r\n        if (item.match(flashMIME)) {\r\n\r\n          sm2.flash[item] = true;\r\n          sm2.flash[lookup] = true;\r\n\r\n        } else {\r\n\r\n          sm2.flash[item] = false;\r\n          sm2.flash[lookup] = false;\r\n\r\n        }\r\n\r\n        // assign result to related formats, too\r\n\r\n        if (aF[item] && aF[item].related) {\r\n\r\n          for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n\r\n            // eg. audio/m4a\r\n            support['audio/' + aF[item].related[i]] = support[item];\r\n            sm2.html5[aF[item].related[i]] = support[item];\r\n            sm2.flash[aF[item].related[i]] = support[item];\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    support.canPlayType = (a ? cp : null);\r\n    sm2.html5 = mixin(sm2.html5, support);\r\n\r\n    sm2.html5.usingFlash = featureCheck();\r\n    needsFlash = sm2.html5.usingFlash;\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  strings = {\r\n\r\n    // <d>\r\n    notReady: 'Unavailable - wait until onready() has fired.',\r\n    notOK: 'Audio support is not available.',\r\n    domError: sm + 'exception caught while appending SWF to DOM.',\r\n    spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\r\n    swf404: smc + 'Verify that %s is a valid path.',\r\n    tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\r\n    checkSWF: 'See SWF output for more debug info.',\r\n    localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\r\n    waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\r\n    waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\r\n    waitSWF: smc + 'Waiting for 100% SWF load...',\r\n    needFunction: smc + 'Function object expected for %s',\r\n    badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\r\n    currentObj: smc + '_debug(): Current sound objects',\r\n    waitOnload: smc + 'Waiting for window.onload()',\r\n    docLoaded: smc + 'Document already loaded',\r\n    onload: smc + 'initComplete(): calling soundManager.onload()',\r\n    onloadOK: sm + '.onload() complete',\r\n    didInit: smc + 'init(): Already called?',\r\n    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\r\n    badRemove: smc + 'Failed to remove Flash node.',\r\n    shutdown: sm + '.disable(): Shutting down',\r\n    queue: smc + 'Queueing %s handler',\r\n    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\r\n    fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\r\n    fbLoaded: 'Flash loaded',\r\n    fbHandler: smc + 'flashBlockHandler()',\r\n    manURL: 'SMSound.load(): Using manually-assigned URL',\r\n    onURL: sm + '.load(): current URL already assigned.',\r\n    badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\r\n    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\r\n    noNSLoop: 'Note: Looping not implemented for MovieStar formats',\r\n    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\r\n    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\r\n    needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\r\n    gotFocus: smc + 'Got window focus.',\r\n    policy: 'Enabling usePolicyFile for data access',\r\n    setup: sm + '.setup(): allowed parameters: %s',\r\n    setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\r\n    setupUndef: sm + '.setup(): Could not find option \"%s\"',\r\n    setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\r\n    noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\r\n    sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\r\n    reset: sm + '.reset(): Removing event callbacks',\r\n    mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\r\n    globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\r\n    ignoreMobile: 'Ignoring mobile restrictions for this device.'\r\n    // </d>\r\n\r\n  };\r\n\r\n  str = function() {\r\n\r\n    // internal string replace helper.\r\n    // arguments: o [,items to replace]\r\n    // <d>\r\n\r\n    var args,\r\n        i, j, o,\r\n        sstr;\r\n\r\n    // real array, please\r\n    args = slice.call(arguments);\r\n\r\n    // first argument\r\n    o = args.shift();\r\n\r\n    sstr = (strings && strings[o] ? strings[o] : '');\r\n\r\n    if (sstr && args && args.length) {\r\n      for (i = 0, j = args.length; i < j; i++) {\r\n        sstr = sstr.replace('%s', args[i]);\r\n      }\r\n    }\r\n\r\n    return sstr;\r\n    // </d>\r\n\r\n  };\r\n\r\n  loopFix = function(sOpt) {\r\n\r\n    // flash 8 requires stream = false for looping to work\r\n    if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\r\n      _wDS('as2loop');\r\n      sOpt.stream = false;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  policyFix = function(sOpt, sPre) {\r\n\r\n    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\r\n      sm2._wD((sPre || '') + str('policy'));\r\n      sOpt.usePolicyFile = true;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  complain = function(sMsg) {\r\n\r\n    // <d>\r\n    if (hasConsole && console.warn !== _undefined) {\r\n      console.warn(sMsg);\r\n    } else {\r\n      sm2._wD(sMsg);\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  doNothing = function() {\r\n\r\n    return false;\r\n\r\n  };\r\n\r\n  disableObject = function(o) {\r\n\r\n    var oProp;\r\n\r\n    for (oProp in o) {\r\n      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\r\n        o[oProp] = doNothing;\r\n      }\r\n    }\r\n\r\n    oProp = null;\r\n\r\n  };\r\n\r\n  failSafely = function(bNoDisable) {\r\n\r\n    // general failure exception handler\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled || bNoDisable) {\r\n      sm2.disable(bNoDisable);\r\n    }\r\n\r\n  };\r\n\r\n  normalizeMovieURL = function(movieURL) {\r\n\r\n    var urlParams = null, url;\r\n\r\n    if (movieURL) {\r\n\r\n      if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\r\n\r\n        urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4);\r\n\r\n        // assume user knows what they're doing\r\n        if (urlParams) return movieURL;\r\n\r\n      } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\r\n\r\n        // append trailing slash, if needed\r\n        movieURL += '/';\r\n\r\n      }\r\n\r\n    }\r\n\r\n    url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\r\n\r\n    if (sm2.noSWFCache) {\r\n      url += ('?ts=' + new Date().getTime());\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  setVersionInfo = function() {\r\n\r\n    // short-hand for internal use\r\n\r\n    fV = parseInt(sm2.flashVersion, 10);\r\n\r\n    if (fV !== 8 && fV !== 9) {\r\n      sm2._wD(str('badFV', fV, defaultFlashVersion));\r\n      sm2.flashVersion = fV = defaultFlashVersion;\r\n    }\r\n\r\n    // debug flash movie, if applicable\r\n\r\n    var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\r\n\r\n    if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\r\n      sm2._wD(str('needfl9'));\r\n      sm2.flashVersion = fV = 9;\r\n    }\r\n\r\n    sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\r\n\r\n    // set up default options\r\n    if (fV > 8) {\r\n\r\n      // +flash 9 base options\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\r\n      sm2.features.buffering = true;\r\n\r\n      // +moviestar support\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\r\n      sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n      sm2.features.movieStar = true;\r\n\r\n    } else {\r\n\r\n      sm2.features.movieStar = false;\r\n\r\n    }\r\n\r\n    // regExp for flash canPlay(), etc.\r\n    sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\r\n\r\n    // if applicable, use _debug versions of SWFs\r\n    sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\r\n\r\n    sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\r\n\r\n  };\r\n\r\n  setPolling = function(bPolling, bHighPerformance) {\r\n\r\n    if (!flash) {\r\n      return;\r\n    }\r\n\r\n    flash._setPolling(bPolling, bHighPerformance);\r\n\r\n  };\r\n\r\n  initDebug = function() {\r\n\r\n    // starts debug mode, creating output <div> for UAs without console object\r\n\r\n    // allow force of debug mode via URL\r\n    // <d>\r\n    if (sm2.debugURLParam.test(wl)) {\r\n      sm2.setupOptions.debugMode = sm2.debugMode = true;\r\n    }\r\n\r\n    if (id(sm2.debugID)) {\r\n      return;\r\n    }\r\n\r\n    var oD, oDebug, oTarget, oToggle, tmp;\r\n\r\n    if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\r\n\r\n      oD = doc.createElement('div');\r\n      oD.id = sm2.debugID + '-toggle';\r\n\r\n      oToggle = {\r\n        position: 'fixed',\r\n        bottom: '0px',\r\n        right: '0px',\r\n        width: '1.2em',\r\n        height: '1.2em',\r\n        lineHeight: '1.2em',\r\n        margin: '2px',\r\n        textAlign: 'center',\r\n        border: '1px solid #999',\r\n        cursor: 'pointer',\r\n        background: '#fff',\r\n        color: '#333',\r\n        zIndex: 10001\r\n      };\r\n\r\n      oD.appendChild(doc.createTextNode('-'));\r\n      oD.onclick = toggleDebug;\r\n      oD.title = 'Toggle SM2 debug console';\r\n\r\n      if (ua.match(/msie 6/i)) {\r\n        oD.style.position = 'absolute';\r\n        oD.style.cursor = 'hand';\r\n      }\r\n\r\n      for (tmp in oToggle) {\r\n        if (oToggle.hasOwnProperty(tmp)) {\r\n          oD.style[tmp] = oToggle[tmp];\r\n        }\r\n      }\r\n\r\n      oDebug = doc.createElement('div');\r\n      oDebug.id = sm2.debugID;\r\n      oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\r\n\r\n      if (sm2.debugMode && !id(oD.id)) {\r\n        try {\r\n          oTarget = getDocument();\r\n          oTarget.appendChild(oD);\r\n        } catch(e2) {\r\n          throw new Error(str('domError') + ' \\n' + e2.toString());\r\n        }\r\n        oTarget.appendChild(oDebug);\r\n      }\r\n\r\n    }\r\n\r\n    oTarget = null;\r\n    // </d>\r\n\r\n  };\r\n\r\n  idCheck = this.getSoundById;\r\n\r\n  // <d>\r\n  _wDS = function(o, errorLevel) {\r\n\r\n    return (!o ? '' : sm2._wD(str(o), errorLevel));\r\n\r\n  };\r\n\r\n  toggleDebug = function() {\r\n\r\n    var o = id(sm2.debugID),\r\n    oT = id(sm2.debugID + '-toggle');\r\n\r\n    if (!o) {\r\n      return;\r\n    }\r\n\r\n    if (debugOpen) {\r\n      // minimize\r\n      oT.innerHTML = '+';\r\n      o.style.display = 'none';\r\n    } else {\r\n      oT.innerHTML = '-';\r\n      o.style.display = 'block';\r\n    }\r\n\r\n    debugOpen = !debugOpen;\r\n\r\n  };\r\n\r\n  debugTS = function(sEventType, bSuccess, sMessage) {\r\n\r\n    // troubleshooter debug hooks\r\n\r\n    if (window.sm2Debugger !== _undefined) {\r\n      try {\r\n        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\r\n      } catch(e) {\r\n        // oh well\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n  // </d>\r\n\r\n  getSWFCSS = function() {\r\n\r\n    var css = [];\r\n\r\n    if (sm2.debugMode) {\r\n      css.push(swfCSS.sm2Debug);\r\n    }\r\n\r\n    if (sm2.debugFlash) {\r\n      css.push(swfCSS.flashDebug);\r\n    }\r\n\r\n    if (sm2.useHighPerformance) {\r\n      css.push(swfCSS.highPerf);\r\n    }\r\n\r\n    return css.join(' ');\r\n\r\n  };\r\n\r\n  flashBlockHandler = function() {\r\n\r\n    // *possible* flash block situation.\r\n\r\n    var name = str('fbHandler'),\r\n        p = sm2.getMoviePercent(),\r\n        css = swfCSS,\r\n        error = {\r\n          type: 'FLASHBLOCK'\r\n        };\r\n\r\n    if (sm2.html5Only) {\r\n      // no flash, or unused\r\n      return;\r\n    }\r\n\r\n    if (!sm2.ok()) {\r\n\r\n      if (needsFlash) {\r\n        // make the movie more visible, so user can fix\r\n        sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\r\n        sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\r\n      }\r\n\r\n      sm2.didFlashBlock = true;\r\n\r\n      // fire onready(), complain lightly\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        ignoreInit: true,\r\n        error: error\r\n      });\r\n\r\n      catchError(error);\r\n\r\n    } else {\r\n\r\n      // SM2 loaded OK (or recovered)\r\n\r\n      // <d>\r\n      if (sm2.didFlashBlock) {\r\n        sm2._wD(name + ': Unblocked');\r\n      }\r\n      // </d>\r\n\r\n      if (sm2.oMC) {\r\n        sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  addOnEvent = function(sType, oMethod, oScope) {\r\n\r\n    if (on_queue[sType] === _undefined) {\r\n      on_queue[sType] = [];\r\n    }\r\n\r\n    on_queue[sType].push({\r\n      method: oMethod,\r\n      scope: (oScope || null),\r\n      fired: false\r\n    });\r\n\r\n  };\r\n\r\n  processOnEvents = function(oOptions) {\r\n\r\n    // if unspecified, assume OK/error\r\n\r\n    if (!oOptions) {\r\n      oOptions = {\r\n        type: (sm2.ok() ? 'onready' : 'ontimeout')\r\n      };\r\n    }\r\n\r\n    // not ready yet.\r\n    if (!didInit && oOptions && !oOptions.ignoreInit) return false;\r\n\r\n    // invalid case\r\n    if (oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) return false;\r\n\r\n    var status = {\r\n          success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\r\n        },\r\n\r\n        // queue specified by type, or none\r\n        srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\r\n\r\n        queue = [], i, j,\r\n        args = [status],\r\n        canRetry = (needsFlash && !sm2.ok());\r\n\r\n    if (oOptions.error) {\r\n      args[0].error = oOptions.error;\r\n    }\r\n\r\n    for (i = 0, j = srcQueue.length; i < j; i++) {\r\n      if (srcQueue[i].fired !== true) {\r\n        queue.push(srcQueue[i]);\r\n      }\r\n    }\r\n\r\n    if (queue.length) {\r\n\r\n      // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\r\n      for (i = 0, j = queue.length; i < j; i++) {\r\n\r\n        if (queue[i].scope) {\r\n          queue[i].method.apply(queue[i].scope, args);\r\n        } else {\r\n          queue[i].method.apply(this, args);\r\n        }\r\n\r\n        if (!canRetry) {\r\n          // useFlashBlock and SWF timeout case doesn't count here.\r\n          queue[i].fired = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initUserOnload = function() {\r\n\r\n    window.setTimeout(function() {\r\n\r\n      if (sm2.useFlashBlock) {\r\n        flashBlockHandler();\r\n      }\r\n\r\n      processOnEvents();\r\n\r\n      // call user-defined \"onload\", scoped to window\r\n\r\n      if (typeof sm2.onload === 'function') {\r\n        _wDS('onload', 1);\r\n        sm2.onload.apply(window);\r\n        _wDS('onloadOK', 1);\r\n      }\r\n\r\n      if (sm2.waitForWindowLoad) {\r\n        event.add(window, 'load', initUserOnload);\r\n      }\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  detectFlash = function() {\r\n\r\n    /**\r\n     * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n     * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n     */\r\n\r\n    // this work has already been done.\r\n    if (hasFlash !== _undefined) return hasFlash;\r\n\r\n    var hasPlugin = false, n = navigator, obj, type, types, AX = window.ActiveXObject;\r\n\r\n    // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\r\n    var nP;\r\n\r\n    try {\r\n      nP = n.plugins;\r\n    } catch(e) {\r\n      nP = undefined;\r\n    }\r\n\r\n    if (nP && nP.length) {\r\n\r\n      type = 'application/x-shockwave-flash';\r\n      types = n.mimeTypes;\r\n\r\n      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\r\n        hasPlugin = true;\r\n      }\r\n\r\n    } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\r\n\r\n      // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\r\n      try {\r\n        obj = new AX('ShockwaveFlash.ShockwaveFlash');\r\n      } catch(e) {\r\n        // oh well\r\n        obj = null;\r\n      }\r\n\r\n      hasPlugin = (!!obj);\r\n\r\n      // cleanup, because it is ActiveX after all\r\n      obj = null;\r\n\r\n    }\r\n\r\n    hasFlash = hasPlugin;\r\n\r\n    return hasPlugin;\r\n\r\n  };\r\n\r\n  featureCheck = function() {\r\n\r\n    var flashNeeded,\r\n        item,\r\n        formats = sm2.audioFormats,\r\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\r\n        isSpecial = (is_iDevice && !!(ua.match(/os (1|2|3_0|3_1)\\s/i)));\r\n\r\n    if (isSpecial) {\r\n\r\n      // has Audio(), but is broken; let it load links directly.\r\n      sm2.hasHTML5 = false;\r\n\r\n      // ignore flash case, however\r\n      sm2.html5Only = true;\r\n\r\n      // hide the SWF, if present\r\n      if (sm2.oMC) {\r\n        sm2.oMC.style.display = 'none';\r\n      }\r\n\r\n    } else if (sm2.useHTML5Audio) {\r\n\r\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\r\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\r\n          sm2.hasHTML5 = false;\r\n        }\r\n\r\n        // <d>\r\n        if (isBadSafari) {\r\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n\r\n      // sort out whether flash is optional, required or can be ignored.\r\n\r\n      // innocent until proven guilty.\r\n      canIgnoreFlash = true;\r\n\r\n      for (item in formats) {\r\n\r\n        if (formats.hasOwnProperty(item)) {\r\n\r\n          if (formats[item].required) {\r\n\r\n            if (!sm2.html5.canPlayType(formats[item].type)) {\r\n\r\n              // 100% HTML5 mode is not possible.\r\n              canIgnoreFlash = false;\r\n              flashNeeded = true;\r\n\r\n            } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\r\n\r\n              // flash may be required, or preferred for this format.\r\n              flashNeeded = true;\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // sanity check...\r\n    if (sm2.ignoreFlash) {\r\n      flashNeeded = false;\r\n      canIgnoreFlash = true;\r\n    }\r\n\r\n    sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\r\n\r\n    return (!sm2.html5Only);\r\n\r\n  };\r\n\r\n  parseURL = function(url) {\r\n\r\n    /**\r\n     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n     */\r\n\r\n    var i, j, urlResult = 0, result;\r\n\r\n    if (url instanceof Array) {\r\n\r\n      // find the first good one\r\n      for (i = 0, j = url.length; i < j; i++) {\r\n\r\n        if (url[i] instanceof Object) {\r\n\r\n          // MIME check\r\n          if (sm2.canPlayMIME(url[i].type)) {\r\n            urlResult = i;\r\n            break;\r\n          }\r\n\r\n        } else if (sm2.canPlayURL(url[i])) {\r\n\r\n          // URL string check\r\n          urlResult = i;\r\n          break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // normalize to string\r\n      if (url[urlResult].url) {\r\n        url[urlResult] = url[urlResult].url;\r\n      }\r\n\r\n      result = url[urlResult];\r\n\r\n    } else {\r\n\r\n      // single URL case\r\n      result = url;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  startTimer = function(oSound) {\r\n\r\n    /**\r\n     * attach a timer to this sound, and start an interval if needed\r\n     */\r\n\r\n    if (!oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = true;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        if (h5IntervalTimer === null && h5TimerCount === 0) {\r\n\r\n          h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\r\n\r\n        }\r\n\r\n        h5TimerCount++;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  stopTimer = function(oSound) {\r\n\r\n    /**\r\n     * detach a timer\r\n     */\r\n\r\n    if (oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = false;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        // interval will stop itself at next execution.\r\n\r\n        h5TimerCount--;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  timerExecute = function() {\r\n\r\n    /**\r\n     * manual polling for HTML5 progress events, ie., whileplaying()\r\n     * (can achieve greater precision than conservative default HTML5 interval)\r\n     */\r\n\r\n    var i;\r\n\r\n    if (h5IntervalTimer !== null && !h5TimerCount) {\r\n\r\n      // no active timers, stop polling interval.\r\n\r\n      clearInterval(h5IntervalTimer);\r\n\r\n      h5IntervalTimer = null;\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    // check all HTML5 sounds with timers\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n\r\n      if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\r\n        sm2.sounds[sm2.soundIDs[i]]._onTimer();\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  catchError = function(options) {\r\n\r\n    options = (options !== _undefined ? options : {});\r\n\r\n    if (typeof sm2.onerror === 'function') {\r\n      sm2.onerror.apply(window, [{\r\n        type: (options.type !== _undefined ? options.type : null)\r\n      }]);\r\n    }\r\n\r\n    if (options.fatal !== _undefined && options.fatal) {\r\n      sm2.disable();\r\n    }\r\n\r\n  };\r\n\r\n  badSafariFix = function() {\r\n\r\n    // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\r\n    if (!isBadSafari || !detectFlash()) {\r\n      // doesn't apply\r\n      return;\r\n    }\r\n\r\n    var aF = sm2.audioFormats, i, item;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        if (item === 'mp3' || item === 'mp4') {\r\n\r\n          sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\r\n          sm2.html5[item] = false;\r\n\r\n          // assign result to related formats, too\r\n          if (aF[item] && aF[item].related) {\r\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n              sm2.html5[aF[item].related[i]] = false;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Pseudo-private flash/ExternalInterface methods\r\n   * ----------------------------------------------\r\n   */\r\n\r\n  this._setSandboxType = function(sandboxType) {\r\n\r\n    // <d>\r\n    // Security sandbox according to Flash plugin\r\n    var sb = sm2.sandbox;\r\n\r\n    sb.type = sandboxType;\r\n    sb.description = sb.types[(sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown')];\r\n\r\n    if (sb.type === 'localWithFile') {\r\n\r\n      sb.noRemote = true;\r\n      sb.noLocal = false;\r\n      _wDS('secNote', 2);\r\n\r\n    } else if (sb.type === 'localWithNetwork') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = true;\r\n\r\n    } else if (sb.type === 'localTrusted') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = false;\r\n\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  this._externalInterfaceOK = function(swfVersion) {\r\n\r\n    // flash callback confirming flash loaded, EI working etc.\r\n    // swfVersion: SWF build string\r\n\r\n    if (sm2.swfLoaded) {\r\n      return;\r\n    }\r\n\r\n    var e;\r\n\r\n    debugTS('swf', true);\r\n    debugTS('flashtojs', true);\r\n    sm2.swfLoaded = true;\r\n    tryInitOnFocus = false;\r\n\r\n    if (isBadSafari) {\r\n      badSafariFix();\r\n    }\r\n\r\n    // complain if JS + SWF build/version strings don't match, excluding +DEV builds\r\n    // <d>\r\n    if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\r\n\r\n      e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\r\n\r\n      // escape flash -> JS stack so this error fires in window.\r\n      setTimeout(function() {\r\n        throw new Error(e);\r\n      }, 0);\r\n\r\n      // exit, init will fail with timeout\r\n      return;\r\n\r\n    }\r\n    // </d>\r\n\r\n    // IE needs a larger timeout\r\n    setTimeout(init, isIE ? 100 : 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * Private initialization helpers\r\n   * ------------------------------\r\n   */\r\n\r\n  createMovie = function(movieID, movieURL) {\r\n\r\n    // ignore if already connected\r\n    if (didAppend && appendSuccess) return false;\r\n\r\n    function initMsg() {\r\n\r\n      // <d>\r\n\r\n      var options = [],\r\n          title,\r\n          msg = [],\r\n          delimiter = ' + ';\r\n\r\n      title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\r\n\r\n      if (!sm2.html5Only) {\r\n\r\n        if (sm2.preferFlash) {\r\n          options.push('preferFlash');\r\n        }\r\n\r\n        if (sm2.useHighPerformance) {\r\n          options.push('useHighPerformance');\r\n        }\r\n\r\n        if (sm2.flashPollingInterval) {\r\n          options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.wmode) {\r\n          options.push('wmode (' + sm2.wmode + ')');\r\n        }\r\n\r\n        if (sm2.debugFlash) {\r\n          options.push('debugFlash');\r\n        }\r\n\r\n        if (sm2.useFlashBlock) {\r\n          options.push('flashBlock');\r\n        }\r\n\r\n      } else if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n      if (options.length) {\r\n        msg = msg.concat([options.join(delimiter)]);\r\n      }\r\n\r\n      sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\r\n\r\n      showSupport();\r\n\r\n      // </d>\r\n\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      // 100% HTML5 mode\r\n      setVersionInfo();\r\n\r\n      initMsg();\r\n      sm2.oMC = id(sm2.movieID);\r\n      init();\r\n\r\n      // prevent multiple init attempts\r\n      didAppend = true;\r\n\r\n      appendSuccess = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // flash path\r\n    var remoteURL = (movieURL || sm2.url),\r\n    localURL = (sm2.altURL || remoteURL),\r\n    swfTitle = 'JS/Flash audio component (SoundManager 2)',\r\n    oTarget = getDocument(),\r\n    extraClass = getSWFCSS(),\r\n    isRTL = null,\r\n    html = doc.getElementsByTagName('html')[0],\r\n    oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\r\n\r\n    isRTL = (html && html.dir && html.dir.match(/rtl/i));\r\n    movieID = (movieID === _undefined ? sm2.id : movieID);\r\n\r\n    function param(name, value) {\r\n      return '<param name=\"' + name + '\" value=\"' + value + '\" />';\r\n    }\r\n\r\n    // safety check for legacy (change to Flash 9 URL)\r\n    setVersionInfo();\r\n    sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\r\n    movieURL = sm2.url;\r\n\r\n    sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\r\n\r\n    if (sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\r\n      /**\r\n       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n       */\r\n      messages.push(strings.spcWmode);\r\n      sm2.wmode = null;\r\n    }\r\n\r\n    oEmbed = {\r\n      name: movieID,\r\n      id: movieID,\r\n      src: movieURL,\r\n      quality: 'high',\r\n      allowScriptAccess: sm2.allowScriptAccess,\r\n      bgcolor: sm2.bgColor,\r\n      pluginspage: http + 'www.macromedia.com/go/getflashplayer',\r\n      title: swfTitle,\r\n      type: 'application/x-shockwave-flash',\r\n      wmode: sm2.wmode,\r\n      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n      hasPriority: 'true'\r\n    };\r\n\r\n    if (sm2.debugFlash) {\r\n      oEmbed.FlashVars = 'debug=1';\r\n    }\r\n\r\n    if (!sm2.wmode) {\r\n      // don't write empty attribute\r\n      delete oEmbed.wmode;\r\n    }\r\n\r\n    if (isIE) {\r\n\r\n      // IE is \"special\".\r\n      oMovie = doc.createElement('div');\r\n      movieHTML = [\r\n        '<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\r\n        param('movie', movieURL),\r\n        param('AllowScriptAccess', sm2.allowScriptAccess),\r\n        param('quality', oEmbed.quality),\r\n        (sm2.wmode ? param('wmode', sm2.wmode) : ''),\r\n        param('bgcolor', sm2.bgColor),\r\n        param('hasPriority', 'true'),\r\n        (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),\r\n        '</object>'\r\n      ].join('');\r\n\r\n    } else {\r\n\r\n      oMovie = doc.createElement('embed');\r\n      for (tmp in oEmbed) {\r\n        if (oEmbed.hasOwnProperty(tmp)) {\r\n          oMovie.setAttribute(tmp, oEmbed[tmp]);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    initDebug();\r\n    extraClass = getSWFCSS();\r\n    oTarget = getDocument();\r\n\r\n    if (oTarget) {\r\n\r\n      sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\r\n\r\n      if (!sm2.oMC.id) {\r\n\r\n        sm2.oMC.id = sm2.movieID;\r\n        sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\r\n        s = null;\r\n        oEl = null;\r\n\r\n        if (!sm2.useFlashBlock) {\r\n          if (sm2.useHighPerformance) {\r\n            // on-screen at all times\r\n            s = {\r\n              position: 'fixed',\r\n              width: '8px',\r\n              height: '8px',\r\n              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\r\n              bottom: '0px',\r\n              left: '0px',\r\n              overflow: 'hidden'\r\n            };\r\n          } else {\r\n            // hide off-screen, lower priority\r\n            s = {\r\n              position: 'absolute',\r\n              width: '6px',\r\n              height: '6px',\r\n              top: '-9999px',\r\n              left: '-9999px'\r\n            };\r\n            if (isRTL) {\r\n              s.left = Math.abs(parseInt(s.left, 10)) + 'px';\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isWebkit) {\r\n          // soundcloud-reported render/crash fix, safari 5\r\n          sm2.oMC.style.zIndex = 10000;\r\n        }\r\n\r\n        if (!sm2.debugFlash) {\r\n          for (x in s) {\r\n            if (s.hasOwnProperty(x)) {\r\n              sm2.oMC.style[x] = s[x];\r\n            }\r\n          }\r\n        }\r\n\r\n        try {\r\n\r\n          if (!isIE) {\r\n            sm2.oMC.appendChild(oMovie);\r\n          }\r\n\r\n          oTarget.appendChild(sm2.oMC);\r\n\r\n          if (isIE) {\r\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n            oEl.className = swfCSS.swfBox;\r\n            oEl.innerHTML = movieHTML;\r\n          }\r\n\r\n          appendSuccess = true;\r\n\r\n        } catch(e) {\r\n\r\n          throw new Error(str('domError') + ' \\n' + e.toString());\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // SM2 container is already in the document (eg. flashblock use case)\r\n        sClass = sm2.oMC.className;\r\n        sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\r\n        sm2.oMC.appendChild(oMovie);\r\n\r\n        if (isIE) {\r\n          oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n          oEl.className = swfCSS.swfBox;\r\n          oEl.innerHTML = movieHTML;\r\n        }\r\n\r\n        appendSuccess = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    didAppend = true;\r\n\r\n    initMsg();\r\n\r\n    // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initMovie = function() {\r\n\r\n    if (sm2.html5Only) {\r\n      createMovie();\r\n      return false;\r\n    }\r\n\r\n    // attempt to get, or create, movie (may already exist)\r\n    if (flash) return false;\r\n\r\n    if (!sm2.url) {\r\n\r\n      /**\r\n       * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n       * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n       * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n       */\r\n\r\n       _wDS('noURL');\r\n       return false;\r\n\r\n    }\r\n\r\n    // inline markup case\r\n    flash = sm2.getMovie(sm2.id);\r\n\r\n    if (!flash) {\r\n\r\n      if (!oRemoved) {\r\n\r\n        // try to create\r\n        createMovie(sm2.id, sm2.url);\r\n\r\n      } else {\r\n\r\n        // try to re-append removed movie after reboot()\r\n        if (!isIE) {\r\n          sm2.oMC.appendChild(oRemoved);\r\n        } else {\r\n          sm2.oMC.innerHTML = oRemovedHTML;\r\n        }\r\n\r\n        oRemoved = null;\r\n        didAppend = true;\r\n\r\n      }\r\n\r\n      flash = sm2.getMovie(sm2.id);\r\n\r\n    }\r\n\r\n    if (typeof sm2.oninitmovie === 'function') {\r\n      setTimeout(sm2.oninitmovie, 1);\r\n    }\r\n\r\n    // <d>\r\n    flushMessages();\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  delayWaitForEI = function() {\r\n\r\n    setTimeout(waitForEI, 1000);\r\n\r\n  };\r\n\r\n  rebootIntoHTML5 = function() {\r\n\r\n    // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\r\n\r\n    window.setTimeout(function() {\r\n\r\n      complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\r\n\r\n      sm2.setup({\r\n        preferFlash: false\r\n      }).reboot();\r\n\r\n      // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\r\n      sm2.didFlashBlock = true;\r\n\r\n      sm2.beginDelayedInit();\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  waitForEI = function() {\r\n\r\n    var p,\r\n        loadIncomplete = false;\r\n\r\n    if (!sm2.url) {\r\n      // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\r\n      return;\r\n    }\r\n\r\n    if (waitingForEI) {\r\n      return;\r\n    }\r\n\r\n    waitingForEI = true;\r\n    event.remove(window, 'load', delayWaitForEI);\r\n\r\n    if (hasFlash && tryInitOnFocus && !isFocused) {\r\n      // Safari won't load flash in background tabs, only when focused.\r\n      _wDS('waitFocus');\r\n      return;\r\n    }\r\n\r\n    if (!didInit) {\r\n      p = sm2.getMoviePercent();\r\n      if (p > 0 && p < 100) {\r\n        loadIncomplete = true;\r\n      }\r\n    }\r\n\r\n    setTimeout(function() {\r\n\r\n      p = sm2.getMoviePercent();\r\n\r\n      if (loadIncomplete) {\r\n        // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\r\n        waitingForEI = false;\r\n        sm2._wD(str('waitSWF'));\r\n        window.setTimeout(delayWaitForEI, 1);\r\n        return;\r\n      }\r\n\r\n      // <d>\r\n      if (!didInit) {\r\n\r\n        sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\r\n\r\n        if (!overHTTP && p) {\r\n\r\n          _wDS('localFail', 2);\r\n\r\n          if (!sm2.debugFlash) {\r\n            _wDS('tryDebug', 2);\r\n          }\r\n\r\n        }\r\n\r\n        if (p === 0) {\r\n\r\n          // if 0 (not null), probably a 404.\r\n          sm2._wD(str('swf404', sm2.url), 1);\r\n\r\n        }\r\n\r\n        debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\r\n\r\n      }\r\n      // </d>\r\n\r\n      // give up / time-out, depending\r\n\r\n      if (!didInit && okToDisable) {\r\n\r\n        if (p === null) {\r\n\r\n          // SWF failed to report load progress. Possibly blocked.\r\n\r\n          if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\r\n\r\n            if (sm2.useFlashBlock) {\r\n\r\n              flashBlockHandler();\r\n\r\n            }\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\r\n            rebootIntoHTML5();\r\n\r\n          } else {\r\n\r\n            _wDS('waitForever');\r\n\r\n            // fire any regular registered ontimeout() listeners.\r\n            processOnEvents({\r\n              type: 'ontimeout',\r\n              ignoreInit: true,\r\n              error: {\r\n                type: 'INIT_FLASHBLOCK'\r\n              }\r\n            });\r\n\r\n          }\r\n\r\n        } else if (sm2.flashLoadTimeout === 0) {\r\n\r\n          // SWF loaded? Shouldn't be a blocking issue, then.\r\n\r\n          _wDS('waitForever');\r\n\r\n        } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n          rebootIntoHTML5();\r\n\r\n        } else {\r\n\r\n          failSafely(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }, sm2.flashLoadTimeout);\r\n\r\n  };\r\n\r\n  handleFocus = function() {\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'focus', handleFocus);\r\n    }\r\n\r\n    if (isFocused || !tryInitOnFocus) {\r\n      // already focused, or not special Safari background tab case\r\n      cleanup();\r\n      return true;\r\n    }\r\n\r\n    okToDisable = true;\r\n    isFocused = true;\r\n    _wDS('gotFocus');\r\n\r\n    // allow init to restart\r\n    waitingForEI = false;\r\n\r\n    // kick off ExternalInterface timeout, now that the SWF has started\r\n    delayWaitForEI();\r\n\r\n    cleanup();\r\n    return true;\r\n\r\n  };\r\n\r\n  flushMessages = function() {\r\n\r\n    // <d>\r\n\r\n    // SM2 pre-init debug messages\r\n    if (messages.length) {\r\n      sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\r\n      messages = [];\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  showSupport = function() {\r\n\r\n    // <d>\r\n\r\n    flushMessages();\r\n\r\n    var item, tests = [];\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n      for (item in sm2.audioFormats) {\r\n        if (sm2.audioFormats.hasOwnProperty(item)) {\r\n          tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\r\n        }\r\n      }\r\n      sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  initComplete = function(bNoDisable) {\r\n\r\n    if (didInit) return false;\r\n\r\n    if (sm2.html5Only) {\r\n      // all good.\r\n      _wDS('sm2Loaded', 1);\r\n      didInit = true;\r\n      initUserOnload();\r\n      debugTS('onload', true);\r\n      return true;\r\n    }\r\n\r\n    var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\r\n        result = true,\r\n        error;\r\n\r\n    if (!wasTimeout) {\r\n      didInit = true;\r\n    }\r\n\r\n    error = {\r\n      type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\r\n    };\r\n\r\n    sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\r\n\r\n    if (disabled || bNoDisable) {\r\n\r\n      if (sm2.useFlashBlock && sm2.oMC) {\r\n        sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\r\n      }\r\n\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        error: error,\r\n        ignoreInit: true\r\n      });\r\n\r\n      debugTS('onload', false);\r\n      catchError(error);\r\n\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      debugTS('onload', true);\r\n\r\n    }\r\n\r\n    if (!disabled) {\r\n\r\n      if (sm2.waitForWindowLoad && !windowLoaded) {\r\n\r\n        _wDS('waitOnload');\r\n        event.add(window, 'load', initUserOnload);\r\n\r\n      } else {\r\n\r\n        // <d>\r\n        if (sm2.waitForWindowLoad && windowLoaded) {\r\n          _wDS('docLoaded');\r\n        }\r\n        // </d>\r\n\r\n        initUserOnload();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n   * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n   */\r\n\r\n  setProperties = function() {\r\n\r\n    var i,\r\n        o = sm2.setupOptions;\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // assign local property if not already defined\r\n\r\n        if (sm2[i] === _undefined) {\r\n\r\n          sm2[i] = o[i];\r\n\r\n        } else if (sm2[i] !== o[i]) {\r\n\r\n          // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\r\n          sm2.setupOptions[i] = sm2[i];\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  init = function() {\r\n\r\n    // called after onload()\r\n\r\n    if (didInit) {\r\n      _wDS('didInit');\r\n      return false;\r\n    }\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'load', sm2.beginDelayedInit);\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      if (!didInit) {\r\n        // we don't need no steenking flash!\r\n        cleanup();\r\n        sm2.enabled = true;\r\n        initComplete();\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    // flash path\r\n    initMovie();\r\n\r\n    try {\r\n\r\n      // attempt to talk to Flash\r\n      flash._externalInterfaceTest(false);\r\n\r\n      /**\r\n       * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n       * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n       */\r\n      setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\r\n\r\n      if (!sm2.debugMode) {\r\n        // stop the SWF from making debug output calls to JS\r\n        flash._disableDebug();\r\n      }\r\n\r\n      sm2.enabled = true;\r\n      debugTS('jstoflash', true);\r\n\r\n      if (!sm2.html5Only) {\r\n        // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\r\n        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\r\n        event.add(window, 'unload', doNothing);\r\n      }\r\n\r\n    } catch(e) {\r\n\r\n      sm2._wD('js/flash exception: ' + e.toString());\r\n\r\n      debugTS('jstoflash', false);\r\n\r\n      catchError({\r\n        type: 'JS_TO_FLASH_EXCEPTION',\r\n        fatal: true\r\n      });\r\n\r\n      // don't disable, for reboot()\r\n      failSafely(true);\r\n\r\n      initComplete();\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    initComplete();\r\n\r\n    // disconnect events\r\n    cleanup();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoaded = function() {\r\n\r\n    if (didDCLoaded) return false;\r\n\r\n    didDCLoaded = true;\r\n\r\n    // assign top-level soundManager properties eg. soundManager.url\r\n    setProperties();\r\n\r\n    initDebug();\r\n\r\n    if (!hasFlash && sm2.hasHTML5) {\r\n\r\n      sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\r\n\r\n      sm2.setup({\r\n        useHTML5Audio: true,\r\n        // make sure we aren't preferring flash, either\r\n        // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\r\n        preferFlash: false\r\n      });\r\n\r\n    }\r\n\r\n    testHTML5();\r\n\r\n    if (!hasFlash && needsFlash) {\r\n\r\n      messages.push(strings.needFlash);\r\n\r\n      // TODO: Fatal here vs. timeout approach, etc.\r\n      // hack: fail sooner.\r\n      sm2.setup({\r\n        flashLoadTimeout: 1\r\n      });\r\n\r\n    }\r\n\r\n    if (doc.removeEventListener) {\r\n      doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\r\n    }\r\n\r\n    initMovie();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoadedIE = function() {\r\n\r\n    if (doc.readyState === 'complete') {\r\n      domContentLoaded();\r\n      doc.detachEvent('onreadystatechange', domContentLoadedIE);\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  winOnLoad = function() {\r\n\r\n    // catch edge case of initComplete() firing after window.load()\r\n    windowLoaded = true;\r\n\r\n    // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\r\n    domContentLoaded();\r\n\r\n    event.remove(window, 'load', winOnLoad);\r\n\r\n  };\r\n\r\n  // sniff up-front\r\n  detectFlash();\r\n\r\n  // focus and window load, init (primarily flash-driven)\r\n  event.add(window, 'focus', handleFocus);\r\n  event.add(window, 'load', delayWaitForEI);\r\n  event.add(window, 'load', winOnLoad);\r\n\r\n  if (doc.addEventListener) {\r\n\r\n    doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\r\n\r\n  } else if (doc.attachEvent) {\r\n\r\n    doc.attachEvent('onreadystatechange', domContentLoadedIE);\r\n\r\n  } else {\r\n\r\n    // no add/attachevent support - safe to assume no JS -> Flash either\r\n    debugTS('onload', false);\r\n    catchError({\r\n      type: 'NO_DOM2_EVENTS',\r\n      fatal: true\r\n    });\r\n\r\n  }\r\n\r\n} // SoundManager()\r\n\r\n// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\r\n\r\nif (window.SM2_DEFER === _undefined || !SM2_DEFER) {\r\n  soundManager = new SoundManager();\r\n}\r\n\r\n/**\r\n * SoundManager public interfaces\r\n * ------------------------------\r\n */\r\n\r\nif (typeof module === 'object' && module && typeof module.exports === 'object') {\r\n\r\n  /**\r\n   * commonJS module\r\n   */\r\n\r\n  module.exports.SoundManager = SoundManager;\r\n  module.exports.soundManager = soundManager;\r\n\r\n} else if (typeof define === 'function' && define.amd) {\r\n\r\n  /**\r\n   * AMD - requireJS\r\n   * basic usage:\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance().setup({\r\n   *     url: '/swf/',\r\n   *     onready: function() { ... }\r\n   *   })\r\n   * });\r\n   *\r\n   * SM2_DEFER usage:\r\n   * window.SM2_DEFER = true;\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance(function() {\r\n   *     var soundManager = new SoundManager.constructor();\r\n   *     soundManager.setup({\r\n   *       url: '/swf/',\r\n   *       ...\r\n   *     });\r\n   *     ...\r\n   *     soundManager.beginDelayedInit();\r\n   *     return soundManager;\r\n   *   })\r\n   * });\r\n   */\r\n\r\n  define(function() {\r\n    /**\r\n     * Retrieve the global instance of SoundManager.\r\n     * If a global instance does not exist it can be created using a callback.\r\n     *\r\n     * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n     * @return {SoundManager} The global SoundManager instance\r\n     */\r\n    function getInstance(smBuilder) {\r\n      if (!window.soundManager && smBuilder instanceof Function) {\r\n        var instance = smBuilder(SoundManager);\r\n        if (instance instanceof SoundManager) {\r\n          window.soundManager = instance;\r\n        }\r\n      }\r\n      return window.soundManager;\r\n    }\r\n    return {\r\n      constructor: SoundManager,\r\n      getInstance: getInstance\r\n    };\r\n  });\r\n\r\n}\r\n\r\n// standard browser case\r\n\r\n// constructor\r\nwindow.SoundManager = SoundManager;\r\n\r\n/**\r\n * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n */\r\n\r\n// public API, flash callbacks etc.\r\nwindow.soundManager = soundManager;\r\n\r\n}(window));\r\n"]},"metadata":{},"sourceType":"script"}