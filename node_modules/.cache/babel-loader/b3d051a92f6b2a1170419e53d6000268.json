{"ast":null,"code":"var _jsxFileName = \"/home/grito/Projetos/b2w-starwars/src/components/MiddleContent.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport css from '../assets/js/variables';\nconst SectionTop = styled.section`\n position: relative;\n top: 50%;\n transform: translate(0, 10%);\n width: 90%;\n @media (min-width: ${css.grid.tabletFull}px) {\n   width: 500px;\n }\n`;\nconst List = styled.div`\n  display: flex;\n  padding: 0;\n  flex-direction: column;\n  ul {\n    background: ${css.color.black_transparent};\n    border: 2px solid ${css.color.yellow};\n    li {\n      padding 20px 10px;\n      border-bottom: 2px solid ${css.color.yellow};\n      text-align: left;\n    }\n  }\n\n`;\nconst Title = styled.p`\n  padding 0;\n  font-size: 40px;\n  text-align: center;\n  color: ${css.color.white};\n`;\nconst Button = styled.button`\n  display: block;\n  margin: 30px auto;\n  border: 1px solid ${css.color.yellow};\n  border-radius: 20px;\n  background: ${css.color.yellow};\n  width: 100%;\n  height: 40px;\n  color: ${css.color.black};\n  cursor: pointer;\n  :hover {\n    opacity: 0.9;\n  }\n  @media (min-width: ${css.grid.tabletFull}px) {\n    width: 200px;\n  }\n`;\nexport default class PlanetsResult extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      planets: [],\n      NumberHolder: 0\n    };\n\n    this.GenerateRandomNumber = () => {\n      let RandomNumber = Math.floor(Math.random() * 9) + 0;\n\n      if (RandomNumber === this.state.NumberHolder) {\n        RandomNumber = Math.floor(Math.random() * 9) + 0;\n      }\n\n      this.setState({\n        NumberHolder: RandomNumber\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://swapi.co/api/planets').then(res => res.json()).then(res => {\n      this.setState({\n        planets: res.results\n      });\n    });\n  }\n\n  render() {\n    let content = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"Loading...\");\n    let planet = [];\n\n    if (this.state.planets.length !== 0) {\n      planet = this.state.planets[this.state.NumberHolder];\n      content = /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \" \", planet.name, \" \")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Population:\"), \" \", planet.population), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"Terrain:\"), \" \", planet.terrain), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Feature(s) in \", planet.films.length, \" Films\"), \" \")), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.GenerateRandomNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 53\n        }\n      }, \"NEXT\")));\n    }\n\n    return /*#__PURE__*/React.createElement(SectionTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, content);\n  }\n\n}","map":{"version":3,"sources":["/home/grito/Projetos/b2w-starwars/src/components/MiddleContent.js"],"names":["React","styled","css","SectionTop","section","grid","tabletFull","List","div","color","black_transparent","yellow","Title","p","white","Button","button","black","PlanetsResult","Component","state","planets","NumberHolder","GenerateRandomNumber","RandomNumber","Math","floor","random","setState","componentDidMount","fetch","then","res","json","results","render","content","planet","length","name","population","terrain","films"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport css from '../assets/js/variables';\n\nconst SectionTop = styled.section`\n position: relative;\n top: 50%;\n transform: translate(0, 10%);\n width: 90%;\n @media (min-width: ${css.grid.tabletFull}px) {\n   width: 500px;\n }\n`\n\nconst List = styled.div`\n  display: flex;\n  padding: 0;\n  flex-direction: column;\n  ul {\n    background: ${css.color.black_transparent};\n    border: 2px solid ${css.color.yellow};\n    li {\n      padding 20px 10px;\n      border-bottom: 2px solid ${css.color.yellow};\n      text-align: left;\n    }\n  }\n\n`\n\nconst Title = styled.p`\n  padding 0;\n  font-size: 40px;\n  text-align: center;\n  color: ${css.color.white};\n`\n\n\nconst Button = styled.button`\n  display: block;\n  margin: 30px auto;\n  border: 1px solid ${css.color.yellow};\n  border-radius: 20px;\n  background: ${css.color.yellow};\n  width: 100%;\n  height: 40px;\n  color: ${css.color.black};\n  cursor: pointer;\n  :hover {\n    opacity: 0.9;\n  }\n  @media (min-width: ${css.grid.tabletFull}px) {\n    width: 200px;\n  }\n`\n\nexport default class PlanetsResult extends React.Component {\n  state = { planets: [], NumberHolder: 0}\n\n  componentDidMount() {\n    fetch('https://swapi.co/api/planets')\n    .then(res => res.json())\n    .then(res => {\n        this.setState({\n            planets: res.results\n        })\n    })\n  }\n\n  GenerateRandomNumber=()=> {\n    let RandomNumber = Math.floor(Math.random() * 9) + 0 ;\n    if (RandomNumber === this.state.NumberHolder) {\n       RandomNumber = Math.floor(Math.random() * 9) + 0 ;\n    }\n    this.setState({\n      NumberHolder : RandomNumber\n    })\n  }\n\n  render () {\n    let content = <h2>Loading...</h2>\n    let planet = []\n\n    if (this.state.planets.length !== 0) {\n      planet = this.state.planets[this.state.NumberHolder]\n      content = (\n        <List>\n        <ul>\n            <li><Title> {planet.name} </Title></li>\n            <li><b>Population:</b> {planet.population}</li>\n            <li><b>Terrain:</b> {planet.terrain}</li>\n            <li><b>Feature(s) in {planet.films.length} Films</b> </li>\n        </ul>\n        <Button onClick={this.GenerateRandomNumber}><b>NEXT</b></Button>\n        </List>\n      )\n    }\n\n    return (\n    <SectionTop>\n      {content}\n    </SectionTop>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}